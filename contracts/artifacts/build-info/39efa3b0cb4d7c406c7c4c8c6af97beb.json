{
	"id": "39efa3b0cb4d7c406c7c4c8c6af97beb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Betting.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport './IERC20.sol';\nimport './IERC1155.sol';\nimport './IConditionalTokens.sol';\n\ncontract Betting {\n    IERC20 dai;\n    IConditionalTokens conditionalTokens;\n    address public oracle;\n    mapping(bytes32 => mapping(uint => uint)) public tokenBalance;\n    address admin;\n\n    constructor(\n        address _dai,\n        address _conditionalTokens,\n        address _oracle\n    ) {\n        dai = IERC20(_dai);\n        conditionalTokens = IConditionalTokens(_conditionalTokens);\n        oracle = _oracle;\n        admin = msg.sender;\n    }\n\n    function createBet(bytes32 questionId, uint amount) external {\n        conditionalTokens.prepareCondition(\n            oracle,\n            questionId,\n            3 // number of outcomes, eg. win/lose/tie\n        );\n\n        bytes32 conditionId = conditionalTokens.getConditionId(\n            oracle,\n            questionId,\n            3 // number of outcomes, eg. win/lose/tie\n        );\n\n        // A, B, C\n        // A, B | C: the second token represents B or C happens\n\n        // B: 010 binary\n        // C: 100 binary\n        // B|C: 010+100=110 binary => [1,3] for A, B | C\n\n        uint[] memory partition = new uint[](2);\n        partition[0] = 1;\n        partition[1] = 3;\n\n        dai.approve(address(conditionalTokens), amount);\n        conditionalTokens.splitPostion(\n            dai,\n            bytes32(0),\n            conditionId,\n            partition,\n            amount\n        );\n\n        tokenBalance[questionId][0] = amount;\n        tokenBalance[questionId][1] = amount;\n    }\n\n    function transferTokens(\n        bytes32 questionId,\n        uint indexSet,\n        address to,\n        uint amount\n    ) external {\n        require(msg.sender == admin, 'only admin');\n    }\n\n    function onERC1155Received(\n        // address operator,\n        // address from,\n        // uint256 id,\n        // uint256 value,\n        // bytes calldata data\n    ) external pure returns (bytes4) {\n        return bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"));\n    }\n\n    function onERC1155BatchReceived(\n        // address operator,\n        // address from,\n        // uint256[] calldata ids,\n        // uint256[] calldata values,\n        // bytes calldata data\n    ) external pure returns (bytes4) {\n        return bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"));\n    }\n\n}"
			},
			"contracts/IConditionalTokens.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport './IERC20.sol';\nimport './IERC1155.sol';\n\nabstract contract IConditionalTokens is IERC165 {\n    function prepareCondition(address oracle, bytes32 questionId, uint outcome) external virtual;\n\n    function reportPayouts(bytes32 questionId, uint[] calldata payouts) external virtual;\n\n    function splitPostion(\n        IERC20 collateralToken,\n        bytes32 parentCollectionId,\n        bytes32 conditionId,\n        uint[] calldata partition,\n        uint amount\n    ) external virtual;\n\n    function mergePositions(\n        IERC20 collateralToken,\n        bytes32 parentCollectionId,\n        bytes32 conditionId,\n        uint[] calldata partition,\n        uint amount\n    ) external virtual;\n\n    function redeemPositions(\n        IERC20 collateralToken,\n        bytes32 parentCollectionId,\n        bytes32 conditionId,\n        uint[] calldata indexSets\n    ) external virtual;\n\n    function getOutcomeSlotCount(\n        bytes32 conditionId\n    ) external virtual view returns (uint);\n\n    function getConditionId(\n        address oracle,\n        bytes32 questionId,\n        uint getOutcomeSlotCount\n    ) external virtual pure returns (bytes32);\n\n    function getCollectionId(\n        bytes32 parentCollectionId,\n        bytes32 conditionId,\n        uint indexSet\n    ) external virtual view returns (bytes32);\n\n    function getPositionId(\n        IERC20 collateralToken,\n        bytes32 collectionId\n    ) external virtual pure returns (uint);\n}"
			},
			"contracts/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}"
			},
			"contracts/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Betting.sol": {
				"Betting": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_dai",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_conditionalTokens",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_oracle",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "questionId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "createBet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "oracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "questionId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "indexSet",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Betting.sol\":142:2440  contract Betting {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Betting.sol\":337:595  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Betting.sol\":461:465  _dai */\n  dup3\n    /* \"contracts/Betting.sol\":448:451  dai */\n  0x00\n  dup1\n    /* \"contracts/Betting.sol\":448:466  dai = IERC20(_dai) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Betting.sol\":515:533  _conditionalTokens */\n  dup2\n    /* \"contracts/Betting.sol\":476:493  conditionalTokens */\n  0x01\n  0x00\n    /* \"contracts/Betting.sol\":476:534  conditionalTokens = IConditionalTokens(_conditionalTokens) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Betting.sol\":553:560  _oracle */\n  dup1\n    /* \"contracts/Betting.sol\":544:550  oracle */\n  0x02\n  0x00\n    /* \"contracts/Betting.sol\":544:560  oracle = _oracle */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Betting.sol\":578:588  msg.sender */\n  caller\n    /* \"contracts/Betting.sol\":570:575  admin */\n  0x04\n  0x00\n    /* \"contracts/Betting.sol\":570:588  admin = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Betting.sol\":337:595  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/Betting.sol\":142:2440  contract Betting {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:819   */\ntag_3:\n    /* \"#utility.yul\":244:250   */\n  0x00\n    /* \"#utility.yul\":252:258   */\n  dup1\n    /* \"#utility.yul\":260:266   */\n  0x00\n    /* \"#utility.yul\":309:311   */\n  0x60\n    /* \"#utility.yul\":297:306   */\n  dup5\n    /* \"#utility.yul\":288:295   */\n  dup7\n    /* \"#utility.yul\":284:307   */\n  sub\n    /* \"#utility.yul\":280:312   */\n  slt\n    /* \"#utility.yul\":277:396   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":315:394   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":277:396   */\ntag_13:\n    /* \"#utility.yul\":435:436   */\n  0x00\n    /* \"#utility.yul\":460:524   */\n  tag_16\n    /* \"#utility.yul\":516:523   */\n  dup7\n    /* \"#utility.yul\":507:513   */\n  dup3\n    /* \"#utility.yul\":496:505   */\n  dup8\n    /* \"#utility.yul\":492:514   */\n  add\n    /* \"#utility.yul\":460:524   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":450:524   */\n  swap4\n  pop\n    /* \"#utility.yul\":406:534   */\n  pop\n    /* \"#utility.yul\":573:575   */\n  0x20\n    /* \"#utility.yul\":599:663   */\n  tag_17\n    /* \"#utility.yul\":655:662   */\n  dup7\n    /* \"#utility.yul\":646:652   */\n  dup3\n    /* \"#utility.yul\":635:644   */\n  dup8\n    /* \"#utility.yul\":631:653   */\n  add\n    /* \"#utility.yul\":599:663   */\n  tag_8\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":589:663   */\n  swap3\n  pop\n    /* \"#utility.yul\":544:673   */\n  pop\n    /* \"#utility.yul\":712:714   */\n  0x40\n    /* \"#utility.yul\":738:802   */\n  tag_18\n    /* \"#utility.yul\":794:801   */\n  dup7\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":774:783   */\n  dup8\n    /* \"#utility.yul\":770:792   */\n  add\n    /* \"#utility.yul\":738:802   */\n  tag_8\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":728:802   */\n  swap2\n  pop\n    /* \"#utility.yul\":683:812   */\n  pop\n    /* \"#utility.yul\":156:819   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":906:1002   */\ntag_21:\n    /* \"#utility.yul\":943:950   */\n  0x00\n    /* \"#utility.yul\":972:996   */\n  tag_23\n    /* \"#utility.yul\":990:995   */\n  dup3\n    /* \"#utility.yul\":972:996   */\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":961:996   */\n  swap1\n  pop\n    /* \"#utility.yul\":906:1002   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1008:1134   */\ntag_24:\n    /* \"#utility.yul\":1045:1052   */\n  0x00\n    /* \"#utility.yul\":1085:1127   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1078:1083   */\n  dup3\n    /* \"#utility.yul\":1074:1128   */\n  and\n    /* \"#utility.yul\":1063:1128   */\n  swap1\n  pop\n    /* \"#utility.yul\":1008:1134   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1263:1380   */\ntag_15:\n    /* \"#utility.yul\":1372:1373   */\n  0x00\n    /* \"#utility.yul\":1369:1370   */\n  dup1\n    /* \"#utility.yul\":1362:1374   */\n  revert\n    /* \"#utility.yul\":1386:1508   */\ntag_11:\n    /* \"#utility.yul\":1459:1483   */\n  tag_30\n    /* \"#utility.yul\":1477:1482   */\n  dup2\n    /* \"#utility.yul\":1459:1483   */\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1452:1457   */\n  dup2\n    /* \"#utility.yul\":1449:1484   */\n  eq\n    /* \"#utility.yul\":1439:1502   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1498:1499   */\n  0x00\n    /* \"#utility.yul\":1495:1496   */\n  dup1\n    /* \"#utility.yul\":1488:1500   */\n  revert\n    /* \"#utility.yul\":1439:1502   */\ntag_31:\n    /* \"#utility.yul\":1386:1508   */\n  pop\n  jump\t// out\n    /* \"contracts/Betting.sol\":142:2440  contract Betting {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Betting.sol\":142:2440  contract Betting {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3dae9a2b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x7dc0d1d0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa38d190d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xed0f7940\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xef77620b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xff8ccaae\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Betting.sol\":2108:2437  function onERC1155BatchReceived(... */\n    tag_3:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Betting.sol\":223:244  address public oracle */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Betting.sol\":1802:2102  function onERC1155Received(... */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Betting.sol\":250:311  mapping(bytes32 => mapping(uint => uint)) public tokenBalance */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Betting.sol\":601:1600  function createBet(bytes32 questionId, uint amount) external {... */\n    tag_7:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/Betting.sol\":1606:1796  function transferTokens(... */\n    tag_8:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/Betting.sol\":2108:2437  function onERC1155BatchReceived(... */\n    tag_10:\n        /* \"contracts/Betting.sol\":2328:2334  bytes4 */\n      0x00\n        /* \"contracts/Betting.sol\":2360:2429  keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\") */\n      0xf23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97\n        /* \"contracts/Betting.sol\":2346:2430  return bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\")) */\n      swap1\n      pop\n        /* \"contracts/Betting.sol\":2108:2437  function onERC1155BatchReceived(... */\n      swap1\n      jump\t// out\n        /* \"contracts/Betting.sol\":223:244  address public oracle */\n    tag_14:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Betting.sol\":1802:2102  function onERC1155Received(... */\n    tag_18:\n        /* \"contracts/Betting.sol\":1993:1999  bytes4 */\n      0x00\n        /* \"contracts/Betting.sol\":2025:2094  keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\") */\n      0xf23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97\n        /* \"contracts/Betting.sol\":2011:2095  return bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\")) */\n      swap1\n      pop\n        /* \"contracts/Betting.sol\":1802:2102  function onERC1155Received(... */\n      swap1\n      jump\t// out\n        /* \"contracts/Betting.sol\":250:311  mapping(bytes32 => mapping(uint => uint)) public tokenBalance */\n    tag_23:\n      mstore(0x20, 0x03)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Betting.sol\":601:1600  function createBet(bytes32 questionId, uint amount) external {... */\n    tag_28:\n        /* \"contracts/Betting.sol\":672:689  conditionalTokens */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Betting.sol\":672:706  conditionalTokens.prepareCondition */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd96ee754\n        /* \"contracts/Betting.sol\":720:726  oracle */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Betting.sol\":740:750  questionId */\n      dup5\n        /* \"contracts/Betting.sol\":764:765  3 */\n      0x03\n        /* \"contracts/Betting.sol\":672:815  conditionalTokens.prepareCondition(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_36\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_40\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_40:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Betting.sol\":826:845  bytes32 conditionId */\n      0x00\n        /* \"contracts/Betting.sol\":848:865  conditionalTokens */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Betting.sol\":848:880  conditionalTokens.getConditionId */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x852c6ae2\n        /* \"contracts/Betting.sol\":894:900  oracle */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Betting.sol\":914:924  questionId */\n      dup6\n        /* \"contracts/Betting.sol\":938:939  3 */\n      0x03\n        /* \"contracts/Betting.sol\":848:989  conditionalTokens.getConditionId(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_41:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"contracts/Betting.sol\":826:989  bytes32 conditionId = conditionalTokens.getConditionId(... */\n      swap1\n      pop\n        /* \"contracts/Betting.sol\":1192:1215  uint[] memory partition */\n      0x00\n        /* \"contracts/Betting.sol\":1229:1230  2 */\n      0x02\n        /* \"contracts/Betting.sol\":1218:1231  new uint[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_47\n      jumpi\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n    tag_47:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_50\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_50:\n      pop\n        /* \"contracts/Betting.sol\":1192:1231  uint[] memory partition = new uint[](2) */\n      swap1\n      pop\n        /* \"contracts/Betting.sol\":1256:1257  1 */\n      0x01\n        /* \"contracts/Betting.sol\":1241:1250  partition */\n      dup2\n        /* \"contracts/Betting.sol\":1251:1252  0 */\n      0x00\n        /* \"contracts/Betting.sol\":1241:1253  partition[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_51\n      jumpi\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n    tag_51:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Betting.sol\":1241:1257  partition[0] = 1 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Betting.sol\":1282:1283  3 */\n      0x03\n        /* \"contracts/Betting.sol\":1267:1276  partition */\n      dup2\n        /* \"contracts/Betting.sol\":1277:1278  1 */\n      0x01\n        /* \"contracts/Betting.sol\":1267:1279  partition[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_54\n      jumpi\n      tag_55\n      tag_53\n      jump\t// in\n    tag_55:\n    tag_54:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/Betting.sol\":1267:1283  partition[1] = 3 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/Betting.sol\":1294:1297  dai */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Betting.sol\":1294:1305  dai.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/Betting.sol\":1314:1331  conditionalTokens */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Betting.sol\":1334:1340  amount */\n      dup6\n        /* \"contracts/Betting.sol\":1294:1341  dai.approve(address(conditionalTokens), amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      pop\n        /* \"contracts/Betting.sol\":1351:1368  conditionalTokens */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Betting.sol\":1351:1381  conditionalTokens.splitPostion */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6fb4be62\n        /* \"contracts/Betting.sol\":1395:1398  dai */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Betting.sol\":1420:1421  0 */\n      0x00\n        /* \"contracts/Betting.sol\":1412:1422  bytes32(0) */\n      dup1\n      shl\n        /* \"contracts/Betting.sol\":1436:1447  conditionId */\n      dup6\n        /* \"contracts/Betting.sol\":1461:1470  partition */\n      dup6\n        /* \"contracts/Betting.sol\":1484:1490  amount */\n      dup9\n        /* \"contracts/Betting.sol\":1351:1500  conditionalTokens.splitPostion(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Betting.sol\":1541:1547  amount */\n      dup3\n        /* \"contracts/Betting.sol\":1511:1523  tokenBalance */\n      0x03\n        /* \"contracts/Betting.sol\":1511:1535  tokenBalance[questionId] */\n      0x00\n        /* \"contracts/Betting.sol\":1524:1534  questionId */\n      dup7\n        /* \"contracts/Betting.sol\":1511:1535  tokenBalance[questionId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Betting.sol\":1511:1538  tokenBalance[questionId][0] */\n      0x00\n        /* \"contracts/Betting.sol\":1536:1537  0 */\n      dup1\n        /* \"contracts/Betting.sol\":1511:1538  tokenBalance[questionId][0] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Betting.sol\":1511:1547  tokenBalance[questionId][0] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Betting.sol\":1587:1593  amount */\n      dup3\n        /* \"contracts/Betting.sol\":1557:1569  tokenBalance */\n      0x03\n        /* \"contracts/Betting.sol\":1557:1581  tokenBalance[questionId] */\n      0x00\n        /* \"contracts/Betting.sol\":1570:1580  questionId */\n      dup7\n        /* \"contracts/Betting.sol\":1557:1581  tokenBalance[questionId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Betting.sol\":1557:1584  tokenBalance[questionId][1] */\n      0x00\n        /* \"contracts/Betting.sol\":1582:1583  1 */\n      0x01\n        /* \"contracts/Betting.sol\":1557:1584  tokenBalance[questionId][1] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Betting.sol\":1557:1593  tokenBalance[questionId][1] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Betting.sol\":662:1600  {... */\n      pop\n      pop\n        /* \"contracts/Betting.sol\":601:1600  function createBet(bytes32 questionId, uint amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Betting.sol\":1606:1796  function transferTokens(... */\n    tag_32:\n        /* \"contracts/Betting.sol\":1769:1774  admin */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Betting.sol\":1755:1774  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Betting.sol\":1755:1765  msg.sender */\n      caller\n        /* \"contracts/Betting.sol\":1755:1774  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Betting.sol\":1747:1789  require(msg.sender == admin, 'only admin') */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"contracts/Betting.sol\":1606:1796  function transferTokens(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_73:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_75\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_77:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_79\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_80\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_81:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_83\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:583   */\n    tag_85:\n        /* \"#utility.yul\":497:502   */\n      0x00\n        /* \"#utility.yul\":528:534   */\n      dup2\n        /* \"#utility.yul\":522:535   */\n      mload\n        /* \"#utility.yul\":513:535   */\n      swap1\n      pop\n        /* \"#utility.yul\":544:577   */\n      tag_87\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":544:577   */\n      tag_84\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":440:583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":589:728   */\n    tag_88:\n        /* \"#utility.yul\":635:640   */\n      0x00\n        /* \"#utility.yul\":673:679   */\n      dup2\n        /* \"#utility.yul\":660:680   */\n      calldataload\n        /* \"#utility.yul\":651:680   */\n      swap1\n      pop\n        /* \"#utility.yul\":689:722   */\n      tag_90\n        /* \"#utility.yul\":716:721   */\n      dup2\n        /* \"#utility.yul\":689:722   */\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":589:728   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":734:1079   */\n    tag_62:\n        /* \"#utility.yul\":801:807   */\n      0x00\n        /* \"#utility.yul\":850:852   */\n      0x20\n        /* \"#utility.yul\":838:847   */\n      dup3\n        /* \"#utility.yul\":829:836   */\n      dup5\n        /* \"#utility.yul\":825:848   */\n      sub\n        /* \"#utility.yul\":821:853   */\n      slt\n        /* \"#utility.yul\":818:937   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":856:935   */\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":818:937   */\n    tag_93:\n        /* \"#utility.yul\":976:977   */\n      0x00\n        /* \"#utility.yul\":1001:1062   */\n      tag_96\n        /* \"#utility.yul\":1054:1061   */\n      dup5\n        /* \"#utility.yul\":1045:1051   */\n      dup3\n        /* \"#utility.yul\":1034:1043   */\n      dup6\n        /* \"#utility.yul\":1030:1052   */\n      add\n        /* \"#utility.yul\":1001:1062   */\n      tag_77\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":991:1062   */\n      swap2\n      pop\n        /* \"#utility.yul\":947:1072   */\n      pop\n        /* \"#utility.yul\":734:1079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1085:1436   */\n    tag_46:\n        /* \"#utility.yul\":1155:1161   */\n      0x00\n        /* \"#utility.yul\":1204:1206   */\n      0x20\n        /* \"#utility.yul\":1192:1201   */\n      dup3\n        /* \"#utility.yul\":1183:1190   */\n      dup5\n        /* \"#utility.yul\":1179:1202   */\n      sub\n        /* \"#utility.yul\":1175:1207   */\n      slt\n        /* \"#utility.yul\":1172:1291   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":1210:1289   */\n      tag_99\n      tag_95\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1172:1291   */\n    tag_98:\n        /* \"#utility.yul\":1330:1331   */\n      0x00\n        /* \"#utility.yul\":1355:1419   */\n      tag_100\n        /* \"#utility.yul\":1411:1418   */\n      dup5\n        /* \"#utility.yul\":1402:1408   */\n      dup3\n        /* \"#utility.yul\":1391:1400   */\n      dup6\n        /* \"#utility.yul\":1387:1409   */\n      add\n        /* \"#utility.yul\":1355:1419   */\n      tag_85\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1345:1419   */\n      swap2\n      pop\n        /* \"#utility.yul\":1301:1429   */\n      pop\n        /* \"#utility.yul\":1085:1436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1442:1916   */\n    tag_22:\n        /* \"#utility.yul\":1510:1516   */\n      0x00\n        /* \"#utility.yul\":1518:1524   */\n      dup1\n        /* \"#utility.yul\":1567:1569   */\n      0x40\n        /* \"#utility.yul\":1555:1564   */\n      dup4\n        /* \"#utility.yul\":1546:1553   */\n      dup6\n        /* \"#utility.yul\":1542:1565   */\n      sub\n        /* \"#utility.yul\":1538:1570   */\n      slt\n        /* \"#utility.yul\":1535:1654   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":1573:1652   */\n      tag_103\n      tag_95\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1535:1654   */\n    tag_102:\n        /* \"#utility.yul\":1693:1694   */\n      0x00\n        /* \"#utility.yul\":1718:1771   */\n      tag_104\n        /* \"#utility.yul\":1763:1770   */\n      dup6\n        /* \"#utility.yul\":1754:1760   */\n      dup3\n        /* \"#utility.yul\":1743:1752   */\n      dup7\n        /* \"#utility.yul\":1739:1761   */\n      add\n        /* \"#utility.yul\":1718:1771   */\n      tag_81\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":1708:1771   */\n      swap3\n      pop\n        /* \"#utility.yul\":1664:1781   */\n      pop\n        /* \"#utility.yul\":1820:1822   */\n      0x20\n        /* \"#utility.yul\":1846:1899   */\n      tag_105\n        /* \"#utility.yul\":1891:1898   */\n      dup6\n        /* \"#utility.yul\":1882:1888   */\n      dup3\n        /* \"#utility.yul\":1871:1880   */\n      dup7\n        /* \"#utility.yul\":1867:1889   */\n      add\n        /* \"#utility.yul\":1846:1899   */\n      tag_88\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1836:1899   */\n      swap2\n      pop\n        /* \"#utility.yul\":1791:1909   */\n      pop\n        /* \"#utility.yul\":1442:1916   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1922:2687   */\n    tag_31:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2016:2022   */\n      dup1\n        /* \"#utility.yul\":2024:2030   */\n      0x00\n        /* \"#utility.yul\":2032:2038   */\n      dup1\n        /* \"#utility.yul\":2081:2084   */\n      0x80\n        /* \"#utility.yul\":2069:2078   */\n      dup6\n        /* \"#utility.yul\":2060:2067   */\n      dup8\n        /* \"#utility.yul\":2056:2079   */\n      sub\n        /* \"#utility.yul\":2052:2085   */\n      slt\n        /* \"#utility.yul\":2049:2169   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":2088:2167   */\n      tag_108\n      tag_95\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2049:2169   */\n    tag_107:\n        /* \"#utility.yul\":2208:2209   */\n      0x00\n        /* \"#utility.yul\":2233:2286   */\n      tag_109\n        /* \"#utility.yul\":2278:2285   */\n      dup8\n        /* \"#utility.yul\":2269:2275   */\n      dup3\n        /* \"#utility.yul\":2258:2267   */\n      dup9\n        /* \"#utility.yul\":2254:2276   */\n      add\n        /* \"#utility.yul\":2233:2286   */\n      tag_81\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":2223:2286   */\n      swap5\n      pop\n        /* \"#utility.yul\":2179:2296   */\n      pop\n        /* \"#utility.yul\":2335:2337   */\n      0x20\n        /* \"#utility.yul\":2361:2414   */\n      tag_110\n        /* \"#utility.yul\":2406:2413   */\n      dup8\n        /* \"#utility.yul\":2397:2403   */\n      dup3\n        /* \"#utility.yul\":2386:2395   */\n      dup9\n        /* \"#utility.yul\":2382:2404   */\n      add\n        /* \"#utility.yul\":2361:2414   */\n      tag_88\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2351:2414   */\n      swap4\n      pop\n        /* \"#utility.yul\":2306:2424   */\n      pop\n        /* \"#utility.yul\":2463:2465   */\n      0x40\n        /* \"#utility.yul\":2489:2542   */\n      tag_111\n        /* \"#utility.yul\":2534:2541   */\n      dup8\n        /* \"#utility.yul\":2525:2531   */\n      dup3\n        /* \"#utility.yul\":2514:2523   */\n      dup9\n        /* \"#utility.yul\":2510:2532   */\n      add\n        /* \"#utility.yul\":2489:2542   */\n      tag_73\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":2479:2542   */\n      swap3\n      pop\n        /* \"#utility.yul\":2434:2552   */\n      pop\n        /* \"#utility.yul\":2591:2593   */\n      0x60\n        /* \"#utility.yul\":2617:2670   */\n      tag_112\n        /* \"#utility.yul\":2662:2669   */\n      dup8\n        /* \"#utility.yul\":2653:2659   */\n      dup3\n        /* \"#utility.yul\":2642:2651   */\n      dup9\n        /* \"#utility.yul\":2638:2660   */\n      add\n        /* \"#utility.yul\":2617:2670   */\n      tag_88\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":2607:2670   */\n      swap2\n      pop\n        /* \"#utility.yul\":2562:2680   */\n      pop\n        /* \"#utility.yul\":1922:2687   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2693:2872   */\n    tag_113:\n        /* \"#utility.yul\":2762:2772   */\n      0x00\n        /* \"#utility.yul\":2783:2829   */\n      tag_115\n        /* \"#utility.yul\":2825:2828   */\n      dup4\n        /* \"#utility.yul\":2817:2823   */\n      dup4\n        /* \"#utility.yul\":2783:2829   */\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":2861:2865   */\n      0x20\n        /* \"#utility.yul\":2856:2859   */\n      dup4\n        /* \"#utility.yul\":2852:2866   */\n      add\n        /* \"#utility.yul\":2838:2866   */\n      swap1\n      pop\n        /* \"#utility.yul\":2693:2872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2878:2996   */\n    tag_117:\n        /* \"#utility.yul\":2965:2989   */\n      tag_119\n        /* \"#utility.yul\":2983:2988   */\n      dup2\n        /* \"#utility.yul\":2965:2989   */\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":2960:2963   */\n      dup3\n        /* \"#utility.yul\":2953:2990   */\n      mstore\n        /* \"#utility.yul\":2878:2996   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3032:3764   */\n    tag_121:\n        /* \"#utility.yul\":3151:3154   */\n      0x00\n        /* \"#utility.yul\":3180:3234   */\n      tag_123\n        /* \"#utility.yul\":3228:3233   */\n      dup3\n        /* \"#utility.yul\":3180:3234   */\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":3250:3336   */\n      tag_125\n        /* \"#utility.yul\":3329:3335   */\n      dup2\n        /* \"#utility.yul\":3324:3327   */\n      dup6\n        /* \"#utility.yul\":3250:3336   */\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3243:3336   */\n      swap4\n      pop\n        /* \"#utility.yul\":3360:3416   */\n      tag_127\n        /* \"#utility.yul\":3410:3415   */\n      dup4\n        /* \"#utility.yul\":3360:3416   */\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":3439:3446   */\n      dup1\n        /* \"#utility.yul\":3470:3471   */\n      0x00\n        /* \"#utility.yul\":3455:3739   */\n    tag_129:\n        /* \"#utility.yul\":3480:3486   */\n      dup4\n        /* \"#utility.yul\":3477:3478   */\n      dup2\n        /* \"#utility.yul\":3474:3487   */\n      lt\n        /* \"#utility.yul\":3455:3739   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":3556:3562   */\n      dup2\n        /* \"#utility.yul\":3550:3563   */\n      mload\n        /* \"#utility.yul\":3583:3646   */\n      tag_132\n        /* \"#utility.yul\":3642:3645   */\n      dup9\n        /* \"#utility.yul\":3627:3640   */\n      dup3\n        /* \"#utility.yul\":3583:3646   */\n      tag_113\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":3576:3646   */\n      swap8\n      pop\n        /* \"#utility.yul\":3669:3729   */\n      tag_133\n        /* \"#utility.yul\":3722:3728   */\n      dup4\n        /* \"#utility.yul\":3669:3729   */\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":3659:3729   */\n      swap3\n      pop\n        /* \"#utility.yul\":3515:3739   */\n      pop\n        /* \"#utility.yul\":3502:3503   */\n      0x01\n        /* \"#utility.yul\":3499:3500   */\n      dup2\n        /* \"#utility.yul\":3495:3504   */\n      add\n        /* \"#utility.yul\":3490:3504   */\n      swap1\n      pop\n        /* \"#utility.yul\":3455:3739   */\n      jump(tag_129)\n    tag_131:\n        /* \"#utility.yul\":3459:3473   */\n      pop\n        /* \"#utility.yul\":3755:3758   */\n      dup6\n        /* \"#utility.yul\":3748:3758   */\n      swap4\n      pop\n        /* \"#utility.yul\":3156:3764   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3032:3764   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3770:3888   */\n    tag_135:\n        /* \"#utility.yul\":3857:3881   */\n      tag_137\n        /* \"#utility.yul\":3875:3880   */\n      dup2\n        /* \"#utility.yul\":3857:3881   */\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3852:3855   */\n      dup3\n        /* \"#utility.yul\":3845:3882   */\n      mstore\n        /* \"#utility.yul\":3770:3888   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3894:4009   */\n    tag_139:\n        /* \"#utility.yul\":3979:4002   */\n      tag_141\n        /* \"#utility.yul\":3996:4001   */\n      dup2\n        /* \"#utility.yul\":3979:4002   */\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3974:3977   */\n      dup3\n        /* \"#utility.yul\":3967:4003   */\n      mstore\n        /* \"#utility.yul\":3894:4009   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4015:4174   */\n    tag_143:\n        /* \"#utility.yul\":4116:4167   */\n      tag_145\n        /* \"#utility.yul\":4161:4166   */\n      dup2\n        /* \"#utility.yul\":4116:4167   */\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":4111:4114   */\n      dup3\n        /* \"#utility.yul\":4104:4168   */\n      mstore\n        /* \"#utility.yul\":4015:4174   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4180:4327   */\n    tag_147:\n        /* \"#utility.yul\":4275:4320   */\n      tag_149\n        /* \"#utility.yul\":4314:4319   */\n      dup2\n        /* \"#utility.yul\":4275:4320   */\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4270:4273   */\n      dup3\n        /* \"#utility.yul\":4263:4321   */\n      mstore\n        /* \"#utility.yul\":4180:4327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4333:4699   */\n    tag_151:\n        /* \"#utility.yul\":4475:4478   */\n      0x00\n        /* \"#utility.yul\":4496:4563   */\n      tag_153\n        /* \"#utility.yul\":4560:4562   */\n      0x0a\n        /* \"#utility.yul\":4555:4558   */\n      dup4\n        /* \"#utility.yul\":4496:4563   */\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4489:4563   */\n      swap2\n      pop\n        /* \"#utility.yul\":4572:4665   */\n      tag_155\n        /* \"#utility.yul\":4661:4664   */\n      dup3\n        /* \"#utility.yul\":4572:4665   */\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":4690:4692   */\n      0x20\n        /* \"#utility.yul\":4685:4688   */\n      dup3\n        /* \"#utility.yul\":4681:4693   */\n      add\n        /* \"#utility.yul\":4674:4693   */\n      swap1\n      pop\n        /* \"#utility.yul\":4333:4699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4705:4813   */\n    tag_116:\n        /* \"#utility.yul\":4782:4806   */\n      tag_158\n        /* \"#utility.yul\":4800:4805   */\n      dup2\n        /* \"#utility.yul\":4782:4806   */\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":4777:4780   */\n      dup3\n        /* \"#utility.yul\":4770:4807   */\n      mstore\n        /* \"#utility.yul\":4705:4813   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4819:4937   */\n    tag_160:\n        /* \"#utility.yul\":4906:4930   */\n      tag_162\n        /* \"#utility.yul\":4924:4929   */\n      dup2\n        /* \"#utility.yul\":4906:4930   */\n      tag_159\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":4901:4904   */\n      dup3\n        /* \"#utility.yul\":4894:4931   */\n      mstore\n        /* \"#utility.yul\":4819:4937   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4943:5165   */\n    tag_16:\n        /* \"#utility.yul\":5036:5040   */\n      0x00\n        /* \"#utility.yul\":5074:5076   */\n      0x20\n        /* \"#utility.yul\":5063:5072   */\n      dup3\n        /* \"#utility.yul\":5059:5077   */\n      add\n        /* \"#utility.yul\":5051:5077   */\n      swap1\n      pop\n        /* \"#utility.yul\":5087:5158   */\n      tag_164\n        /* \"#utility.yul\":5155:5156   */\n      0x00\n        /* \"#utility.yul\":5144:5153   */\n      dup4\n        /* \"#utility.yul\":5140:5157   */\n      add\n        /* \"#utility.yul\":5131:5137   */\n      dup5\n        /* \"#utility.yul\":5087:5158   */\n      tag_117\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":4943:5165   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5171:5629   */\n    tag_37:\n        /* \"#utility.yul\":5328:5332   */\n      0x00\n        /* \"#utility.yul\":5366:5368   */\n      0x60\n        /* \"#utility.yul\":5355:5364   */\n      dup3\n        /* \"#utility.yul\":5351:5369   */\n      add\n        /* \"#utility.yul\":5343:5369   */\n      swap1\n      pop\n        /* \"#utility.yul\":5379:5450   */\n      tag_166\n        /* \"#utility.yul\":5447:5448   */\n      0x00\n        /* \"#utility.yul\":5436:5445   */\n      dup4\n        /* \"#utility.yul\":5432:5449   */\n      add\n        /* \"#utility.yul\":5423:5429   */\n      dup7\n        /* \"#utility.yul\":5379:5450   */\n      tag_117\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":5460:5532   */\n      tag_167\n        /* \"#utility.yul\":5528:5530   */\n      0x20\n        /* \"#utility.yul\":5517:5526   */\n      dup4\n        /* \"#utility.yul\":5513:5531   */\n      add\n        /* \"#utility.yul\":5504:5510   */\n      dup6\n        /* \"#utility.yul\":5460:5532   */\n      tag_135\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":5542:5622   */\n      tag_168\n        /* \"#utility.yul\":5618:5620   */\n      0x40\n        /* \"#utility.yul\":5607:5616   */\n      dup4\n        /* \"#utility.yul\":5603:5621   */\n      add\n        /* \"#utility.yul\":5594:5600   */\n      dup5\n        /* \"#utility.yul\":5542:5622   */\n      tag_147\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":5171:5629   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5635:5967   */\n    tag_57:\n        /* \"#utility.yul\":5756:5760   */\n      0x00\n        /* \"#utility.yul\":5794:5796   */\n      0x40\n        /* \"#utility.yul\":5783:5792   */\n      dup3\n        /* \"#utility.yul\":5779:5797   */\n      add\n        /* \"#utility.yul\":5771:5797   */\n      swap1\n      pop\n        /* \"#utility.yul\":5807:5878   */\n      tag_170\n        /* \"#utility.yul\":5875:5876   */\n      0x00\n        /* \"#utility.yul\":5864:5873   */\n      dup4\n        /* \"#utility.yul\":5860:5877   */\n      add\n        /* \"#utility.yul\":5851:5857   */\n      dup6\n        /* \"#utility.yul\":5807:5878   */\n      tag_117\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":5888:5960   */\n      tag_171\n        /* \"#utility.yul\":5956:5958   */\n      0x20\n        /* \"#utility.yul\":5945:5954   */\n      dup4\n        /* \"#utility.yul\":5941:5959   */\n      add\n        /* \"#utility.yul\":5932:5938   */\n      dup5\n        /* \"#utility.yul\":5888:5960   */\n      tag_160\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":5635:5967   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5973:6191   */\n    tag_12:\n        /* \"#utility.yul\":6064:6068   */\n      0x00\n        /* \"#utility.yul\":6102:6104   */\n      0x20\n        /* \"#utility.yul\":6091:6100   */\n      dup3\n        /* \"#utility.yul\":6087:6105   */\n      add\n        /* \"#utility.yul\":6079:6105   */\n      swap1\n      pop\n        /* \"#utility.yul\":6115:6184   */\n      tag_173\n        /* \"#utility.yul\":6181:6182   */\n      0x00\n        /* \"#utility.yul\":6170:6179   */\n      dup4\n        /* \"#utility.yul\":6166:6183   */\n      add\n        /* \"#utility.yul\":6157:6163   */\n      dup5\n        /* \"#utility.yul\":6115:6184   */\n      tag_139\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":5973:6191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6197:7040   */\n    tag_64:\n        /* \"#utility.yul\":6466:6470   */\n      0x00\n        /* \"#utility.yul\":6504:6507   */\n      0xa0\n        /* \"#utility.yul\":6493:6502   */\n      dup3\n        /* \"#utility.yul\":6489:6508   */\n      add\n        /* \"#utility.yul\":6481:6508   */\n      swap1\n      pop\n        /* \"#utility.yul\":6518:6603   */\n      tag_175\n        /* \"#utility.yul\":6600:6601   */\n      0x00\n        /* \"#utility.yul\":6589:6598   */\n      dup4\n        /* \"#utility.yul\":6585:6602   */\n      add\n        /* \"#utility.yul\":6576:6582   */\n      dup9\n        /* \"#utility.yul\":6518:6603   */\n      tag_143\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":6613:6685   */\n      tag_176\n        /* \"#utility.yul\":6681:6683   */\n      0x20\n        /* \"#utility.yul\":6670:6679   */\n      dup4\n        /* \"#utility.yul\":6666:6684   */\n      add\n        /* \"#utility.yul\":6657:6663   */\n      dup8\n        /* \"#utility.yul\":6613:6685   */\n      tag_135\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":6695:6767   */\n      tag_177\n        /* \"#utility.yul\":6763:6765   */\n      0x40\n        /* \"#utility.yul\":6752:6761   */\n      dup4\n        /* \"#utility.yul\":6748:6766   */\n      add\n        /* \"#utility.yul\":6739:6745   */\n      dup7\n        /* \"#utility.yul\":6695:6767   */\n      tag_135\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":6814:6823   */\n      dup2\n        /* \"#utility.yul\":6808:6812   */\n      dup2\n        /* \"#utility.yul\":6804:6824   */\n      sub\n        /* \"#utility.yul\":6799:6801   */\n      0x60\n        /* \"#utility.yul\":6788:6797   */\n      dup4\n        /* \"#utility.yul\":6784:6802   */\n      add\n        /* \"#utility.yul\":6777:6825   */\n      mstore\n        /* \"#utility.yul\":6842:6950   */\n      tag_178\n        /* \"#utility.yul\":6945:6949   */\n      dup2\n        /* \"#utility.yul\":6936:6942   */\n      dup6\n        /* \"#utility.yul\":6842:6950   */\n      tag_121\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":6834:6950   */\n      swap1\n      pop\n        /* \"#utility.yul\":6960:7033   */\n      tag_179\n        /* \"#utility.yul\":7028:7031   */\n      0x80\n        /* \"#utility.yul\":7017:7026   */\n      dup4\n        /* \"#utility.yul\":7013:7032   */\n      add\n        /* \"#utility.yul\":7004:7010   */\n      dup5\n        /* \"#utility.yul\":6960:7033   */\n      tag_160\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":6197:7040   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7046:7465   */\n    tag_71:\n        /* \"#utility.yul\":7212:7216   */\n      0x00\n        /* \"#utility.yul\":7250:7252   */\n      0x20\n        /* \"#utility.yul\":7239:7248   */\n      dup3\n        /* \"#utility.yul\":7235:7253   */\n      add\n        /* \"#utility.yul\":7227:7253   */\n      swap1\n      pop\n        /* \"#utility.yul\":7299:7308   */\n      dup2\n        /* \"#utility.yul\":7293:7297   */\n      dup2\n        /* \"#utility.yul\":7289:7309   */\n      sub\n        /* \"#utility.yul\":7285:7286   */\n      0x00\n        /* \"#utility.yul\":7274:7283   */\n      dup4\n        /* \"#utility.yul\":7270:7287   */\n      add\n        /* \"#utility.yul\":7263:7310   */\n      mstore\n        /* \"#utility.yul\":7327:7458   */\n      tag_181\n        /* \"#utility.yul\":7453:7457   */\n      dup2\n        /* \"#utility.yul\":7327:7458   */\n      tag_151\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":7319:7458   */\n      swap1\n      pop\n        /* \"#utility.yul\":7046:7465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7471:7693   */\n    tag_25:\n        /* \"#utility.yul\":7564:7568   */\n      0x00\n        /* \"#utility.yul\":7602:7604   */\n      0x20\n        /* \"#utility.yul\":7591:7600   */\n      dup3\n        /* \"#utility.yul\":7587:7605   */\n      add\n        /* \"#utility.yul\":7579:7605   */\n      swap1\n      pop\n        /* \"#utility.yul\":7615:7686   */\n      tag_183\n        /* \"#utility.yul\":7683:7684   */\n      0x00\n        /* \"#utility.yul\":7672:7681   */\n      dup4\n        /* \"#utility.yul\":7668:7685   */\n      add\n        /* \"#utility.yul\":7659:7665   */\n      dup5\n        /* \"#utility.yul\":7615:7686   */\n      tag_160\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":7471:7693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7780:7912   */\n    tag_128:\n        /* \"#utility.yul\":7847:7851   */\n      0x00\n        /* \"#utility.yul\":7870:7873   */\n      dup2\n        /* \"#utility.yul\":7862:7873   */\n      swap1\n      pop\n        /* \"#utility.yul\":7900:7904   */\n      0x20\n        /* \"#utility.yul\":7895:7898   */\n      dup3\n        /* \"#utility.yul\":7891:7905   */\n      add\n        /* \"#utility.yul\":7883:7905   */\n      swap1\n      pop\n        /* \"#utility.yul\":7780:7912   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7918:8032   */\n    tag_124:\n        /* \"#utility.yul\":7985:7991   */\n      0x00\n        /* \"#utility.yul\":8019:8024   */\n      dup2\n        /* \"#utility.yul\":8013:8025   */\n      mload\n        /* \"#utility.yul\":8003:8025   */\n      swap1\n      pop\n        /* \"#utility.yul\":7918:8032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8038:8151   */\n    tag_134:\n        /* \"#utility.yul\":8108:8112   */\n      0x00\n        /* \"#utility.yul\":8140:8144   */\n      0x20\n        /* \"#utility.yul\":8135:8138   */\n      dup3\n        /* \"#utility.yul\":8131:8145   */\n      add\n        /* \"#utility.yul\":8123:8145   */\n      swap1\n      pop\n        /* \"#utility.yul\":8038:8151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8157:8341   */\n    tag_126:\n        /* \"#utility.yul\":8256:8267   */\n      0x00\n        /* \"#utility.yul\":8290:8296   */\n      dup3\n        /* \"#utility.yul\":8285:8288   */\n      dup3\n        /* \"#utility.yul\":8278:8297   */\n      mstore\n        /* \"#utility.yul\":8330:8334   */\n      0x20\n        /* \"#utility.yul\":8325:8328   */\n      dup3\n        /* \"#utility.yul\":8321:8335   */\n      add\n        /* \"#utility.yul\":8306:8335   */\n      swap1\n      pop\n        /* \"#utility.yul\":8157:8341   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8347:8516   */\n    tag_154:\n        /* \"#utility.yul\":8431:8442   */\n      0x00\n        /* \"#utility.yul\":8465:8471   */\n      dup3\n        /* \"#utility.yul\":8460:8463   */\n      dup3\n        /* \"#utility.yul\":8453:8472   */\n      mstore\n        /* \"#utility.yul\":8505:8509   */\n      0x20\n        /* \"#utility.yul\":8500:8503   */\n      dup3\n        /* \"#utility.yul\":8496:8510   */\n      add\n        /* \"#utility.yul\":8481:8510   */\n      swap1\n      pop\n        /* \"#utility.yul\":8347:8516   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8522:8618   */\n    tag_120:\n        /* \"#utility.yul\":8559:8566   */\n      0x00\n        /* \"#utility.yul\":8588:8612   */\n      tag_192\n        /* \"#utility.yul\":8606:8611   */\n      dup3\n        /* \"#utility.yul\":8588:8612   */\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":8577:8612   */\n      swap1\n      pop\n        /* \"#utility.yul\":8522:8618   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8624:8714   */\n    tag_194:\n        /* \"#utility.yul\":8658:8665   */\n      0x00\n        /* \"#utility.yul\":8701:8706   */\n      dup2\n        /* \"#utility.yul\":8694:8707   */\n      iszero\n        /* \"#utility.yul\":8687:8708   */\n      iszero\n        /* \"#utility.yul\":8676:8708   */\n      swap1\n      pop\n        /* \"#utility.yul\":8624:8714   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8720:8797   */\n    tag_138:\n        /* \"#utility.yul\":8757:8764   */\n      0x00\n        /* \"#utility.yul\":8786:8791   */\n      dup2\n        /* \"#utility.yul\":8775:8791   */\n      swap1\n      pop\n        /* \"#utility.yul\":8720:8797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8803:8952   */\n    tag_142:\n        /* \"#utility.yul\":8839:8846   */\n      0x00\n        /* \"#utility.yul\":8879:8945   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8872:8877   */\n      dup3\n        /* \"#utility.yul\":8868:8946   */\n      and\n        /* \"#utility.yul\":8857:8946   */\n      swap1\n      pop\n        /* \"#utility.yul\":8803:8952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8958:9084   */\n    tag_193:\n        /* \"#utility.yul\":8995:9002   */\n      0x00\n        /* \"#utility.yul\":9035:9077   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9028:9033   */\n      dup3\n        /* \"#utility.yul\":9024:9078   */\n      and\n        /* \"#utility.yul\":9013:9078   */\n      swap1\n      pop\n        /* \"#utility.yul\":8958:9084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9090:9167   */\n    tag_159:\n        /* \"#utility.yul\":9127:9134   */\n      0x00\n        /* \"#utility.yul\":9156:9161   */\n      dup2\n        /* \"#utility.yul\":9145:9161   */\n      swap1\n      pop\n        /* \"#utility.yul\":9090:9167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9173:9313   */\n    tag_146:\n        /* \"#utility.yul\":9237:9246   */\n      0x00\n        /* \"#utility.yul\":9270:9307   */\n      tag_201\n        /* \"#utility.yul\":9301:9306   */\n      dup3\n        /* \"#utility.yul\":9270:9307   */\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":9257:9307   */\n      swap1\n      pop\n        /* \"#utility.yul\":9173:9313   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9319:9440   */\n    tag_150:\n        /* \"#utility.yul\":9377:9386   */\n      0x00\n        /* \"#utility.yul\":9410:9434   */\n      tag_204\n        /* \"#utility.yul\":9428:9433   */\n      dup3\n        /* \"#utility.yul\":9410:9434   */\n      tag_159\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":9397:9434   */\n      swap1\n      pop\n        /* \"#utility.yul\":9319:9440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9446:9572   */\n    tag_202:\n        /* \"#utility.yul\":9496:9505   */\n      0x00\n        /* \"#utility.yul\":9529:9566   */\n      tag_206\n        /* \"#utility.yul\":9560:9565   */\n      dup3\n        /* \"#utility.yul\":9529:9566   */\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":9516:9566   */\n      swap1\n      pop\n        /* \"#utility.yul\":9446:9572   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9578:9691   */\n    tag_207:\n        /* \"#utility.yul\":9628:9637   */\n      0x00\n        /* \"#utility.yul\":9661:9685   */\n      tag_209\n        /* \"#utility.yul\":9679:9684   */\n      dup3\n        /* \"#utility.yul\":9661:9685   */\n      tag_193\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":9648:9685   */\n      swap1\n      pop\n        /* \"#utility.yul\":9578:9691   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9697:9877   */\n    tag_53:\n        /* \"#utility.yul\":9745:9822   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9742:9743   */\n      0x00\n        /* \"#utility.yul\":9735:9823   */\n      mstore\n        /* \"#utility.yul\":9842:9846   */\n      0x32\n        /* \"#utility.yul\":9839:9840   */\n      0x04\n        /* \"#utility.yul\":9832:9847   */\n      mstore\n        /* \"#utility.yul\":9866:9870   */\n      0x24\n        /* \"#utility.yul\":9863:9864   */\n      0x00\n        /* \"#utility.yul\":9856:9871   */\n      revert\n        /* \"#utility.yul\":9883:10063   */\n    tag_49:\n        /* \"#utility.yul\":9931:10008   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9928:9929   */\n      0x00\n        /* \"#utility.yul\":9921:10009   */\n      mstore\n        /* \"#utility.yul\":10028:10032   */\n      0x41\n        /* \"#utility.yul\":10025:10026   */\n      0x04\n        /* \"#utility.yul\":10018:10033   */\n      mstore\n        /* \"#utility.yul\":10052:10056   */\n      0x24\n        /* \"#utility.yul\":10049:10050   */\n      0x00\n        /* \"#utility.yul\":10042:10057   */\n      revert\n        /* \"#utility.yul\":10192:10309   */\n    tag_95:\n        /* \"#utility.yul\":10301:10302   */\n      0x00\n        /* \"#utility.yul\":10298:10299   */\n      dup1\n        /* \"#utility.yul\":10291:10303   */\n      revert\n        /* \"#utility.yul\":10315:10475   */\n    tag_156:\n        /* \"#utility.yul\":10455:10467   */\n      0x6f6e6c792061646d696e00000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10451:10452   */\n      0x00\n        /* \"#utility.yul\":10443:10449   */\n      dup3\n        /* \"#utility.yul\":10439:10453   */\n      add\n        /* \"#utility.yul\":10432:10468   */\n      mstore\n        /* \"#utility.yul\":10315:10475   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10481:10603   */\n    tag_76:\n        /* \"#utility.yul\":10554:10578   */\n      tag_217\n        /* \"#utility.yul\":10572:10577   */\n      dup2\n        /* \"#utility.yul\":10554:10578   */\n      tag_120\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":10547:10552   */\n      dup2\n        /* \"#utility.yul\":10544:10579   */\n      eq\n        /* \"#utility.yul\":10534:10597   */\n      tag_218\n      jumpi\n        /* \"#utility.yul\":10593:10594   */\n      0x00\n        /* \"#utility.yul\":10590:10591   */\n      dup1\n        /* \"#utility.yul\":10583:10595   */\n      revert\n        /* \"#utility.yul\":10534:10597   */\n    tag_218:\n        /* \"#utility.yul\":10481:10603   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10609:10725   */\n    tag_80:\n        /* \"#utility.yul\":10679:10700   */\n      tag_220\n        /* \"#utility.yul\":10694:10699   */\n      dup2\n        /* \"#utility.yul\":10679:10700   */\n      tag_194\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":10672:10677   */\n      dup2\n        /* \"#utility.yul\":10669:10701   */\n      eq\n        /* \"#utility.yul\":10659:10719   */\n      tag_221\n      jumpi\n        /* \"#utility.yul\":10715:10716   */\n      0x00\n        /* \"#utility.yul\":10712:10713   */\n      dup1\n        /* \"#utility.yul\":10705:10717   */\n      revert\n        /* \"#utility.yul\":10659:10719   */\n    tag_221:\n        /* \"#utility.yul\":10609:10725   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10731:10853   */\n    tag_84:\n        /* \"#utility.yul\":10804:10828   */\n      tag_223\n        /* \"#utility.yul\":10822:10827   */\n      dup2\n        /* \"#utility.yul\":10804:10828   */\n      tag_138\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":10797:10802   */\n      dup2\n        /* \"#utility.yul\":10794:10829   */\n      eq\n        /* \"#utility.yul\":10784:10847   */\n      tag_224\n      jumpi\n        /* \"#utility.yul\":10843:10844   */\n      0x00\n        /* \"#utility.yul\":10840:10841   */\n      dup1\n        /* \"#utility.yul\":10833:10845   */\n      revert\n        /* \"#utility.yul\":10784:10847   */\n    tag_224:\n        /* \"#utility.yul\":10731:10853   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10859:10981   */\n    tag_91:\n        /* \"#utility.yul\":10932:10956   */\n      tag_226\n        /* \"#utility.yul\":10950:10955   */\n      dup2\n        /* \"#utility.yul\":10932:10956   */\n      tag_159\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":10925:10930   */\n      dup2\n        /* \"#utility.yul\":10922:10957   */\n      eq\n        /* \"#utility.yul\":10912:10975   */\n      tag_227\n      jumpi\n        /* \"#utility.yul\":10971:10972   */\n      0x00\n        /* \"#utility.yul\":10968:10969   */\n      dup1\n        /* \"#utility.yul\":10961:10973   */\n      revert\n        /* \"#utility.yul\":10912:10975   */\n    tag_227:\n        /* \"#utility.yul\":10859:10981   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203e4d74081e39e2e3d607674767a261dce6ceee9ee0641b941a5f7817f5b39d6e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_51": {
									"entryPoint": null,
									"id": 51,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 473,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1511:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:5",
														"type": ""
													}
												],
												"src": "7:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "267:552:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "313:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "315:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "315:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "315:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "288:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "297:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "284:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "284:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "280:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "280:32:5"
															},
															"nodeType": "YulIf",
															"src": "277:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "406:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "421:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "435:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "425:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "450:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "496:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "507:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "492:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "492:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "516:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "460:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "460:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "450:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "544:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "559:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "573:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "563:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "589:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "635:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "646:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "631:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "631:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "655:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "599:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "599:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "589:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "683:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "698:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "712:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "702:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "728:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "774:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "770:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "770:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "738:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "738:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "728:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "221:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "232:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "244:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "252:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "260:6:5",
														"type": ""
													}
												],
												"src": "156:663:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "865:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "875:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "891:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "885:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "885:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "875:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "858:6:5",
														"type": ""
													}
												],
												"src": "825:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "951:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "961:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "990:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "972:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "972:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "961:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "933:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "943:7:5",
														"type": ""
													}
												],
												"src": "906:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1053:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1063:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1078:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1085:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1074:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1063:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1035:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1045:7:5",
														"type": ""
													}
												],
												"src": "1008:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1229:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1246:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1249:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1239:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1140:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1352:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1369:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1372:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1362:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1362:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1263:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1429:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1486:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1495:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1498:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1488:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1488:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1488:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1452:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1477:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1459:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1459:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1449:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1449:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:43:5"
															},
															"nodeType": "YulIf",
															"src": "1439:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1422:5:5",
														"type": ""
													}
												],
												"src": "1386:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405162000e2138038062000e2183398181016040528101906100349190610154565b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506101f5565b60008151905061014e816101de565b92915050565b60008060006060848603121561016d5761016c6101d9565b5b600061017b8682870161013f565b935050602061018c8682870161013f565b925050604061019d8682870161013f565b9150509250925092565b60006101b2826101b9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101e7816101a7565b81146101f257600080fd5b50565b610c1c80620002056000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633dae9a2b146100675780637dc0d1d014610085578063a38d190d146100a3578063ed0f7940146100c1578063ef77620b146100f1578063ff8ccaae1461010d575b600080fd5b61006f610129565b60405161007c919061093e565b60405180910390f35b61008d610151565b60405161009a91906108c3565b60405180910390f35b6100ab610177565b6040516100b8919061093e565b60405180910390f35b6100db60048036038101906100d6919061071a565b61019f565b6040516100e891906109d3565b60405180910390f35b61010b6004803603810190610106919061071a565b6101c4565b005b6101276004803603810190610122919061075a565b6105c1565b005b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97905090565b6003602052816000526040600020602052806000526040600020600091509150505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d96ee754600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460036040518463ffffffff1660e01b8152600401610246939291906108de565b600060405180830381600087803b15801561026057600080fd5b505af1158015610274573d6000803e3d6000fd5b505050506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663852c6ae2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560036040518463ffffffff1660e01b81526004016102fc939291906108de565b60206040518083038186803b15801561031457600080fd5b505afa158015610328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034c91906106ed565b90506000600267ffffffffffffffff81111561036b5761036a610b2d565b5b6040519080825280602002602001820160405280156103995781602001602082028036833780820191505090505b5090506001816000815181106103b2576103b1610afe565b5b6020026020010181815250506003816001815181106103d4576103d3610afe565b5b60200260200101818152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b815260040161045d929190610915565b602060405180830381600087803b15801561047757600080fd5b505af115801561048b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104af91906106c0565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636fb4be6260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000801b8585886040518663ffffffff1660e01b8152600401610536959493929190610959565b600060405180830381600087803b15801561055057600080fd5b505af1158015610564573d6000803e3d6000fd5b50505050826003600086815260200190815260200160002060008081526020019081526020016000208190555082600360008681526020019081526020016000206000600181526020019081526020016000208190555050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610651576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610648906109b3565b60405180910390fd5b50505050565b60008135905061066681610b8a565b92915050565b60008151905061067b81610ba1565b92915050565b60008135905061069081610bb8565b92915050565b6000815190506106a581610bb8565b92915050565b6000813590506106ba81610bcf565b92915050565b6000602082840312156106d6576106d5610b5c565b5b60006106e48482850161066c565b91505092915050565b60006020828403121561070357610702610b5c565b5b600061071184828501610696565b91505092915050565b6000806040838503121561073157610730610b5c565b5b600061073f85828601610681565b9250506020610750858286016106ab565b9150509250929050565b6000806000806080858703121561077457610773610b5c565b5b600061078287828801610681565b9450506020610793878288016106ab565b93505060406107a487828801610657565b92505060606107b5878288016106ab565b91505092959194509250565b60006107cd83836108a5565b60208301905092915050565b6107e281610a38565b82525050565b60006107f3826109fe565b6107fd8185610a16565b9350610808836109ee565b8060005b8381101561083957815161082088826107c1565b975061082b83610a09565b92505060018101905061080c565b5085935050505092915050565b61084f81610a56565b82525050565b61085e81610a60565b82525050565b61086d81610ab6565b82525050565b61087c81610ac8565b82525050565b600061088f600a83610a27565b915061089a82610b61565b602082019050919050565b6108ae81610aac565b82525050565b6108bd81610aac565b82525050565b60006020820190506108d860008301846107d9565b92915050565b60006060820190506108f360008301866107d9565b6109006020830185610846565b61090d6040830184610873565b949350505050565b600060408201905061092a60008301856107d9565b61093760208301846108b4565b9392505050565b60006020820190506109536000830184610855565b92915050565b600060a08201905061096e6000830188610864565b61097b6020830187610846565b6109886040830186610846565b818103606083015261099a81856107e8565b90506109a960808301846108b4565b9695505050505050565b600060208201905081810360008301526109cc81610882565b9050919050565b60006020820190506109e860008301846108b4565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610a4382610a8c565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ac182610ada565b9050919050565b6000610ad382610aac565b9050919050565b6000610ae582610aec565b9050919050565b6000610af782610a8c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f6f6e6c792061646d696e00000000000000000000000000000000000000000000600082015250565b610b9381610a38565b8114610b9e57600080fd5b50565b610baa81610a4a565b8114610bb557600080fd5b50565b610bc181610a56565b8114610bcc57600080fd5b50565b610bd881610aac565b8114610be357600080fd5b5056fea26469706673582212203e4d74081e39e2e3d607674767a261dce6ceee9ee0641b941a5f7817f5b39d6e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xE21 CODESIZE SUB DUP1 PUSH3 0xE21 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x34 SWAP2 SWAP1 PUSH2 0x154 JUMP JUMPDEST DUP3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x14E DUP2 PUSH2 0x1DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16D JUMPI PUSH2 0x16C PUSH2 0x1D9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17B DUP7 DUP3 DUP8 ADD PUSH2 0x13F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x18C DUP7 DUP3 DUP8 ADD PUSH2 0x13F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x19D DUP7 DUP3 DUP8 ADD PUSH2 0x13F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B2 DUP3 PUSH2 0x1B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E7 DUP2 PUSH2 0x1A7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC1C DUP1 PUSH3 0x205 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3DAE9A2B EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0xA38D190D EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xED0F7940 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xEF77620B EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xFF8CCAAE EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAB PUSH2 0x177 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x19F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x1C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0xF23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD96EE754 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x3 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x246 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x274 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x852C6AE2 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x3 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x328 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x6ED JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36B JUMPI PUSH2 0x36A PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x399 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3B2 JUMPI PUSH2 0x3B1 PUSH2 0xAFE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3D4 JUMPI PUSH2 0x3D3 PUSH2 0xAFE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45D SWAP3 SWAP2 SWAP1 PUSH2 0x915 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x48B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x6C0 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6FB4BE62 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SHL DUP6 DUP6 DUP9 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x959 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x564 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x651 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x648 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x666 DUP2 PUSH2 0xB8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x67B DUP2 PUSH2 0xBA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x690 DUP2 PUSH2 0xBB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6A5 DUP2 PUSH2 0xBB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6BA DUP2 PUSH2 0xBCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D6 JUMPI PUSH2 0x6D5 PUSH2 0xB5C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6E4 DUP5 DUP3 DUP6 ADD PUSH2 0x66C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x703 JUMPI PUSH2 0x702 PUSH2 0xB5C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x711 DUP5 DUP3 DUP6 ADD PUSH2 0x696 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x731 JUMPI PUSH2 0x730 PUSH2 0xB5C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x73F DUP6 DUP3 DUP7 ADD PUSH2 0x681 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x750 DUP6 DUP3 DUP7 ADD PUSH2 0x6AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH2 0x773 PUSH2 0xB5C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x782 DUP8 DUP3 DUP9 ADD PUSH2 0x681 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x793 DUP8 DUP3 DUP9 ADD PUSH2 0x6AB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x7A4 DUP8 DUP3 DUP9 ADD PUSH2 0x657 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x7B5 DUP8 DUP3 DUP9 ADD PUSH2 0x6AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CD DUP4 DUP4 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7E2 DUP2 PUSH2 0xA38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F3 DUP3 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x7FD DUP2 DUP6 PUSH2 0xA16 JUMP JUMPDEST SWAP4 POP PUSH2 0x808 DUP4 PUSH2 0x9EE JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x839 JUMPI DUP2 MLOAD PUSH2 0x820 DUP9 DUP3 PUSH2 0x7C1 JUMP JUMPDEST SWAP8 POP PUSH2 0x82B DUP4 PUSH2 0xA09 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x80C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x84F DUP2 PUSH2 0xA56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x85E DUP2 PUSH2 0xA60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x86D DUP2 PUSH2 0xAB6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x87C DUP2 PUSH2 0xAC8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88F PUSH1 0xA DUP4 PUSH2 0xA27 JUMP JUMPDEST SWAP2 POP PUSH2 0x89A DUP3 PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AE DUP2 PUSH2 0xAAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x8BD DUP2 PUSH2 0xAAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x8F3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x900 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x90D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x873 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x92A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x937 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8B4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x953 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x855 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x96E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x864 JUMP JUMPDEST PUSH2 0x97B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x988 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x846 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x99A DUP2 DUP6 PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x9A9 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x8B4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9CC DUP2 PUSH2 0x882 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA43 DUP3 PUSH2 0xA8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC1 DUP3 PUSH2 0xADA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD3 DUP3 PUSH2 0xAAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE5 DUP3 PUSH2 0xAEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF7 DUP3 PUSH2 0xA8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x6F6E6C792061646D696E00000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xB93 DUP2 PUSH2 0xA38 JUMP JUMPDEST DUP2 EQ PUSH2 0xB9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xBAA DUP2 PUSH2 0xA4A JUMP JUMPDEST DUP2 EQ PUSH2 0xBB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xBC1 DUP2 PUSH2 0xA56 JUMP JUMPDEST DUP2 EQ PUSH2 0xBCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xBD8 DUP2 PUSH2 0xAAC JUMP JUMPDEST DUP2 EQ PUSH2 0xBE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0x4D PUSH21 0x81E39E2E3D607674767A261DCE6CEEE9EE0641B94 BYTE 0x5F PUSH25 0x17F5B39D6E64736F6C63430008070033000000000000000000 ",
							"sourceMap": "142:2298:0:-:0;;;337:258;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;461:4;448:3;;:18;;;;;;;;;;;;;;;;;;515;476:17;;:58;;;;;;;;;;;;;;;;;;553:7;544:6;;:16;;;;;;;;;;;;;;;;;;578:10;570:5;;:18;;;;;;;;;;;;;;;;;;337:258;;;142:2298;;7:143:5;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:663::-;244:6;252;260;309:2;297:9;288:7;284:23;280:32;277:119;;;315:79;;:::i;:::-;277:119;435:1;460:64;516:7;507:6;496:9;492:22;460:64;:::i;:::-;450:74;;406:128;573:2;599:64;655:7;646:6;635:9;631:22;599:64;:::i;:::-;589:74;;544:129;712:2;738:64;794:7;785:6;774:9;770:22;738:64;:::i;:::-;728:74;;683:129;156:663;;;;;:::o;906:96::-;943:7;972:24;990:5;972:24;:::i;:::-;961:35;;906:96;;;:::o;1008:126::-;1045:7;1085:42;1078:5;1074:54;1063:65;;1008:126;;;:::o;1263:117::-;1372:1;1369;1362:12;1386:122;1459:24;1477:5;1459:24;:::i;:::-;1452:5;1449:35;1439:63;;1498:1;1495;1488:12;1439:63;1386:122;:::o;142:2298:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@createBet_138": {
									"entryPoint": 452,
									"id": 138,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@onERC1155BatchReceived_184": {
									"entryPoint": 297,
									"id": 184,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@onERC1155Received_171": {
									"entryPoint": 375,
									"id": 171,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@oracle_12": {
									"entryPoint": 337,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenBalance_18": {
									"entryPoint": 415,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferTokens_158": {
									"entryPoint": 1473,
									"id": 158,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 1665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 1686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 1773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_uint256": {
									"entryPoint": 1818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32t_uint256t_addresst_uint256": {
									"entryPoint": 1882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 1985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 2133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$541_to_t_address_fromStack": {
									"entryPoint": 2148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_3_by_1_to_t_uint256_fromStack": {
									"entryPoint": 2163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 2213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32_t_rational_3_by_1__to_t_address_t_bytes32_t_uint256__fromStack_reversed": {
									"entryPoint": 2270,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2325,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 2366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$541_t_bytes32_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_address_t_bytes32_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 2393,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 2656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$541_to_t_address": {
									"entryPoint": 2742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_3_by_1_to_t_uint256": {
									"entryPoint": 2760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 2814,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2861,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2908,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d": {
									"entryPoint": 2913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 3000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10984:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:5",
														"type": ""
													}
												],
												"src": "152:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:5"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:5",
														"type": ""
													}
												],
												"src": "295:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "528:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "522:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "513:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "544:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:33:5"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "481:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "489:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "497:5:5",
														"type": ""
													}
												],
												"src": "440:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "641:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "651:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "673:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "660:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "651:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "716:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "689:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "689:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "689:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "619:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "627:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "635:5:5",
														"type": ""
													}
												],
												"src": "589:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "808:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "854:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "856:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "856:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "856:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "829:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "838:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "825:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "825:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "850:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "821:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "821:32:5"
															},
															"nodeType": "YulIf",
															"src": "818:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "947:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "962:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "976:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "966:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "991:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1034:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1045:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1030:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1030:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1054:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1001:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1001:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "991:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "778:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "789:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "801:6:5",
														"type": ""
													}
												],
												"src": "734:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1162:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1208:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1210:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1210:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1210:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1183:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1192:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1179:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1179:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1204:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1175:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1175:32:5"
															},
															"nodeType": "YulIf",
															"src": "1172:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1301:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1316:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1320:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1345:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1391:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1402:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1387:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1387:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1411:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1355:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1345:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1132:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1143:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1155:6:5",
														"type": ""
													}
												],
												"src": "1085:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1525:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1571:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1573:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1573:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1573:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1546:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1555:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1542:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1542:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1567:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1538:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1538:32:5"
															},
															"nodeType": "YulIf",
															"src": "1535:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1664:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1679:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1693:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1683:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1708:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1743:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1754:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1739:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1739:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1763:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "1718:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1718:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1708:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1791:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1806:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1820:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1810:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1836:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1871:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1882:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1867:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1867:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1891:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1846:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1846:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1836:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1487:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1498:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1510:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1518:6:5",
														"type": ""
													}
												],
												"src": "1442:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2039:648:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2086:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2088:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2088:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2088:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2060:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2069:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2056:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2056:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2081:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2052:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2052:33:5"
															},
															"nodeType": "YulIf",
															"src": "2049:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2179:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2194:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2208:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2198:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2223:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2258:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2269:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2254:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2254:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2278:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "2233:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2233:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2223:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2306:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2321:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2335:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2325:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2351:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2386:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2397:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2382:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2382:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2406:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2361:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2361:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2351:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2434:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2449:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2463:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2453:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2479:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2514:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2525:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2510:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2510:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2534:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2489:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2489:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2479:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2562:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2577:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2591:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2581:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2607:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2642:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2653:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2638:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2638:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2662:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2617:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2617:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2607:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_uint256t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2016:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2024:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2032:6:5",
														"type": ""
													}
												],
												"src": "1922:765:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2773:99:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2817:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2825:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2783:33:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2783:46:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2783:46:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2838:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2856:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2861:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2852:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2852:14:5"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "2838:10:5"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2746:6:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2754:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "2762:10:5",
														"type": ""
													}
												],
												"src": "2693:179:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2943:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2960:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2983:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2965:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2965:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2953:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2953:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2953:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2931:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2938:3:5",
														"type": ""
													}
												],
												"src": "2878:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3156:608:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3166:68:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3228:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3180:47:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3180:54:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3170:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3243:93:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3324:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3329:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3250:73:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3250:86:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3243:3:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3345:71:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3410:5:5"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3360:49:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3360:56:5"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "3349:7:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3425:21:5",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "3439:7:5"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3429:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3515:224:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3529:34:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3556:6:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "3550:5:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3550:13:5"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "3533:13:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3576:70:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "3627:13:5"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3642:3:5"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "3583:43:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3583:63:5"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3576:3:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3659:70:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3722:6:5"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "3669:52:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3669:60:5"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3659:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3477:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3480:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3474:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3474:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3488:18:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3490:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3499:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3502:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3495:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3495:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3490:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3459:14:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3461:10:5",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3470:1:5",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "3465:1:5",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "3455:284:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3748:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3755:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3748:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3135:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3142:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3151:3:5",
														"type": ""
													}
												],
												"src": "3032:732:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3835:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3852:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3875:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "3857:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3857:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3845:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3845:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3845:37:5"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3823:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3830:3:5",
														"type": ""
													}
												],
												"src": "3770:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3957:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3974:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3996:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "3979:16:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3979:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3967:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3967:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3967:36:5"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3945:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3952:3:5",
														"type": ""
													}
												],
												"src": "3894:115:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4094:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4111:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4161:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$541_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4116:44:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4116:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4104:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4104:64:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4104:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$541_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4082:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4089:3:5",
														"type": ""
													}
												],
												"src": "4015:159:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4253:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4270:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4314:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_3_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4275:38:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4275:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4263:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4263:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4263:58:5"
														}
													]
												},
												"name": "abi_encode_t_rational_3_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4241:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4248:3:5",
														"type": ""
													}
												],
												"src": "4180:147:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4479:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4489:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4555:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4560:2:5",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4496:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4496:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4489:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4661:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
																	"nodeType": "YulIdentifier",
																	"src": "4572:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4572:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4572:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4674:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4685:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4690:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4681:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4674:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4467:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4475:3:5",
														"type": ""
													}
												],
												"src": "4333:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4760:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4777:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4800:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4782:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4782:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4770:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4770:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4770:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4748:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4755:3:5",
														"type": ""
													}
												],
												"src": "4705:108:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4884:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4901:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4924:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4906:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4906:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4894:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4894:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4894:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4872:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4879:3:5",
														"type": ""
													}
												],
												"src": "4819:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5041:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5051:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5063:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5074:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5059:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5059:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5051:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5131:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5144:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5155:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5140:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5140:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5087:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5087:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5087:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5013:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5025:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5036:4:5",
														"type": ""
													}
												],
												"src": "4943:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5333:296:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5343:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5355:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5366:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5351:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5351:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5343:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5423:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5436:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5447:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5432:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5432:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5379:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5379:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5379:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5504:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5517:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5528:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5513:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5513:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5460:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5460:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5460:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5594:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5607:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5618:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5603:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5603:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_3_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5542:51:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5542:80:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5542:80:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32_t_rational_3_by_1__to_t_address_t_bytes32_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5289:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5301:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5309:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5317:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5328:4:5",
														"type": ""
													}
												],
												"src": "5171:458:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5761:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5771:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5783:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5779:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5771:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5851:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5864:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5875:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5860:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5860:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5807:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5807:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5807:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5932:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5945:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5956:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5941:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5941:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5888:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5888:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5888:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5725:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5737:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5745:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5756:4:5",
														"type": ""
													}
												],
												"src": "5635:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6069:122:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6079:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6091:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6102:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6087:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6087:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6079:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6157:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6170:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6181:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6166:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6166:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6115:41:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6115:69:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6115:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6041:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6053:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6064:4:5",
														"type": ""
													}
												],
												"src": "5973:218:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6471:569:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6481:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6493:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6504:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6489:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6489:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6481:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6576:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6589:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6600:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6585:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6585:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$541_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6518:57:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6518:85:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6518:85:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6657:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6670:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6681:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6666:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6666:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6613:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6613:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6613:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6739:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6752:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6763:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6748:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6748:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6695:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6695:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6695:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6788:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6799:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6784:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6784:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6808:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6814:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6804:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6804:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6777:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6777:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6777:48:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6834:116:5",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6936:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6945:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6842:93:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6842:108:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6834:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7004:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7017:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7028:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7013:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7013:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6960:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6960:73:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6960:73:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$541_t_bytes32_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_address_t_bytes32_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6411:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6423:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6431:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6439:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6447:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6455:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6466:4:5",
														"type": ""
													}
												],
												"src": "6197:843:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7217:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7227:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7239:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7250:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7235:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7235:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7227:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7274:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7285:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7270:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7270:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7293:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7299:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7289:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7289:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7263:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7263:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7263:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7319:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7453:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7327:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7327:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7319:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7197:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7212:4:5",
														"type": ""
													}
												],
												"src": "7046:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7569:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7579:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7591:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7602:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7587:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7587:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7579:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7659:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7672:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7683:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7668:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7668:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7615:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7615:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7615:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7541:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7553:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7564:4:5",
														"type": ""
													}
												],
												"src": "7471:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7739:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7749:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7765:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7759:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7759:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7749:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7732:6:5",
														"type": ""
													}
												],
												"src": "7699:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7852:60:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7862:11:5",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "7870:3:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7862:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7883:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7895:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7900:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7891:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7891:14:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7883:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7839:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "7847:4:5",
														"type": ""
													}
												],
												"src": "7780:132:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7992:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8003:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8019:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8013:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8013:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8003:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7975:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7985:6:5",
														"type": ""
													}
												],
												"src": "7918:114:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8113:38:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8123:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8135:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8140:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8131:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8131:14:5"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "8123:4:5"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8100:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "8108:4:5",
														"type": ""
													}
												],
												"src": "8038:113:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8268:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8285:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8290:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8278:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8278:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8278:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8306:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8325:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8330:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8321:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8321:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8306:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8240:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8245:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8256:11:5",
														"type": ""
													}
												],
												"src": "8157:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8443:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8460:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8465:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8453:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8453:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8453:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8481:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8500:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8505:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8496:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8496:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8481:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8415:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8420:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8431:11:5",
														"type": ""
													}
												],
												"src": "8347:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8567:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8577:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8606:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "8588:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8588:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8577:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8549:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8559:7:5",
														"type": ""
													}
												],
												"src": "8522:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8666:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8676:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8701:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8694:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8694:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8687:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8687:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8676:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8648:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8658:7:5",
														"type": ""
													}
												],
												"src": "8624:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8765:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8775:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8786:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8775:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8747:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8757:7:5",
														"type": ""
													}
												],
												"src": "8720:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8847:105:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8857:89:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8872:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8879:66:5",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8868:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8868:78:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8857:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8829:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8839:7:5",
														"type": ""
													}
												],
												"src": "8803:149:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9003:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9013:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9028:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9035:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9024:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9024:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9013:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8985:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8995:7:5",
														"type": ""
													}
												],
												"src": "8958:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9135:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9145:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9156:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9145:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9117:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9127:7:5",
														"type": ""
													}
												],
												"src": "9090:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9247:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9257:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9301:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "9270:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9270:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9257:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$541_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9227:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9237:9:5",
														"type": ""
													}
												],
												"src": "9173:140:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9387:53:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9397:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9428:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9410:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9410:24:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9397:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_3_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9367:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9377:9:5",
														"type": ""
													}
												],
												"src": "9319:121:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9506:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9516:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9560:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9529:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9529:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9516:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9486:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9496:9:5",
														"type": ""
													}
												],
												"src": "9446:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9638:53:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9648:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9679:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9661:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9661:24:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9648:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9618:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9628:9:5",
														"type": ""
													}
												],
												"src": "9578:113:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9725:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9742:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9745:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9735:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9735:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9735:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9842:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9832:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9832:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9832:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9863:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9866:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9856:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9856:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9856:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9697:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9911:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9928:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9931:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9921:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9921:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9921:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10025:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10028:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10018:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10018:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10018:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10049:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10052:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10042:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10042:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10042:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "9883:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10158:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10175:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10178:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10168:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10168:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10168:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "10069:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10281:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10298:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10301:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10291:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10291:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10291:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "10192:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10421:54:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10443:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10451:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10439:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10439:14:5"
																	},
																	{
																		"hexValue": "6f6e6c792061646d696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10455:12:5",
																		"type": "",
																		"value": "only admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10432:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10432:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10432:36:5"
														}
													]
												},
												"name": "store_literal_in_memory_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10413:6:5",
														"type": ""
													}
												],
												"src": "10315:160:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10524:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10581:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10590:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10593:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10583:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10583:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10583:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10547:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10572:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "10554:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10554:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10544:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10544:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10537:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10537:43:5"
															},
															"nodeType": "YulIf",
															"src": "10534:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10517:5:5",
														"type": ""
													}
												],
												"src": "10481:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10649:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10703:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10712:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10715:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10705:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10705:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10705:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10672:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10694:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "10679:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10679:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10669:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10669:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10662:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10662:40:5"
															},
															"nodeType": "YulIf",
															"src": "10659:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10642:5:5",
														"type": ""
													}
												],
												"src": "10609:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10774:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10831:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10840:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10843:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10833:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10833:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10833:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10797:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10822:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "10804:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10804:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10794:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10794:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10787:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10787:43:5"
															},
															"nodeType": "YulIf",
															"src": "10784:63:5"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10767:5:5",
														"type": ""
													}
												],
												"src": "10731:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10902:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10959:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10968:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10971:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10961:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10961:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10961:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10925:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10950:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "10932:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10932:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10922:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10922:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10915:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10915:43:5"
															},
															"nodeType": "YulIf",
															"src": "10912:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10895:5:5",
														"type": ""
													}
												],
												"src": "10859:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$541_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$541_to_t_address(value))\n    }\n\n    function abi_encode_t_rational_3_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_3_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32_t_rational_3_by_1__to_t_address_t_bytes32_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_3_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$541_t_bytes32_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__to_t_address_t_bytes32_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_contract$_IERC20_$541_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$541_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_rational_3_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d(memPtr) {\n\n        mstore(add(memPtr, 0), \"only admin\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80633dae9a2b146100675780637dc0d1d014610085578063a38d190d146100a3578063ed0f7940146100c1578063ef77620b146100f1578063ff8ccaae1461010d575b600080fd5b61006f610129565b60405161007c919061093e565b60405180910390f35b61008d610151565b60405161009a91906108c3565b60405180910390f35b6100ab610177565b6040516100b8919061093e565b60405180910390f35b6100db60048036038101906100d6919061071a565b61019f565b6040516100e891906109d3565b60405180910390f35b61010b6004803603810190610106919061071a565b6101c4565b005b6101276004803603810190610122919061075a565b6105c1565b005b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007ff23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97905090565b6003602052816000526040600020602052806000526040600020600091509150505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d96ee754600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460036040518463ffffffff1660e01b8152600401610246939291906108de565b600060405180830381600087803b15801561026057600080fd5b505af1158015610274573d6000803e3d6000fd5b505050506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663852c6ae2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560036040518463ffffffff1660e01b81526004016102fc939291906108de565b60206040518083038186803b15801561031457600080fd5b505afa158015610328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034c91906106ed565b90506000600267ffffffffffffffff81111561036b5761036a610b2d565b5b6040519080825280602002602001820160405280156103995781602001602082028036833780820191505090505b5090506001816000815181106103b2576103b1610afe565b5b6020026020010181815250506003816001815181106103d4576103d3610afe565b5b60200260200101818152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b815260040161045d929190610915565b602060405180830381600087803b15801561047757600080fd5b505af115801561048b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104af91906106c0565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636fb4be6260008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000801b8585886040518663ffffffff1660e01b8152600401610536959493929190610959565b600060405180830381600087803b15801561055057600080fd5b505af1158015610564573d6000803e3d6000fd5b50505050826003600086815260200190815260200160002060008081526020019081526020016000208190555082600360008681526020019081526020016000206000600181526020019081526020016000208190555050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610651576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610648906109b3565b60405180910390fd5b50505050565b60008135905061066681610b8a565b92915050565b60008151905061067b81610ba1565b92915050565b60008135905061069081610bb8565b92915050565b6000815190506106a581610bb8565b92915050565b6000813590506106ba81610bcf565b92915050565b6000602082840312156106d6576106d5610b5c565b5b60006106e48482850161066c565b91505092915050565b60006020828403121561070357610702610b5c565b5b600061071184828501610696565b91505092915050565b6000806040838503121561073157610730610b5c565b5b600061073f85828601610681565b9250506020610750858286016106ab565b9150509250929050565b6000806000806080858703121561077457610773610b5c565b5b600061078287828801610681565b9450506020610793878288016106ab565b93505060406107a487828801610657565b92505060606107b5878288016106ab565b91505092959194509250565b60006107cd83836108a5565b60208301905092915050565b6107e281610a38565b82525050565b60006107f3826109fe565b6107fd8185610a16565b9350610808836109ee565b8060005b8381101561083957815161082088826107c1565b975061082b83610a09565b92505060018101905061080c565b5085935050505092915050565b61084f81610a56565b82525050565b61085e81610a60565b82525050565b61086d81610ab6565b82525050565b61087c81610ac8565b82525050565b600061088f600a83610a27565b915061089a82610b61565b602082019050919050565b6108ae81610aac565b82525050565b6108bd81610aac565b82525050565b60006020820190506108d860008301846107d9565b92915050565b60006060820190506108f360008301866107d9565b6109006020830185610846565b61090d6040830184610873565b949350505050565b600060408201905061092a60008301856107d9565b61093760208301846108b4565b9392505050565b60006020820190506109536000830184610855565b92915050565b600060a08201905061096e6000830188610864565b61097b6020830187610846565b6109886040830186610846565b818103606083015261099a81856107e8565b90506109a960808301846108b4565b9695505050505050565b600060208201905081810360008301526109cc81610882565b9050919050565b60006020820190506109e860008301846108b4565b92915050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610a4382610a8c565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610ac182610ada565b9050919050565b6000610ad382610aac565b9050919050565b6000610ae582610aec565b9050919050565b6000610af782610a8c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f6f6e6c792061646d696e00000000000000000000000000000000000000000000600082015250565b610b9381610a38565b8114610b9e57600080fd5b50565b610baa81610a4a565b8114610bb557600080fd5b50565b610bc181610a56565b8114610bcc57600080fd5b50565b610bd881610aac565b8114610be357600080fd5b5056fea26469706673582212203e4d74081e39e2e3d607674767a261dce6ceee9ee0641b941a5f7817f5b39d6e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3DAE9A2B EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0xA38D190D EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xED0F7940 EQ PUSH2 0xC1 JUMPI DUP1 PUSH4 0xEF77620B EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xFF8CCAAE EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x151 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xAB PUSH2 0x177 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x93E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x19F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x71A JUMP JUMPDEST PUSH2 0x1C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x75A JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0xF23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xF23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD96EE754 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x3 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x246 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x274 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x852C6AE2 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x3 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2FC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x328 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x6ED JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x36B JUMPI PUSH2 0x36A PUSH2 0xB2D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x399 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3B2 JUMPI PUSH2 0x3B1 PUSH2 0xAFE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3D4 JUMPI PUSH2 0x3D3 PUSH2 0xAFE JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x45D SWAP3 SWAP2 SWAP1 PUSH2 0x915 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x48B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x6C0 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6FB4BE62 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SHL DUP6 DUP6 DUP9 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x536 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x959 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x564 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x651 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x648 SWAP1 PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x666 DUP2 PUSH2 0xB8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x67B DUP2 PUSH2 0xBA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x690 DUP2 PUSH2 0xBB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x6A5 DUP2 PUSH2 0xBB8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6BA DUP2 PUSH2 0xBCF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6D6 JUMPI PUSH2 0x6D5 PUSH2 0xB5C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6E4 DUP5 DUP3 DUP6 ADD PUSH2 0x66C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x703 JUMPI PUSH2 0x702 PUSH2 0xB5C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x711 DUP5 DUP3 DUP6 ADD PUSH2 0x696 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x731 JUMPI PUSH2 0x730 PUSH2 0xB5C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x73F DUP6 DUP3 DUP7 ADD PUSH2 0x681 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x750 DUP6 DUP3 DUP7 ADD PUSH2 0x6AB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH2 0x773 PUSH2 0xB5C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x782 DUP8 DUP3 DUP9 ADD PUSH2 0x681 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x793 DUP8 DUP3 DUP9 ADD PUSH2 0x6AB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x7A4 DUP8 DUP3 DUP9 ADD PUSH2 0x657 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x7B5 DUP8 DUP3 DUP9 ADD PUSH2 0x6AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CD DUP4 DUP4 PUSH2 0x8A5 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7E2 DUP2 PUSH2 0xA38 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7F3 DUP3 PUSH2 0x9FE JUMP JUMPDEST PUSH2 0x7FD DUP2 DUP6 PUSH2 0xA16 JUMP JUMPDEST SWAP4 POP PUSH2 0x808 DUP4 PUSH2 0x9EE JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x839 JUMPI DUP2 MLOAD PUSH2 0x820 DUP9 DUP3 PUSH2 0x7C1 JUMP JUMPDEST SWAP8 POP PUSH2 0x82B DUP4 PUSH2 0xA09 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x80C JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x84F DUP2 PUSH2 0xA56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x85E DUP2 PUSH2 0xA60 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x86D DUP2 PUSH2 0xAB6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x87C DUP2 PUSH2 0xAC8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88F PUSH1 0xA DUP4 PUSH2 0xA27 JUMP JUMPDEST SWAP2 POP PUSH2 0x89A DUP3 PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AE DUP2 PUSH2 0xAAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x8BD DUP2 PUSH2 0xAAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x8F3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x900 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x90D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x873 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x92A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x937 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8B4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x953 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x855 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x96E PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x864 JUMP JUMPDEST PUSH2 0x97B PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x846 JUMP JUMPDEST PUSH2 0x988 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x846 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x99A DUP2 DUP6 PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP PUSH2 0x9A9 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x8B4 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9CC DUP2 PUSH2 0x882 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9E8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA43 DUP3 PUSH2 0xA8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC1 DUP3 PUSH2 0xADA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD3 DUP3 PUSH2 0xAAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE5 DUP3 PUSH2 0xAEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAF7 DUP3 PUSH2 0xA8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x6F6E6C792061646D696E00000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xB93 DUP2 PUSH2 0xA38 JUMP JUMPDEST DUP2 EQ PUSH2 0xB9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xBAA DUP2 PUSH2 0xA4A JUMP JUMPDEST DUP2 EQ PUSH2 0xBB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xBC1 DUP2 PUSH2 0xA56 JUMP JUMPDEST DUP2 EQ PUSH2 0xBCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xBD8 DUP2 PUSH2 0xAAC JUMP JUMPDEST DUP2 EQ PUSH2 0xBE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY 0x4D PUSH21 0x81E39E2E3D607674767A261DCE6CEEE9EE0641B94 BYTE 0x5F PUSH25 0x17F5B39D6E64736F6C63430008070033000000000000000000 ",
							"sourceMap": "142:2298:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2108:329;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;223:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1802:300;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;250:61;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;601:999;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1606:190;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2108:329;2328:6;2360:69;2346:84;;2108:329;:::o;223:21::-;;;;;;;;;;;;;:::o;1802:300::-;1993:6;2025:69;2011:84;;1802:300;:::o;250:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;601:999::-;672:17;;;;;;;;;;;:34;;;720:6;;;;;;;;;;;740:10;764:1;672:143;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;826:19;848:17;;;;;;;;;;;:32;;;894:6;;;;;;;;;;;914:10;938:1;848:141;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;826:163;;1192:23;1229:1;1218:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1192:39;;1256:1;1241:9;1251:1;1241:12;;;;;;;;:::i;:::-;;;;;;;:16;;;;;1282:1;1267:9;1277:1;1267:12;;;;;;;;:::i;:::-;;;;;;;:16;;;;;1294:3;;;;;;;;;;:11;;;1314:17;;;;;;;;;;;1334:6;1294:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1351:17;;;;;;;;;;;:30;;;1395:3;;;;;;;;;;1420:1;1412:10;;1436:11;1461:9;1484:6;1351:149;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1541:6;1511:12;:24;1524:10;1511:24;;;;;;;;;;;:27;1536:1;1511:27;;;;;;;;;;;:36;;;;1587:6;1557:12;:24;1570:10;1557:24;;;;;;;;;;;:27;1582:1;1557:27;;;;;;;;;;;:36;;;;662:938;;601:999;;:::o;1606:190::-;1769:5;;;;;;;;;;;1755:19;;:10;:19;;;1747:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;1606:190;;;;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:143::-;497:5;528:6;522:13;513:22;;544:33;571:5;544:33;:::i;:::-;440:143;;;;:::o;589:139::-;635:5;673:6;660:20;651:29;;689:33;716:5;689:33;:::i;:::-;589:139;;;;:::o;734:345::-;801:6;850:2;838:9;829:7;825:23;821:32;818:119;;;856:79;;:::i;:::-;818:119;976:1;1001:61;1054:7;1045:6;1034:9;1030:22;1001:61;:::i;:::-;991:71;;947:125;734:345;;;;:::o;1085:351::-;1155:6;1204:2;1192:9;1183:7;1179:23;1175:32;1172:119;;;1210:79;;:::i;:::-;1172:119;1330:1;1355:64;1411:7;1402:6;1391:9;1387:22;1355:64;:::i;:::-;1345:74;;1301:128;1085:351;;;;:::o;1442:474::-;1510:6;1518;1567:2;1555:9;1546:7;1542:23;1538:32;1535:119;;;1573:79;;:::i;:::-;1535:119;1693:1;1718:53;1763:7;1754:6;1743:9;1739:22;1718:53;:::i;:::-;1708:63;;1664:117;1820:2;1846:53;1891:7;1882:6;1871:9;1867:22;1846:53;:::i;:::-;1836:63;;1791:118;1442:474;;;;;:::o;1922:765::-;2008:6;2016;2024;2032;2081:3;2069:9;2060:7;2056:23;2052:33;2049:120;;;2088:79;;:::i;:::-;2049:120;2208:1;2233:53;2278:7;2269:6;2258:9;2254:22;2233:53;:::i;:::-;2223:63;;2179:117;2335:2;2361:53;2406:7;2397:6;2386:9;2382:22;2361:53;:::i;:::-;2351:63;;2306:118;2463:2;2489:53;2534:7;2525:6;2514:9;2510:22;2489:53;:::i;:::-;2479:63;;2434:118;2591:2;2617:53;2662:7;2653:6;2642:9;2638:22;2617:53;:::i;:::-;2607:63;;2562:118;1922:765;;;;;;;:::o;2693:179::-;2762:10;2783:46;2825:3;2817:6;2783:46;:::i;:::-;2861:4;2856:3;2852:14;2838:28;;2693:179;;;;:::o;2878:118::-;2965:24;2983:5;2965:24;:::i;:::-;2960:3;2953:37;2878:118;;:::o;3032:732::-;3151:3;3180:54;3228:5;3180:54;:::i;:::-;3250:86;3329:6;3324:3;3250:86;:::i;:::-;3243:93;;3360:56;3410:5;3360:56;:::i;:::-;3439:7;3470:1;3455:284;3480:6;3477:1;3474:13;3455:284;;;3556:6;3550:13;3583:63;3642:3;3627:13;3583:63;:::i;:::-;3576:70;;3669:60;3722:6;3669:60;:::i;:::-;3659:70;;3515:224;3502:1;3499;3495:9;3490:14;;3455:284;;;3459:14;3755:3;3748:10;;3156:608;;;3032:732;;;;:::o;3770:118::-;3857:24;3875:5;3857:24;:::i;:::-;3852:3;3845:37;3770:118;;:::o;3894:115::-;3979:23;3996:5;3979:23;:::i;:::-;3974:3;3967:36;3894:115;;:::o;4015:159::-;4116:51;4161:5;4116:51;:::i;:::-;4111:3;4104:64;4015:159;;:::o;4180:147::-;4275:45;4314:5;4275:45;:::i;:::-;4270:3;4263:58;4180:147;;:::o;4333:366::-;4475:3;4496:67;4560:2;4555:3;4496:67;:::i;:::-;4489:74;;4572:93;4661:3;4572:93;:::i;:::-;4690:2;4685:3;4681:12;4674:19;;4333:366;;;:::o;4705:108::-;4782:24;4800:5;4782:24;:::i;:::-;4777:3;4770:37;4705:108;;:::o;4819:118::-;4906:24;4924:5;4906:24;:::i;:::-;4901:3;4894:37;4819:118;;:::o;4943:222::-;5036:4;5074:2;5063:9;5059:18;5051:26;;5087:71;5155:1;5144:9;5140:17;5131:6;5087:71;:::i;:::-;4943:222;;;;:::o;5171:458::-;5328:4;5366:2;5355:9;5351:18;5343:26;;5379:71;5447:1;5436:9;5432:17;5423:6;5379:71;:::i;:::-;5460:72;5528:2;5517:9;5513:18;5504:6;5460:72;:::i;:::-;5542:80;5618:2;5607:9;5603:18;5594:6;5542:80;:::i;:::-;5171:458;;;;;;:::o;5635:332::-;5756:4;5794:2;5783:9;5779:18;5771:26;;5807:71;5875:1;5864:9;5860:17;5851:6;5807:71;:::i;:::-;5888:72;5956:2;5945:9;5941:18;5932:6;5888:72;:::i;:::-;5635:332;;;;;:::o;5973:218::-;6064:4;6102:2;6091:9;6087:18;6079:26;;6115:69;6181:1;6170:9;6166:17;6157:6;6115:69;:::i;:::-;5973:218;;;;:::o;6197:843::-;6466:4;6504:3;6493:9;6489:19;6481:27;;6518:85;6600:1;6589:9;6585:17;6576:6;6518:85;:::i;:::-;6613:72;6681:2;6670:9;6666:18;6657:6;6613:72;:::i;:::-;6695;6763:2;6752:9;6748:18;6739:6;6695:72;:::i;:::-;6814:9;6808:4;6804:20;6799:2;6788:9;6784:18;6777:48;6842:108;6945:4;6936:6;6842:108;:::i;:::-;6834:116;;6960:73;7028:3;7017:9;7013:19;7004:6;6960:73;:::i;:::-;6197:843;;;;;;;;:::o;7046:419::-;7212:4;7250:2;7239:9;7235:18;7227:26;;7299:9;7293:4;7289:20;7285:1;7274:9;7270:17;7263:47;7327:131;7453:4;7327:131;:::i;:::-;7319:139;;7046:419;;;:::o;7471:222::-;7564:4;7602:2;7591:9;7587:18;7579:26;;7615:71;7683:1;7672:9;7668:17;7659:6;7615:71;:::i;:::-;7471:222;;;;:::o;7780:132::-;7847:4;7870:3;7862:11;;7900:4;7895:3;7891:14;7883:22;;7780:132;;;:::o;7918:114::-;7985:6;8019:5;8013:12;8003:22;;7918:114;;;:::o;8038:113::-;8108:4;8140;8135:3;8131:14;8123:22;;8038:113;;;:::o;8157:184::-;8256:11;8290:6;8285:3;8278:19;8330:4;8325:3;8321:14;8306:29;;8157:184;;;;:::o;8347:169::-;8431:11;8465:6;8460:3;8453:19;8505:4;8500:3;8496:14;8481:29;;8347:169;;;;:::o;8522:96::-;8559:7;8588:24;8606:5;8588:24;:::i;:::-;8577:35;;8522:96;;;:::o;8624:90::-;8658:7;8701:5;8694:13;8687:21;8676:32;;8624:90;;;:::o;8720:77::-;8757:7;8786:5;8775:16;;8720:77;;;:::o;8803:149::-;8839:7;8879:66;8872:5;8868:78;8857:89;;8803:149;;;:::o;8958:126::-;8995:7;9035:42;9028:5;9024:54;9013:65;;8958:126;;;:::o;9090:77::-;9127:7;9156:5;9145:16;;9090:77;;;:::o;9173:140::-;9237:9;9270:37;9301:5;9270:37;:::i;:::-;9257:50;;9173:140;;;:::o;9319:121::-;9377:9;9410:24;9428:5;9410:24;:::i;:::-;9397:37;;9319:121;;;:::o;9446:126::-;9496:9;9529:37;9560:5;9529:37;:::i;:::-;9516:50;;9446:126;;;:::o;9578:113::-;9628:9;9661:24;9679:5;9661:24;:::i;:::-;9648:37;;9578:113;;;:::o;9697:180::-;9745:77;9742:1;9735:88;9842:4;9839:1;9832:15;9866:4;9863:1;9856:15;9883:180;9931:77;9928:1;9921:88;10028:4;10025:1;10018:15;10052:4;10049:1;10042:15;10192:117;10301:1;10298;10291:12;10315:160;10455:12;10451:1;10443:6;10439:14;10432:36;10315:160;:::o;10481:122::-;10554:24;10572:5;10554:24;:::i;:::-;10547:5;10544:35;10534:63;;10593:1;10590;10583:12;10534:63;10481:122;:::o;10609:116::-;10679:21;10694:5;10679:21;:::i;:::-;10672:5;10669:32;10659:60;;10715:1;10712;10705:12;10659:60;10609:116;:::o;10731:122::-;10804:24;10822:5;10804:24;:::i;:::-;10797:5;10794:35;10784:63;;10843:1;10840;10833:12;10784:63;10731:122;:::o;10859:::-;10932:24;10950:5;10932:24;:::i;:::-;10925:5;10922:35;10912:63;;10971:1;10968;10961:12;10912:63;10859:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "620000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"createBet(bytes32,uint256)": "infinite",
								"onERC1155BatchReceived()": "321",
								"onERC1155Received()": "365",
								"oracle()": "2514",
								"tokenBalance(bytes32,uint256)": "infinite",
								"transferTokens(bytes32,uint256,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 142,
									"end": 2440,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 142,
									"end": 2440,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 142,
									"end": 2440,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 337,
									"end": 595,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 337,
									"end": 595,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 337,
									"end": 595,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 337,
									"end": 595,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 337,
									"end": 595,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 337,
									"end": 595,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 337,
									"end": 595,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 337,
									"end": 595,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 337,
									"end": 595,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 461,
									"end": 465,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 448,
									"end": 451,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 448,
									"end": 451,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 448,
									"end": 466,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 448,
									"end": 466,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 448,
									"end": 466,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 448,
									"end": 466,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 448,
									"end": 466,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 448,
									"end": 466,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 448,
									"end": 466,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 448,
									"end": 466,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 448,
									"end": 466,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 448,
									"end": 466,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 448,
									"end": 466,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 448,
									"end": 466,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 448,
									"end": 466,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 448,
									"end": 466,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 448,
									"end": 466,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 448,
									"end": 466,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 448,
									"end": 466,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 448,
									"end": 466,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 515,
									"end": 533,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 476,
									"end": 493,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 476,
									"end": 493,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 476,
									"end": 534,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 476,
									"end": 534,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 476,
									"end": 534,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 476,
									"end": 534,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 476,
									"end": 534,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 476,
									"end": 534,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 476,
									"end": 534,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 476,
									"end": 534,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 476,
									"end": 534,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 476,
									"end": 534,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 476,
									"end": 534,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 476,
									"end": 534,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 476,
									"end": 534,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 476,
									"end": 534,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 476,
									"end": 534,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 476,
									"end": 534,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 476,
									"end": 534,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 476,
									"end": 534,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 553,
									"end": 560,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 544,
									"end": 550,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 544,
									"end": 550,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 544,
									"end": 560,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 544,
									"end": 560,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 544,
									"end": 560,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 544,
									"end": 560,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 544,
									"end": 560,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 544,
									"end": 560,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 544,
									"end": 560,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 544,
									"end": 560,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 544,
									"end": 560,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 544,
									"end": 560,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 544,
									"end": 560,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 544,
									"end": 560,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 544,
									"end": 560,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 544,
									"end": 560,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 544,
									"end": 560,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 544,
									"end": 560,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 544,
									"end": 560,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 544,
									"end": 560,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 578,
									"end": 588,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 570,
									"end": 575,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 570,
									"end": 575,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 570,
									"end": 588,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 570,
									"end": 588,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 570,
									"end": 588,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 588,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 570,
									"end": 588,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 570,
									"end": 588,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 570,
									"end": 588,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 570,
									"end": 588,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 570,
									"end": 588,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 570,
									"end": 588,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 588,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 570,
									"end": 588,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 570,
									"end": 588,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 570,
									"end": 588,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 570,
									"end": 588,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 570,
									"end": 588,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 570,
									"end": 588,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 570,
									"end": 588,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 337,
									"end": 595,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 142,
									"end": 2440,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 142,
									"end": 2440,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 819,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 819,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 244,
									"end": 250,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 258,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 260,
									"end": 266,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 311,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 297,
									"end": 306,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 288,
									"end": 295,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 284,
									"end": 307,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 280,
									"end": 312,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 277,
									"end": 396,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 277,
									"end": 396,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 277,
									"end": 396,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 315,
									"end": 394,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 277,
									"end": 396,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 277,
									"end": 396,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 435,
									"end": 436,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 516,
									"end": 523,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 507,
									"end": 513,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 496,
									"end": 505,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 492,
									"end": 514,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 460,
									"end": 524,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 450,
									"end": 524,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 450,
									"end": 524,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 406,
									"end": 534,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 573,
									"end": 575,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 655,
									"end": 662,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 646,
									"end": 652,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 635,
									"end": 644,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 631,
									"end": 653,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 599,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 589,
									"end": 663,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 589,
									"end": 663,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 544,
									"end": 673,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 712,
									"end": 714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 794,
									"end": 801,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 774,
									"end": 783,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 770,
									"end": 792,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 738,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 728,
									"end": 802,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 728,
									"end": 802,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 683,
									"end": 812,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 819,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 819,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 819,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 819,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 819,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 819,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 943,
									"end": 950,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 990,
									"end": 995,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 972,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 961,
									"end": 996,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 961,
									"end": 996,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1045,
									"end": 1052,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1085,
									"end": 1127,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1078,
									"end": 1083,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1074,
									"end": 1128,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1063,
									"end": 1128,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1063,
									"end": 1128,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1263,
									"end": 1380,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1263,
									"end": 1380,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1372,
									"end": 1373,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1369,
									"end": 1370,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1362,
									"end": 1374,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1477,
									"end": 1482,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1452,
									"end": 1457,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1449,
									"end": 1484,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1498,
									"end": 1499,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1495,
									"end": 1496,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1488,
									"end": 1500,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 142,
									"end": 2440,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 142,
									"end": 2440,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 142,
									"end": 2440,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 142,
									"end": 2440,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 142,
									"end": 2440,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 142,
									"end": 2440,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 2440,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 142,
									"end": 2440,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 2440,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e4d74081e39e2e3d607674767a261dce6ceee9ee0641b941a5f7817f5b39d6e64736f6c63430008070033",
									".code": [
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "3DAE9A2B"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "7DC0D1D0"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "A38D190D"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "ED0F7940"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "EF77620B"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "FF8CCAAE"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2440,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 223,
											"end": 244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 223,
											"end": 244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 223,
											"end": 244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 223,
											"end": 244,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 223,
											"end": 244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 223,
											"end": 244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 223,
											"end": 244,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 223,
											"end": 244,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 223,
											"end": 244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2429,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97"
										},
										{
											"begin": 2346,
											"end": 2430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2346,
											"end": 2430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2437,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 223,
											"end": 244,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 223,
											"end": 244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 223,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 223,
											"end": 244,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 223,
											"end": 244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2094,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E612E1FF4830E658FE43F4E3CB4A5F8170BD5D9E69FB5D7A7FA9E4FDF97"
										},
										{
											"begin": 2011,
											"end": 2095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 2102,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 250,
											"end": 311,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 672,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 672,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 689,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 672,
											"end": 689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 672,
											"end": 689,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 672,
											"end": 689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 689,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 672,
											"end": 689,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 672,
											"end": 689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 672,
											"end": 706,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 672,
											"end": 706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 672,
											"end": 706,
											"name": "PUSH",
											"source": 0,
											"value": "D96EE754"
										},
										{
											"begin": 720,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 720,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 720,
											"end": 726,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 720,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 720,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 720,
											"end": 726,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 720,
											"end": 726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 720,
											"end": 726,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 720,
											"end": 726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 720,
											"end": 726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 740,
											"end": 750,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 764,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 672,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 672,
											"end": 815,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 672,
											"end": 815,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 672,
											"end": 815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 672,
											"end": 815,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 672,
											"end": 815,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 672,
											"end": 815,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 672,
											"end": 815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 815,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 672,
											"end": 815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 672,
											"end": 815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 815,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 672,
											"end": 815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 672,
											"end": 815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 826,
											"end": 845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 865,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 848,
											"end": 865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 848,
											"end": 865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 865,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 848,
											"end": 865,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 848,
											"end": 865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 865,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 848,
											"end": 865,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 848,
											"end": 865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 848,
											"end": 880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 848,
											"end": 880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 848,
											"end": 880,
											"name": "PUSH",
											"source": 0,
											"value": "852C6AE2"
										},
										{
											"begin": 894,
											"end": 900,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 894,
											"end": 900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 894,
											"end": 900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 894,
											"end": 900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 894,
											"end": 900,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 894,
											"end": 900,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 894,
											"end": 900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 894,
											"end": 900,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 894,
											"end": 900,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 894,
											"end": 900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 914,
											"end": 924,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 938,
											"end": 939,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 848,
											"end": 989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 826,
											"end": 989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 826,
											"end": 989,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1229,
											"end": 1230,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1218,
											"end": 1231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1256,
											"end": 1257,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1241,
											"end": 1250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1251,
											"end": 1252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1253,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1241,
											"end": 1253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1241,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1241,
											"end": 1253,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1241,
											"end": 1253,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1241,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1253,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1241,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1253,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1253,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1257,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1257,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1241,
											"end": 1257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1267,
											"end": 1276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1278,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1267,
											"end": 1283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1297,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1297,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1294,
											"end": 1297,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1297,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1297,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1294,
											"end": 1297,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1294,
											"end": 1305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1305,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1314,
											"end": 1331,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1314,
											"end": 1331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1331,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1331,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1314,
											"end": 1331,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1331,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1331,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1314,
											"end": 1331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1340,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1294,
											"end": 1341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1351,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1351,
											"end": 1368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1351,
											"end": 1368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1381,
											"name": "PUSH",
											"source": 0,
											"value": "6FB4BE62"
										},
										{
											"begin": 1395,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1398,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1398,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1395,
											"end": 1398,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1398,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1395,
											"end": 1398,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1398,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1420,
											"end": 1421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1412,
											"end": 1422,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1447,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1461,
											"end": 1470,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1523,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1511,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1534,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1535,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1511,
											"end": 1535,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1535,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1511,
											"end": 1535,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 1535,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1511,
											"end": 1538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1511,
											"end": 1538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 1538,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1547,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1511,
											"end": 1547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1587,
											"end": 1593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1569,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1557,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1580,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1557,
											"end": 1581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1557,
											"end": 1581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1557,
											"end": 1581,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1583,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1557,
											"end": 1584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1584,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1557,
											"end": 1584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1584,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1557,
											"end": 1584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1557,
											"end": 1584,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1593,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1557,
											"end": 1593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 601,
											"end": 1600,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1774,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1769,
											"end": 1774,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1774,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1774,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1769,
											"end": 1774,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1774,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1769,
											"end": 1774,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1769,
											"end": 1774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1765,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1774,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1606,
											"end": 1796,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 497,
											"end": 502,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 534,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 522,
											"end": 535,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 513,
											"end": 535,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 513,
											"end": 535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 544,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 544,
											"end": 577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 440,
											"end": 583,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 589,
											"end": 728,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 589,
											"end": 728,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 635,
											"end": 640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 679,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 660,
											"end": 680,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 651,
											"end": 680,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 651,
											"end": 680,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 689,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 716,
											"end": 721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 689,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 689,
											"end": 722,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 689,
											"end": 722,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 689,
											"end": 722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 589,
											"end": 728,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 589,
											"end": 728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 589,
											"end": 728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 589,
											"end": 728,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 734,
											"end": 1079,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 734,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 801,
											"end": 807,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 852,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 838,
											"end": 847,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 829,
											"end": 836,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 825,
											"end": 848,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 821,
											"end": 853,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 818,
											"end": 937,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 818,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 818,
											"end": 937,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 856,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 856,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 856,
											"end": 935,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 856,
											"end": 935,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 856,
											"end": 935,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 818,
											"end": 937,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 818,
											"end": 937,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 976,
											"end": 977,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1054,
											"end": 1061,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1030,
											"end": 1052,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1001,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1001,
											"end": 1062,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1001,
											"end": 1062,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 1001,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1062,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 991,
											"end": 1062,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 947,
											"end": 1072,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 734,
											"end": 1079,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 734,
											"end": 1079,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 734,
											"end": 1079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 734,
											"end": 1079,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 734,
											"end": 1079,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1436,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1085,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1155,
											"end": 1161,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1206,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1192,
											"end": 1201,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1183,
											"end": 1190,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1179,
											"end": 1202,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1175,
											"end": 1207,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1291,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1172,
											"end": 1291,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1210,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1210,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1210,
											"end": 1289,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1210,
											"end": 1289,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 1210,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1172,
											"end": 1291,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1172,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1331,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1411,
											"end": 1418,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1408,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1391,
											"end": 1400,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1387,
											"end": 1409,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1355,
											"end": 1419,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1355,
											"end": 1419,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1355,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1345,
											"end": 1419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1345,
											"end": 1419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1436,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1436,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1442,
											"end": 1916,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 1442,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1516,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1524,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1567,
											"end": 1569,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1564,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1553,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1570,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1654,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1535,
											"end": 1654,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1573,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1573,
											"end": 1652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 1573,
											"end": 1652,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1573,
											"end": 1652,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1573,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1654,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 1535,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1694,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1718,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1763,
											"end": 1770,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1743,
											"end": 1752,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1739,
											"end": 1761,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1718,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1718,
											"end": 1771,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1718,
											"end": 1771,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1718,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1708,
											"end": 1771,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1708,
											"end": 1771,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1664,
											"end": 1781,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1846,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1891,
											"end": 1898,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1882,
											"end": 1888,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1871,
											"end": 1880,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1867,
											"end": 1889,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1846,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1846,
											"end": 1899,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 1899,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1846,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1899,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1899,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1442,
											"end": 1916,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1442,
											"end": 1916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1442,
											"end": 1916,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1442,
											"end": 1916,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1442,
											"end": 1916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1442,
											"end": 1916,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1922,
											"end": 2687,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1922,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2022,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2032,
											"end": 2038,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2084,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2069,
											"end": 2078,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2056,
											"end": 2079,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2052,
											"end": 2085,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2169,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2049,
											"end": 2169,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2088,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2088,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2088,
											"end": 2167,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2088,
											"end": 2167,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2088,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2169,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2049,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2208,
											"end": 2209,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2278,
											"end": 2285,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2275,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2258,
											"end": 2267,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2276,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2233,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2286,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2223,
											"end": 2286,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2337,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2361,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2406,
											"end": 2413,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2386,
											"end": 2395,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2382,
											"end": 2404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2361,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2361,
											"end": 2414,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2361,
											"end": 2414,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2361,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 2414,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2351,
											"end": 2414,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2424,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2463,
											"end": 2465,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2534,
											"end": 2541,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2514,
											"end": 2523,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2510,
											"end": 2532,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2479,
											"end": 2542,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2479,
											"end": 2542,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2552,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2591,
											"end": 2593,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2617,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2662,
											"end": 2669,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2653,
											"end": 2659,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2642,
											"end": 2651,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2638,
											"end": 2660,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2617,
											"end": 2670,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2617,
											"end": 2670,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2617,
											"end": 2670,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 2617,
											"end": 2670,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2607,
											"end": 2670,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2607,
											"end": 2670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2562,
											"end": 2680,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2687,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2687,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2687,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2687,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2687,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1922,
											"end": 2687,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2693,
											"end": 2872,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 2693,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2762,
											"end": 2772,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2783,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2825,
											"end": 2828,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2817,
											"end": 2823,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 2783,
											"end": 2829,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2783,
											"end": 2829,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2783,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2865,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2856,
											"end": 2859,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2852,
											"end": 2866,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2838,
											"end": 2866,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2838,
											"end": 2866,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2872,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2872,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2872,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2693,
											"end": 2872,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2878,
											"end": 2996,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2878,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2983,
											"end": 2988,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2965,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2965,
											"end": 2989,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2965,
											"end": 2989,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2965,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2960,
											"end": 2963,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2953,
											"end": 2990,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2878,
											"end": 2996,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3032,
											"end": 3764,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3032,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3154,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3228,
											"end": 3233,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3180,
											"end": 3234,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3180,
											"end": 3234,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3180,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3329,
											"end": 3335,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3324,
											"end": 3327,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3250,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3250,
											"end": 3336,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3250,
											"end": 3336,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3250,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3243,
											"end": 3336,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3243,
											"end": 3336,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3410,
											"end": 3415,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3360,
											"end": 3416,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3360,
											"end": 3416,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3360,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3446,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3470,
											"end": 3471,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3455,
											"end": 3739,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3455,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3480,
											"end": 3486,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3477,
											"end": 3478,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3474,
											"end": 3487,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3739,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3455,
											"end": 3739,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3556,
											"end": 3562,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3563,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3642,
											"end": 3645,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3640,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3583,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3583,
											"end": 3646,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3583,
											"end": 3646,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3583,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3646,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 3576,
											"end": 3646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3722,
											"end": 3728,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3669,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3669,
											"end": 3729,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3669,
											"end": 3729,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3669,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3729,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3659,
											"end": 3729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3515,
											"end": 3739,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3502,
											"end": 3503,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3499,
											"end": 3500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3495,
											"end": 3504,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3490,
											"end": 3504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3490,
											"end": 3504,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3455,
											"end": 3739,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3739,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3455,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3473,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3755,
											"end": 3758,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 3758,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 3758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3156,
											"end": 3764,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3156,
											"end": 3764,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3156,
											"end": 3764,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3032,
											"end": 3764,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3032,
											"end": 3764,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3032,
											"end": 3764,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3032,
											"end": 3764,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3032,
											"end": 3764,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3770,
											"end": 3888,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 3770,
											"end": 3888,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3875,
											"end": 3880,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3857,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3852,
											"end": 3855,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3845,
											"end": 3882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3770,
											"end": 3888,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3770,
											"end": 3888,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3770,
											"end": 3888,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3894,
											"end": 4009,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3894,
											"end": 4009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3996,
											"end": 4001,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 3979,
											"end": 4002,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3979,
											"end": 4002,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3979,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 3977,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3967,
											"end": 4003,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3894,
											"end": 4009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3894,
											"end": 4009,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3894,
											"end": 4009,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4015,
											"end": 4174,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 4015,
											"end": 4174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4116,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4161,
											"end": 4166,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4116,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4116,
											"end": 4167,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4116,
											"end": 4167,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 4116,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4111,
											"end": 4114,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4168,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4015,
											"end": 4174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4015,
											"end": 4174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4015,
											"end": 4174,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4180,
											"end": 4327,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4180,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4314,
											"end": 4319,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4275,
											"end": 4320,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4275,
											"end": 4320,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4275,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4273,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4263,
											"end": 4321,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4327,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4327,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4327,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4333,
											"end": 4699,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4333,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4475,
											"end": 4478,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4496,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4560,
											"end": 4562,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 4555,
											"end": 4558,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4496,
											"end": 4563,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 4496,
											"end": 4563,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4496,
											"end": 4563,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4496,
											"end": 4563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4489,
											"end": 4563,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4489,
											"end": 4563,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4572,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4661,
											"end": 4664,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4572,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4572,
											"end": 4665,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4572,
											"end": 4665,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 4572,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4690,
											"end": 4692,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4685,
											"end": 4688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4681,
											"end": 4693,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4674,
											"end": 4693,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4674,
											"end": 4693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4333,
											"end": 4699,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4333,
											"end": 4699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4333,
											"end": 4699,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4333,
											"end": 4699,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4705,
											"end": 4813,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4705,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4800,
											"end": 4805,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4782,
											"end": 4806,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4782,
											"end": 4806,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 4782,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4777,
											"end": 4780,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4807,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4813,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4813,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4819,
											"end": 4937,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 4819,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4906,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4924,
											"end": 4929,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4906,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 4906,
											"end": 4930,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4906,
											"end": 4930,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 4906,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4901,
											"end": 4904,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4894,
											"end": 4931,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4819,
											"end": 4937,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4819,
											"end": 4937,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4819,
											"end": 4937,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4943,
											"end": 5165,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 4943,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5036,
											"end": 5040,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5074,
											"end": 5076,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5063,
											"end": 5072,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5059,
											"end": 5077,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5051,
											"end": 5077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5051,
											"end": 5077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 5155,
											"end": 5156,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5144,
											"end": 5153,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5140,
											"end": 5157,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5131,
											"end": 5137,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 5087,
											"end": 5158,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5087,
											"end": 5158,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 5087,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 5165,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 5165,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 5165,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 5165,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4943,
											"end": 5165,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5171,
											"end": 5629,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 5171,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5328,
											"end": 5332,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5368,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5355,
											"end": 5364,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5351,
											"end": 5369,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5343,
											"end": 5369,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5343,
											"end": 5369,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5379,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 5447,
											"end": 5448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5436,
											"end": 5445,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5449,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5423,
											"end": 5429,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5379,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 5379,
											"end": 5450,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5379,
											"end": 5450,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 5379,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 5528,
											"end": 5530,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5517,
											"end": 5526,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5513,
											"end": 5531,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5504,
											"end": 5510,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5460,
											"end": 5532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5460,
											"end": 5532,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5460,
											"end": 5532,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 5460,
											"end": 5532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 5618,
											"end": 5620,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5607,
											"end": 5616,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5603,
											"end": 5621,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5594,
											"end": 5600,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 5542,
											"end": 5622,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5542,
											"end": 5622,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 5542,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5171,
											"end": 5629,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5171,
											"end": 5629,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5171,
											"end": 5629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5171,
											"end": 5629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5171,
											"end": 5629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5171,
											"end": 5629,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5171,
											"end": 5629,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5635,
											"end": 5967,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 5635,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5756,
											"end": 5760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5794,
											"end": 5796,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5783,
											"end": 5792,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5779,
											"end": 5797,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5771,
											"end": 5797,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5807,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 5875,
											"end": 5876,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5864,
											"end": 5873,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5860,
											"end": 5877,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5851,
											"end": 5857,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5807,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 5807,
											"end": 5878,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5807,
											"end": 5878,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 5807,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5888,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 5956,
											"end": 5958,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5945,
											"end": 5954,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5932,
											"end": 5938,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5888,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 5888,
											"end": 5960,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5888,
											"end": 5960,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 5888,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5635,
											"end": 5967,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5635,
											"end": 5967,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5635,
											"end": 5967,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5635,
											"end": 5967,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5635,
											"end": 5967,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5635,
											"end": 5967,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5973,
											"end": 6191,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 5973,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6064,
											"end": 6068,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6102,
											"end": 6104,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6091,
											"end": 6100,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6087,
											"end": 6105,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6105,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6079,
											"end": 6105,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 6181,
											"end": 6182,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6170,
											"end": 6179,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6166,
											"end": 6183,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6157,
											"end": 6163,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 6115,
											"end": 6184,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6115,
											"end": 6184,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 6115,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5973,
											"end": 6191,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5973,
											"end": 6191,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5973,
											"end": 6191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5973,
											"end": 6191,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5973,
											"end": 6191,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6197,
											"end": 7040,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6197,
											"end": 7040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6466,
											"end": 6470,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6504,
											"end": 6507,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 6493,
											"end": 6502,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6489,
											"end": 6508,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6481,
											"end": 6508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6481,
											"end": 6508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 6600,
											"end": 6601,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6589,
											"end": 6598,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6585,
											"end": 6602,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6576,
											"end": 6582,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 6518,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 6518,
											"end": 6603,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6518,
											"end": 6603,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 6518,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6613,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 6681,
											"end": 6683,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6670,
											"end": 6679,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6666,
											"end": 6684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6657,
											"end": 6663,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6613,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 6613,
											"end": 6685,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6613,
											"end": 6685,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 6613,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6695,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 6763,
											"end": 6765,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6752,
											"end": 6761,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6748,
											"end": 6766,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6739,
											"end": 6745,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6695,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 6695,
											"end": 6767,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6695,
											"end": 6767,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 6695,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6814,
											"end": 6823,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6804,
											"end": 6824,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6799,
											"end": 6801,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6788,
											"end": 6797,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6784,
											"end": 6802,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6825,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6842,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 6945,
											"end": 6949,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6936,
											"end": 6942,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6842,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 6842,
											"end": 6950,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6842,
											"end": 6950,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 6842,
											"end": 6950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6950,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6950,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6960,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 7028,
											"end": 7031,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7017,
											"end": 7026,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7013,
											"end": 7032,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7004,
											"end": 7010,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6960,
											"end": 7033,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 6960,
											"end": 7033,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6960,
											"end": 7033,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 6960,
											"end": 7033,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 7040,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 7040,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 7040,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 7040,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 7040,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 7040,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 7040,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 7040,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 7040,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7046,
											"end": 7465,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 7046,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7212,
											"end": 7216,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7250,
											"end": 7252,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7239,
											"end": 7248,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7235,
											"end": 7253,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7227,
											"end": 7253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7227,
											"end": 7253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7299,
											"end": 7308,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7293,
											"end": 7297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7289,
											"end": 7309,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7285,
											"end": 7286,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7274,
											"end": 7283,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7270,
											"end": 7287,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7263,
											"end": 7310,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7327,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 7453,
											"end": 7457,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7327,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 7327,
											"end": 7458,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7327,
											"end": 7458,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 7327,
											"end": 7458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7319,
											"end": 7458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7319,
											"end": 7458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7465,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7046,
											"end": 7465,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7471,
											"end": 7693,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 7471,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7564,
											"end": 7568,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7602,
											"end": 7604,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7591,
											"end": 7600,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7587,
											"end": 7605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7579,
											"end": 7605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7615,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 7683,
											"end": 7684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7672,
											"end": 7681,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7668,
											"end": 7685,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7659,
											"end": 7665,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7615,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 7615,
											"end": 7686,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7615,
											"end": 7686,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 7615,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7471,
											"end": 7693,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7471,
											"end": 7693,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7471,
											"end": 7693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7471,
											"end": 7693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7471,
											"end": 7693,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7780,
											"end": 7912,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 7780,
											"end": 7912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7847,
											"end": 7851,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7870,
											"end": 7873,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7862,
											"end": 7873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7862,
											"end": 7873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7900,
											"end": 7904,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7895,
											"end": 7898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7891,
											"end": 7905,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7883,
											"end": 7905,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7883,
											"end": 7905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7780,
											"end": 7912,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7780,
											"end": 7912,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7780,
											"end": 7912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7780,
											"end": 7912,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7918,
											"end": 8032,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 7918,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7985,
											"end": 7991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8019,
											"end": 8024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8013,
											"end": 8025,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8003,
											"end": 8025,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8003,
											"end": 8025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7918,
											"end": 8032,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7918,
											"end": 8032,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7918,
											"end": 8032,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7918,
											"end": 8032,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8038,
											"end": 8151,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 8038,
											"end": 8151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8108,
											"end": 8112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8140,
											"end": 8144,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8135,
											"end": 8138,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8131,
											"end": 8145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8123,
											"end": 8145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8123,
											"end": 8145,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8038,
											"end": 8151,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8038,
											"end": 8151,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8038,
											"end": 8151,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8038,
											"end": 8151,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8157,
											"end": 8341,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 8157,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8256,
											"end": 8267,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8290,
											"end": 8296,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8285,
											"end": 8288,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8278,
											"end": 8297,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8330,
											"end": 8334,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8325,
											"end": 8328,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8321,
											"end": 8335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8335,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8157,
											"end": 8341,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8157,
											"end": 8341,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8157,
											"end": 8341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8157,
											"end": 8341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8157,
											"end": 8341,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8431,
											"end": 8442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8465,
											"end": 8471,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8460,
											"end": 8463,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8453,
											"end": 8472,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8505,
											"end": 8509,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8500,
											"end": 8503,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8496,
											"end": 8510,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8481,
											"end": 8510,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8481,
											"end": 8510,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8347,
											"end": 8516,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8522,
											"end": 8618,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 8522,
											"end": 8618,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8559,
											"end": 8566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8588,
											"end": 8612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 8606,
											"end": 8611,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8588,
											"end": 8612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 8588,
											"end": 8612,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8588,
											"end": 8612,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 8588,
											"end": 8612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8577,
											"end": 8612,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8577,
											"end": 8612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8522,
											"end": 8618,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8522,
											"end": 8618,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8522,
											"end": 8618,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8522,
											"end": 8618,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8624,
											"end": 8714,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 8624,
											"end": 8714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8658,
											"end": 8665,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8701,
											"end": 8706,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8694,
											"end": 8707,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8687,
											"end": 8708,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8676,
											"end": 8708,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8676,
											"end": 8708,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8624,
											"end": 8714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8624,
											"end": 8714,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8624,
											"end": 8714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8624,
											"end": 8714,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8720,
											"end": 8797,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 8720,
											"end": 8797,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8757,
											"end": 8764,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8786,
											"end": 8791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8775,
											"end": 8791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8775,
											"end": 8791,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8720,
											"end": 8797,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8720,
											"end": 8797,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8720,
											"end": 8797,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8720,
											"end": 8797,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8803,
											"end": 8952,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 8803,
											"end": 8952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8839,
											"end": 8846,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8879,
											"end": 8945,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8872,
											"end": 8877,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8868,
											"end": 8946,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8857,
											"end": 8946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8857,
											"end": 8946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8952,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8803,
											"end": 8952,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8958,
											"end": 9084,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 8958,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8995,
											"end": 9002,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9077,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9028,
											"end": 9033,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9024,
											"end": 9078,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9013,
											"end": 9078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9013,
											"end": 9078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 9084,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 9084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 9084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8958,
											"end": 9084,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9090,
											"end": 9167,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 9090,
											"end": 9167,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9156,
											"end": 9161,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9145,
											"end": 9161,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9145,
											"end": 9161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9090,
											"end": 9167,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9090,
											"end": 9167,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9090,
											"end": 9167,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9090,
											"end": 9167,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9173,
											"end": 9313,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 9173,
											"end": 9313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9237,
											"end": 9246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9270,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 9301,
											"end": 9306,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9270,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 9270,
											"end": 9307,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9270,
											"end": 9307,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 9270,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9257,
											"end": 9307,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9257,
											"end": 9307,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9173,
											"end": 9313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9173,
											"end": 9313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9173,
											"end": 9313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9173,
											"end": 9313,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9319,
											"end": 9440,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 9319,
											"end": 9440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9377,
											"end": 9386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 9428,
											"end": 9433,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 9410,
											"end": 9434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9397,
											"end": 9434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9397,
											"end": 9434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9440,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9440,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9440,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9319,
											"end": 9440,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9446,
											"end": 9572,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 9446,
											"end": 9572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9496,
											"end": 9505,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9529,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 9560,
											"end": 9565,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9529,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 9529,
											"end": 9566,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9529,
											"end": 9566,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 9529,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9516,
											"end": 9566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9516,
											"end": 9566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9446,
											"end": 9572,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9446,
											"end": 9572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9446,
											"end": 9572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9446,
											"end": 9572,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9578,
											"end": 9691,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 9578,
											"end": 9691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9628,
											"end": 9637,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9661,
											"end": 9685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 9679,
											"end": 9684,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9661,
											"end": 9685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 9661,
											"end": 9685,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9661,
											"end": 9685,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 9661,
											"end": 9685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9648,
											"end": 9685,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9648,
											"end": 9685,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9578,
											"end": 9691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9578,
											"end": 9691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9578,
											"end": 9691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9578,
											"end": 9691,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9697,
											"end": 9877,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 9697,
											"end": 9877,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9745,
											"end": 9822,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9742,
											"end": 9743,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9735,
											"end": 9823,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9842,
											"end": 9846,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 9839,
											"end": 9840,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9832,
											"end": 9847,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9866,
											"end": 9870,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9863,
											"end": 9864,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9856,
											"end": 9871,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9883,
											"end": 10063,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 9883,
											"end": 10063,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9931,
											"end": 10008,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9928,
											"end": 9929,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9921,
											"end": 10009,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10028,
											"end": 10032,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 10025,
											"end": 10026,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10018,
											"end": 10033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10052,
											"end": 10056,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10049,
											"end": 10050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10042,
											"end": 10057,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10192,
											"end": 10309,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 10192,
											"end": 10309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10301,
											"end": 10302,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10298,
											"end": 10299,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10291,
											"end": 10303,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10315,
											"end": 10475,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 10315,
											"end": 10475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "PUSH",
											"source": 5,
											"value": "6F6E6C792061646D696E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 10451,
											"end": 10452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10443,
											"end": 10449,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10439,
											"end": 10453,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10432,
											"end": 10468,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10315,
											"end": 10475,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10315,
											"end": 10475,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10481,
											"end": 10603,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 10481,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10554,
											"end": 10578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 10572,
											"end": 10577,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10554,
											"end": 10578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 10554,
											"end": 10578,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10554,
											"end": 10578,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 10554,
											"end": 10578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10547,
											"end": 10552,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10544,
											"end": 10579,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10534,
											"end": 10597,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 10534,
											"end": 10597,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10593,
											"end": 10594,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10590,
											"end": 10591,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10583,
											"end": 10595,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10534,
											"end": 10597,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 10534,
											"end": 10597,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10603,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10481,
											"end": 10603,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10609,
											"end": 10725,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 10609,
											"end": 10725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10679,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 10694,
											"end": 10699,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10679,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 10679,
											"end": 10700,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10679,
											"end": 10700,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 10679,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10672,
											"end": 10677,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10669,
											"end": 10701,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10659,
											"end": 10719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 10659,
											"end": 10719,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10715,
											"end": 10716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10712,
											"end": 10713,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10705,
											"end": 10717,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10659,
											"end": 10719,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 10659,
											"end": 10719,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10609,
											"end": 10725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10609,
											"end": 10725,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10731,
											"end": 10853,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 10731,
											"end": 10853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10804,
											"end": 10828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 10822,
											"end": 10827,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10804,
											"end": 10828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 10804,
											"end": 10828,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10804,
											"end": 10828,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 10804,
											"end": 10828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10797,
											"end": 10802,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10794,
											"end": 10829,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10784,
											"end": 10847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 10784,
											"end": 10847,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10843,
											"end": 10844,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10840,
											"end": 10841,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10833,
											"end": 10845,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10784,
											"end": 10847,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 10784,
											"end": 10847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10731,
											"end": 10853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10731,
											"end": 10853,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10859,
											"end": 10981,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 10859,
											"end": 10981,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10932,
											"end": 10956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 10950,
											"end": 10955,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10932,
											"end": 10956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 10932,
											"end": 10956,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10932,
											"end": 10956,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 10932,
											"end": 10956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10925,
											"end": 10930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10922,
											"end": 10957,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10912,
											"end": 10975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 10912,
											"end": 10975,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10971,
											"end": 10972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10968,
											"end": 10969,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10961,
											"end": 10973,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10912,
											"end": 10975,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 10912,
											"end": 10975,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10859,
											"end": 10981,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10859,
											"end": 10981,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"createBet(bytes32,uint256)": "ef77620b",
							"onERC1155BatchReceived()": "3dae9a2b",
							"onERC1155Received()": "a38d190d",
							"oracle()": "7dc0d1d0",
							"tokenBalance(bytes32,uint256)": "ed0f7940",
							"transferTokens(bytes32,uint256,address,uint256)": "ff8ccaae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dai\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_conditionalTokens\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"createBet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"indexSet\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Betting.sol\":\"Betting\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Betting.sol\":{\"keccak256\":\"0x9bea1cc4ae6d6c585fceaaf75e9b6d4859a40e4cdb5190de76e0f66d95cdb208\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d21670e010f99b392ade06cbd9f8b05d4d55d4aad8c223f8d021d33473f9d28\",\"dweb:/ipfs/QmXxDGEpFbANCKX22bvWMG2EPc2T8dC4zHE7YuN3gG5CEy\"]},\"contracts/IConditionalTokens.sol\":{\"keccak256\":\"0xaf7e7f73dde88da561032287ca969b63b7b48e2b125c1e308187c7723862381f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc1f39bf03c5259df9b6dd81be4c23eb9299a0c724e07ece0c7be1eeeef5afe2\",\"dweb:/ipfs/QmY4yManudynzUMB79M8A32KJSJvtZit5392kVaPeb6EZF\"]},\"contracts/IERC1155.sol\":{\"keccak256\":\"0x3745e88ed4f1ceecfe9034abeb99774f0034140257312ddc8f32ee343316ae2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec75cccc1785b1524b0f49bb972de8c209e43fa6ceffd715c53cc280a46a81b3\",\"dweb:/ipfs/QmXKRs1jwjGWE91rdZktTYbBV38cAuSsPzkwrrAEAqUecj\"]},\"contracts/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Betting.sol:Betting",
								"label": "dai",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)541"
							},
							{
								"astId": 10,
								"contract": "contracts/Betting.sol:Betting",
								"label": "conditionalTokens",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IConditionalTokens)291"
							},
							{
								"astId": 12,
								"contract": "contracts/Betting.sol:Betting",
								"label": "oracle",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 18,
								"contract": "contracts/Betting.sol:Betting",
								"label": "tokenBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 20,
								"contract": "contracts/Betting.sol:Betting",
								"label": "admin",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IConditionalTokens)291": {
								"encoding": "inplace",
								"label": "contract IConditionalTokens",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)541": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IConditionalTokens.sol": {
				"IConditionalTokens": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "parentCollectionId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "conditionId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "indexSet",
									"type": "uint256"
								}
							],
							"name": "getCollectionId",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "questionId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "getOutcomeSlotCount",
									"type": "uint256"
								}
							],
							"name": "getConditionId",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "conditionId",
									"type": "bytes32"
								}
							],
							"name": "getOutcomeSlotCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "collateralToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "collectionId",
									"type": "bytes32"
								}
							],
							"name": "getPositionId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "collateralToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "parentCollectionId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "conditionId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "partition",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mergePositions",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "questionId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "outcome",
									"type": "uint256"
								}
							],
							"name": "prepareCondition",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "collateralToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "parentCollectionId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "conditionId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "indexSets",
									"type": "uint256[]"
								}
							],
							"name": "redeemPositions",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "questionId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "payouts",
									"type": "uint256[]"
								}
							],
							"name": "reportPayouts",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "collateralToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "parentCollectionId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "conditionId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "partition",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "splitPostion",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getCollectionId(bytes32,bytes32,uint256)": "856296f7",
							"getConditionId(address,bytes32,uint256)": "852c6ae2",
							"getOutcomeSlotCount(bytes32)": "d42dc0c2",
							"getPositionId(address,bytes32)": "39dd7530",
							"mergePositions(address,bytes32,bytes32,uint256[],uint256)": "9e7212ad",
							"prepareCondition(address,bytes32,uint256)": "d96ee754",
							"redeemPositions(address,bytes32,bytes32,uint256[])": "01b7037c",
							"reportPayouts(bytes32,uint256[])": "c49298ac",
							"splitPostion(address,bytes32,bytes32,uint256[],uint256)": "6fb4be62",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentCollectionId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"conditionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"indexSet\",\"type\":\"uint256\"}],\"name\":\"getCollectionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"questionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"getOutcomeSlotCount\",\"type\":\"uint256\"}],\"name\":\"getConditionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"conditionId\",\"type\":\"bytes32\"}],\"name\":\"getOutcomeSlotCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"collectionId\",\"type\":\"bytes32\"}],\"name\":\"getPositionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"parentCollectionId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"conditionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"partition\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mergePositions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"questionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"outcome\",\"type\":\"uint256\"}],\"name\":\"prepareCondition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"parentCollectionId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"conditionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"indexSets\",\"type\":\"uint256[]\"}],\"name\":\"redeemPositions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"payouts\",\"type\":\"uint256[]\"}],\"name\":\"reportPayouts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"parentCollectionId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"conditionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"partition\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"splitPostion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IConditionalTokens.sol\":\"IConditionalTokens\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IConditionalTokens.sol\":{\"keccak256\":\"0xaf7e7f73dde88da561032287ca969b63b7b48e2b125c1e308187c7723862381f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc1f39bf03c5259df9b6dd81be4c23eb9299a0c724e07ece0c7be1eeeef5afe2\",\"dweb:/ipfs/QmY4yManudynzUMB79M8A32KJSJvtZit5392kVaPeb6EZF\"]},\"contracts/IERC1155.sol\":{\"keccak256\":\"0x3745e88ed4f1ceecfe9034abeb99774f0034140257312ddc8f32ee343316ae2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec75cccc1785b1524b0f49bb972de8c209e43fa6ceffd715c53cc280a46a81b3\",\"dweb:/ipfs/QmXKRs1jwjGWE91rdZktTYbBV38cAuSsPzkwrrAEAqUecj\"]},\"contracts/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC1155.sol\":{\"keccak256\":\"0x3745e88ed4f1ceecfe9034abeb99774f0034140257312ddc8f32ee343316ae2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec75cccc1785b1524b0f49bb972de8c209e43fa6ceffd715c53cc280a46a81b3\",\"dweb:/ipfs/QmXKRs1jwjGWE91rdZktTYbBV38cAuSsPzkwrrAEAqUecj\"]},\"contracts/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC1155.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC1155.sol\":{\"keccak256\":\"0x3745e88ed4f1ceecfe9034abeb99774f0034140257312ddc8f32ee343316ae2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec75cccc1785b1524b0f49bb972de8c209e43fa6ceffd715c53cc280a46a81b3\",\"dweb:/ipfs/QmXKRs1jwjGWE91rdZktTYbBV38cAuSsPzkwrrAEAqUecj\"]},\"contracts/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/Betting.sol:65:9:\n   |\n65 |         bytes32 questionId,\n   |         ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1657,
					"file": "contracts/Betting.sol",
					"start": 1639
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/Betting.sol:66:9:\n   |\n66 |         uint indexSet,\n   |         ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1680,
					"file": "contracts/Betting.sol",
					"start": 1667
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/Betting.sol:67:9:\n   |\n67 |         address to,\n   |         ^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1700,
					"file": "contracts/Betting.sol",
					"start": 1690
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/Betting.sol:68:9:\n   |\n68 |         uint amount\n   |         ^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1721,
					"file": "contracts/Betting.sol",
					"start": 1710
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> contracts/Betting.sol:64:5:\n   |\n64 |     function transferTokens(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 1796,
					"file": "contracts/Betting.sol",
					"start": 1606
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Betting.sol": {
				"ast": {
					"absolutePath": "contracts/Betting.sol",
					"exportedSymbols": {
						"Betting": [
							185
						],
						"IConditionalTokens": [
							291
						],
						"IERC1155": [
							413
						],
						"IERC1155Receiver": [
							451
						],
						"IERC165": [
							463
						],
						"IERC20": [
							541
						]
					},
					"id": 186,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 186,
							"sourceUnit": 542,
							"src": "58:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 186,
							"sourceUnit": 452,
							"src": "81:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IConditionalTokens.sol",
							"file": "./IConditionalTokens.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 186,
							"sourceUnit": 292,
							"src": "106:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 185,
							"linearizedBaseContracts": [
								185
							],
							"name": "Betting",
							"nameLocation": "151:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "dai",
									"nameLocation": "172:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "165:10:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$541",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 6,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 5,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 541,
											"src": "165:6:0"
										},
										"referencedDeclaration": 541,
										"src": "165:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$541",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "conditionalTokens",
									"nameLocation": "200:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "181:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IConditionalTokens_$291",
										"typeString": "contract IConditionalTokens"
									},
									"typeName": {
										"id": 9,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 8,
											"name": "IConditionalTokens",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 291,
											"src": "181:18:0"
										},
										"referencedDeclaration": 291,
										"src": "181:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IConditionalTokens_$291",
											"typeString": "contract IConditionalTokens"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "7dc0d1d0",
									"id": 12,
									"mutability": "mutable",
									"name": "oracle",
									"nameLocation": "238:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "223:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 11,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "223:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ed0f7940",
									"id": 18,
									"mutability": "mutable",
									"name": "tokenBalance",
									"nameLocation": "299:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "250:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(bytes32 => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 17,
										"keyType": {
											"id": 13,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "258:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "250:41:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(bytes32 => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 16,
											"keyType": {
												"id": 14,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "277:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "269:21:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 15,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "285:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "325:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "317:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 19,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "317:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "438:157:0",
										"statements": [
											{
												"expression": {
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 29,
														"name": "dai",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "448:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$541",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 31,
																"name": "_dai",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "461:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 30,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "454:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$541_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "454:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$541",
															"typeString": "contract IERC20"
														}
													},
													"src": "448:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$541",
														"typeString": "contract IERC20"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "448:18:0"
											},
											{
												"expression": {
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "conditionalTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "476:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IConditionalTokens_$291",
															"typeString": "contract IConditionalTokens"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 37,
																"name": "_conditionalTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "515:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 36,
															"name": "IConditionalTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "496:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IConditionalTokens_$291_$",
																"typeString": "type(contract IConditionalTokens)"
															}
														},
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "496:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IConditionalTokens_$291",
															"typeString": "contract IConditionalTokens"
														}
													},
													"src": "476:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IConditionalTokens_$291",
														"typeString": "contract IConditionalTokens"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "476:58:0"
											},
											{
												"expression": {
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 41,
														"name": "oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "544:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 42,
														"name": "_oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "553:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "544:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 44,
												"nodeType": "ExpressionStatement",
												"src": "544:16:0"
											},
											{
												"expression": {
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 45,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "570:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 46,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "578:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "578:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "570:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "570:18:0"
											}
										]
									},
									"id": 51,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "_dai",
												"nameLocation": "366:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "358:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "_conditionalTokens",
												"nameLocation": "388:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "380:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "_oracle",
												"nameLocation": "424:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "416:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:89:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "438:0:0"
									},
									"scope": 185,
									"src": "337:258:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "662:938:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 61,
															"name": "oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "720:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 62,
															"name": "questionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "740:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "33",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "764:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															}
														],
														"expression": {
															"id": 58,
															"name": "conditionalTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "672:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IConditionalTokens_$291",
																"typeString": "contract IConditionalTokens"
															}
														},
														"id": 60,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "prepareCondition",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 200,
														"src": "672:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$returns$__$",
															"typeString": "function (address,bytes32,uint256) external"
														}
													},
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:143:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "672:143:0"
											},
											{
												"assignments": [
													67
												],
												"declarations": [
													{
														"constant": false,
														"id": 67,
														"mutability": "mutable",
														"name": "conditionId",
														"nameLocation": "834:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "826:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 66,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "826:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 74,
												"initialValue": {
													"arguments": [
														{
															"id": 70,
															"name": "oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "894:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 71,
															"name": "questionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "914:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"hexValue": "33",
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "938:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															}
														],
														"expression": {
															"id": 68,
															"name": "conditionalTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "848:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IConditionalTokens_$291",
																"typeString": "contract IConditionalTokens"
															}
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getConditionId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 269,
														"src": "848:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_pure$_t_address_$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (address,bytes32,uint256) pure external returns (bytes32)"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "848:141:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "826:163:0"
											},
											{
												"assignments": [
													79
												],
												"declarations": [
													{
														"constant": false,
														"id": 79,
														"mutability": "mutable",
														"name": "partition",
														"nameLocation": "1206:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "1192:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 77,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1192:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 78,
															"nodeType": "ArrayTypeName",
															"src": "1192:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 85,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1229:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1218:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 80,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1222:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 81,
															"nodeType": "ArrayTypeName",
															"src": "1222:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1218:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1192:39:0"
											},
											{
												"expression": {
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 86,
															"name": "partition",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "1241:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 88,
														"indexExpression": {
															"hexValue": "30",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1251:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1241:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1256:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1241:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1241:16:0"
											},
											{
												"expression": {
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 92,
															"name": "partition",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "1267:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 94,
														"indexExpression": {
															"hexValue": "31",
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1277:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1267:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "33",
														"id": 95,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1282:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1267:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "1267:16:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 103,
																	"name": "conditionalTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "1314:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IConditionalTokens_$291",
																		"typeString": "contract IConditionalTokens"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IConditionalTokens_$291",
																		"typeString": "contract IConditionalTokens"
																	}
																],
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1306:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 101,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1306:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1306:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 105,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "1334:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 98,
															"name": "dai",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1294:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$541",
																"typeString": "contract IERC20"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 528,
														"src": "1294:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1294:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1294:47:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 111,
															"name": "dai",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1395:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$541",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1420:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1412:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 112,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "1412:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 116,
															"name": "conditionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1436:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 117,
															"name": "partition",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "1461:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 118,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "1484:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$541",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 108,
															"name": "conditionalTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "1351:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IConditionalTokens_$291",
																"typeString": "contract IConditionalTokens"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "splitPostion",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "1351:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$541_$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,bytes32,bytes32,uint256[] memory,uint256) external"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1351:149:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "1351:149:0"
											},
											{
												"expression": {
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 121,
																"name": "tokenBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "1511:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(bytes32 => mapping(uint256 => uint256))"
																}
															},
															"id": 124,
															"indexExpression": {
																"id": 122,
																"name": "questionId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "1524:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1511:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 125,
														"indexExpression": {
															"hexValue": "30",
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1536:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1511:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 126,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "1541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1511:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "1511:36:0"
											},
											{
												"expression": {
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 129,
																"name": "tokenBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "1557:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(bytes32 => mapping(uint256 => uint256))"
																}
															},
															"id": 132,
															"indexExpression": {
																"id": 130,
																"name": "questionId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "1570:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1557:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 133,
														"indexExpression": {
															"hexValue": "31",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1582:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1557:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 134,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "1587:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1557:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "1557:36:0"
											}
										]
									},
									"functionSelector": "ef77620b",
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createBet",
									"nameLocation": "610:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "questionId",
												"nameLocation": "628:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "620:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 52,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "645:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "640:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "640:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "619:33:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:0"
									},
									"scope": 185,
									"src": "601:999:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "1737:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 150,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1755:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1755:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 152,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1769:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1755:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c792061646d696e",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1776:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
																"typeString": "literal_string \"only admin\""
															},
															"value": "only admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
																"typeString": "literal_string \"only admin\""
															}
														],
														"id": 149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1747:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1747:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "1747:42:0"
											}
										]
									},
									"functionSelector": "ff8ccaae",
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferTokens",
									"nameLocation": "1615:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "questionId",
												"nameLocation": "1647:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1639:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 139,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1639:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "indexSet",
												"nameLocation": "1672:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1667:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1667:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1698:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1690:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1715:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1710:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1710:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:98:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1737:0:0"
									},
									"scope": 185,
									"src": "1606:190:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "2001:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6f6e45524331313535526563656976656428616464726573732c616464726573732c75696e743235362c75696e743235362c627974657329",
																	"id": 166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2035:58:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97",
																		"typeString": "literal_string \"onERC1155Received(address,address,uint256,uint256,bytes)\""
																	},
																	"value": "onERC1155Received(address,address,uint256,uint256,bytes)"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_f23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97",
																		"typeString": "literal_string \"onERC1155Received(address,address,uint256,uint256,bytes)\""
																	}
																],
																"id": 165,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "2025:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2025:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2018:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": {
															"id": 163,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "2018:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2018:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 162,
												"id": 169,
												"nodeType": "Return",
												"src": "2011:84:0"
											}
										]
									},
									"functionSelector": "a38d190d",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1811:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1828:141:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1993:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 160,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1993:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1992:8:0"
									},
									"scope": 185,
									"src": "1802:300:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "2336:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "6f6e45524331313535526563656976656428616464726573732c616464726573732c75696e743235362c75696e743235362c627974657329",
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2370:58:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97",
																		"typeString": "literal_string \"onERC1155Received(address,address,uint256,uint256,bytes)\""
																	},
																	"value": "onERC1155Received(address,address,uint256,uint256,bytes)"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_f23a6e612e1ff4830e658fe43f4e3cb4a5f8170bd5d9e69fb5d7a7fa9e4fdf97",
																		"typeString": "literal_string \"onERC1155Received(address,address,uint256,uint256,bytes)\""
																	}
																],
																"id": 178,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "2360:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2360:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2353:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": {
															"id": 176,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "2353:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2353:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 175,
												"id": 182,
												"nodeType": "Return",
												"src": "2346:84:0"
											}
										]
									},
									"functionSelector": "3dae9a2b",
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2117:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2139:165:0"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "2328:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 173,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2328:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2327:8:0"
									},
									"scope": 185,
									"src": "2108:329:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 186,
							"src": "142:2298:0",
							"usedErrors": []
						}
					],
					"src": "33:2407:0"
				},
				"id": 0
			},
			"contracts/IConditionalTokens.sol": {
				"ast": {
					"absolutePath": "contracts/IConditionalTokens.sol",
					"exportedSymbols": {
						"IConditionalTokens": [
							291
						],
						"IERC1155": [
							413
						],
						"IERC1155Receiver": [
							451
						],
						"IERC165": [
							463
						],
						"IERC20": [
							541
						]
					},
					"id": 292,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 187,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 188,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 292,
							"sourceUnit": 542,
							"src": "58:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 189,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 292,
							"sourceUnit": 452,
							"src": "81:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 190,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 463,
										"src": "147:7:1"
									},
									"id": 191,
									"nodeType": "InheritanceSpecifier",
									"src": "147:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 291,
							"linearizedBaseContracts": [
								291,
								463
							],
							"name": "IConditionalTokens",
							"nameLocation": "125:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d96ee754",
									"id": 200,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "prepareCondition",
									"nameLocation": "170:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "195:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "187:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "187:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "questionId",
												"nameLocation": "211:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "203:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "203:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "outcome",
												"nameLocation": "228:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "223:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "223:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "186:50:1"
									},
									"returnParameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "253:0:1"
									},
									"scope": 291,
									"src": "161:93:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "c49298ac",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reportPayouts",
									"nameLocation": "269:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "questionId",
												"nameLocation": "291:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "283:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 201,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "283:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "payouts",
												"nameLocation": "319:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "303:23:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 203,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "303:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 204,
													"nodeType": "ArrayTypeName",
													"src": "303:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "282:45:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "344:0:1"
									},
									"scope": 291,
									"src": "260:85:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "6fb4be62",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "splitPostion",
									"nameLocation": "360:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "collateralToken",
												"nameLocation": "389:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "382:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$541",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 210,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 209,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 541,
														"src": "382:6:1"
													},
													"referencedDeclaration": 541,
													"src": "382:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$541",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "parentCollectionId",
												"nameLocation": "422:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "414:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 212,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "conditionId",
												"nameLocation": "458:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "450:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 214,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "partition",
												"nameLocation": "495:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "479:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 216,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "479:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 217,
													"nodeType": "ArrayTypeName",
													"src": "479:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "519:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "514:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "514:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:159:1"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "548:0:1"
									},
									"scope": 291,
									"src": "351:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "9e7212ad",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mergePositions",
									"nameLocation": "564:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "collateralToken",
												"nameLocation": "595:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "588:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$541",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 225,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 224,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 541,
														"src": "588:6:1"
													},
													"referencedDeclaration": 541,
													"src": "588:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$541",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "parentCollectionId",
												"nameLocation": "628:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "620:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "conditionId",
												"nameLocation": "664:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "656:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 229,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "partition",
												"nameLocation": "701:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "685:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 231,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "685:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 232,
													"nodeType": "ArrayTypeName",
													"src": "685:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "725:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "720:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "578:159:1"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:0:1"
									},
									"scope": 291,
									"src": "555:200:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "01b7037c",
									"id": 251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redeemPositions",
									"nameLocation": "770:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "collateralToken",
												"nameLocation": "802:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "795:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$541",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 240,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 239,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 541,
														"src": "795:6:1"
													},
													"referencedDeclaration": 541,
													"src": "795:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$541",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "parentCollectionId",
												"nameLocation": "835:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "827:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "conditionId",
												"nameLocation": "871:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "863:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 244,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "indexSets",
												"nameLocation": "908:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "892:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 246,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "892:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 247,
													"nodeType": "ArrayTypeName",
													"src": "892:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "785:138:1"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "940:0:1"
									},
									"scope": 291,
									"src": "761:180:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "d42dc0c2",
									"id": 258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOutcomeSlotCount",
									"nameLocation": "956:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "conditionId",
												"nameLocation": "993:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "985:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 252,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:35:1"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "1042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:6:1"
									},
									"scope": 291,
									"src": "947:101:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "852c6ae2",
									"id": 269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getConditionId",
									"nameLocation": "1063:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "1095:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1087:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "questionId",
												"nameLocation": "1119:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1111:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 261,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "getOutcomeSlotCount",
												"nameLocation": "1144:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1139:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:92:1"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1201:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 266,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1201:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1200:9:1"
									},
									"scope": 291,
									"src": "1054:156:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "856296f7",
									"id": 280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCollectionId",
									"nameLocation": "1225:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "parentCollectionId",
												"nameLocation": "1258:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1250:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "conditionId",
												"nameLocation": "1294:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1286:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 272,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "indexSet",
												"nameLocation": "1320:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1315:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1315:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:94:1"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "1366:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 277,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:9:1"
									},
									"scope": 291,
									"src": "1216:159:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "39dd7530",
									"id": 290,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPositionId",
									"nameLocation": "1390:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "collateralToken",
												"nameLocation": "1420:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "1413:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$541",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 282,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 281,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 541,
														"src": "1413:6:1"
													},
													"referencedDeclaration": 541,
													"src": "1413:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$541",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "collectionId",
												"nameLocation": "1453:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "1445:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 284,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1403:68:1"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "1503:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1503:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:6:1"
									},
									"scope": 291,
									"src": "1381:128:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 292,
							"src": "107:1404:1",
							"usedErrors": []
						}
					],
					"src": "33:1478:1"
				},
				"id": 1
			},
			"contracts/IERC1155.sol": {
				"ast": {
					"absolutePath": "contracts/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							413
						],
						"IERC1155Receiver": [
							451
						],
						"IERC165": [
							463
						]
					},
					"id": 452,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 293,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "contracts/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 452,
							"sourceUnit": 464,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 463,
										"src": "348:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "348:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "160:165:2",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 413,
							"linearizedBaseContracts": [
								413,
								463
							],
							"name": "IERC1155",
							"nameLocation": "336:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "362:121:2",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 310,
									"name": "TransferSingle",
									"nameLocation": "494:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "525:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "509:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "551:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "535:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "573:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "557:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "585:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "577:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "597:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "589:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "508:95:2"
									},
									"src": "488:116:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "610:144:2",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 325,
									"name": "TransferBatch",
									"nameLocation": "765:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "804:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "788:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "838:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "822:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "868:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "852:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "890:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "880:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 318,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "880:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 319,
													"nodeType": "ArrayTypeName",
													"src": "880:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "913:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "903:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 321,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "903:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 322,
													"nodeType": "ArrayTypeName",
													"src": "903:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:147:2"
									},
									"src": "759:167:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "932:147:2",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 334,
									"name": "ApprovalForAll",
									"nameLocation": "1090:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1121:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "1105:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1146:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "1130:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "1156:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 331,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1156:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1104:66:2"
									},
									"src": "1084:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "1177:343:2",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 341,
									"name": "URI",
									"nameLocation": "1531:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "1535:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 336,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1535:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1565:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "1549:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1534:34:2"
									},
									"src": "1525:44:2"
								},
								{
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "1575:173:2",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1762:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1780:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "1772:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1797:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "1789:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1771:29:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "1824:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:9:2"
									},
									"scope": 413,
									"src": "1753:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "1839:188:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2041:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2075:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2056:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 353,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2056:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 354,
													"nodeType": "ArrayTypeName",
													"src": "2056:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2104:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2085:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 356,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2085:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 357,
													"nodeType": "ArrayTypeName",
													"src": "2085:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2055:53:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2156:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 360,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2156:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 361,
													"nodeType": "ArrayTypeName",
													"src": "2156:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2155:18:2"
									},
									"scope": 413,
									"src": "2032:142:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "2180:248:2",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2442:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2468:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2460:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2483:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2478:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 368,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2478:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2459:33:2"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2501:0:2"
									},
									"scope": 413,
									"src": "2433:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2508:135:2",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2657:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2682:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2674:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2674:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2699:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2691:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2673:35:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2732:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 379,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2732:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2731:6:2"
									},
									"scope": 413,
									"src": "2648:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "2744:556:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 396,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3314:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3348:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "3340:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3370:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "3362:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3362:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3390:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "3382:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3410:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "3402:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3402:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3441:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "3426:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 392,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3426:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3330:121:2"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3460:0:2"
									},
									"scope": 413,
									"src": "3305:156:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "3467:390:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3871:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3910:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3902:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3902:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3932:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3924:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3924:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3963:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3944:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 402,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3944:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 403,
													"nodeType": "ArrayTypeName",
													"src": "3944:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3995:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3976:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 405,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3976:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 406,
													"nodeType": "ArrayTypeName",
													"src": "3976:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4027:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4012:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 408,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4012:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3892:145:2"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4046:0:2"
									},
									"scope": 413,
									"src": "3862:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 452,
							"src": "326:3723:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 415,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 463,
										"src": "4121:7:2"
									},
									"id": 416,
									"nodeType": "InheritanceSpecifier",
									"src": "4121:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 414,
								"nodeType": "StructuredDocumentation",
								"src": "4051:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 451,
							"linearizedBaseContracts": [
								451,
								463
							],
							"name": "IERC1155Receiver",
							"nameLocation": "4101:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "4135:826:2",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 432,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "4975:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5010:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "5002:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5002:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5036:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "5028:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5028:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5058:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "5050:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5078:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "5070:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5070:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5108:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "5093:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 426,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5093:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4992:126:2"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "5137:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 429,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5137:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5136:8:2"
									},
									"scope": 451,
									"src": "4966:179:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "5151:994:2",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "6159:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6199:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "6191:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6191:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6225:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "6217:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6258:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "6239:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 438,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6239:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 439,
													"nodeType": "ArrayTypeName",
													"src": "6239:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "6290:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "6271:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 441,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6271:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 442,
													"nodeType": "ArrayTypeName",
													"src": "6271:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6321:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "6306:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 444,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6181:150:2"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "6350:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 447,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6350:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6349:8:2"
									},
									"scope": 451,
									"src": "6150:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 452,
							"src": "4091:2269:2",
							"usedErrors": []
						}
					],
					"src": "110:6250:2"
				},
				"id": 2
			},
			"contracts/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							463
						]
					},
					"id": 464,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 453,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 454,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:3",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 463,
							"linearizedBaseContracts": [
								463
							],
							"name": "IERC165",
							"nameLocation": "415:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 462,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "801:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 456,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:3"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:3"
									},
									"scope": 463,
									"src": "774:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 464,
							"src": "405:447:3",
							"usedErrors": []
						}
					],
					"src": "100:752:3"
				},
				"id": 3
			},
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							541
						]
					},
					"id": 542,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 465,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 466,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 541,
							"linearizedBaseContracts": [
								541
							],
							"name": "IERC20",
							"nameLocation": "212:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 467,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 475,
									"name": "Transfer",
									"nameLocation": "394:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "403:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "425:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "445:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:4"
									},
									"src": "388:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 484,
									"name": "Approval",
									"nameLocation": "625:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "634:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "657:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "682:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:4"
									},
									"src": "619:78:4"
								},
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 541,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 498,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 541,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1211:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1223:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:4"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1257:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:4"
									},
									"scope": 541,
									"src": "1193:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1557:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1572:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:4"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1612:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:4"
									},
									"scope": 541,
									"src": "1538:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "2291:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "2308:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:4"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "2342:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:4"
									},
									"scope": 541,
									"src": "2274:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:4",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2677:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2699:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2719:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:4"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2758:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 537,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:4"
									},
									"scope": 541,
									"src": "2646:118:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 542,
							"src": "202:2564:4",
							"usedErrors": []
						}
					],
					"src": "106:2660:4"
				},
				"id": 4
			}
		}
	}
}