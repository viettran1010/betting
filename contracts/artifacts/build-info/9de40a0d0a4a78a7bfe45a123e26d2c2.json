{
	"id": "9de40a0d0a4a78a7bfe45a123e26d2c2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/ConditionalTokensWallet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport './IERC20.sol';\nimport './IERC1155.sol';\nimport './IConditionalTokens.sol';\n\ncontract ConditionalTokensWallet is IERC1155Receiver {\n    IERC20 dai;\n    IConditionalTokens conditionalTokens;\n    address public oracle;\n    mapping(bytes32 => mapping(uint => uint)) public tokenBalance;\n    address admin;\n\n    constructor(\n        address _dai,\n        address _conditionalTokens,\n        address _oracle\n    ) {\n        dai = IERC20(_dai);\n        conditionalTokens = IConditionalTokens(_conditionalTokens);\n        oracle = _oracle;\n        admin = msg.sender;\n    }\n\n    function redeemTokens(\n        bytes32 conditionId,\n        uint[] calldata indexSets\n    ) external {\n        conditionalTokens.redeemPositions(\n            dai,\n            bytes32(0),\n            conditionId,\n            indexSets\n        );\n    }\n\n    function transferDai(address to, uint amount) external {\n        require(msg.sender == admin, 'only admin');\n        dai.transfer(to, amount);\n    }\n\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external pure override returns (bytes4) {\n        return bytes4(keccak256(abi.encodePacked(\n            operator,\n            from,\n            ids,\n            values,\n            data\n        )));\n    }\n\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external pure override returns (bytes4) {\n        return bytes4(keccak256(abi.encodePacked(\n            operator,\n            from,\n            id,\n            value,\n            data\n        )));\n    }\n\n    function supportsInterface(bytes4 interfaceId) external pure override returns (bool) {\n        bytes4[2] memory supportedInterfaces = [\n            bytes4(keccak256(\"onERC1155Received()\")),\n            bytes4(keccak256(\"onERC1155BatchReceived()\"))\n        ];\n\n        for (uint i = 0; i < supportedInterfaces.length; i++) {\n            if (interfaceId == supportedInterfaces[i]) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}"
			},
			"contracts/IConditionalTokens.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport './IERC20.sol';\nimport './IERC1155.sol';\n\nabstract contract IConditionalTokens is IERC165 {\n    function prepareCondition(address oracle, bytes32 questionId, uint outcome) external virtual;\n\n    function reportPayouts(bytes32 questionId, uint[] calldata payouts) external virtual;\n\n    function splitPostion(\n        IERC20 collateralToken,\n        bytes32 parentCollectionId,\n        bytes32 conditionId,\n        uint[] calldata partition,\n        uint amount\n    ) external virtual;\n\n    function mergePositions(\n        IERC20 collateralToken,\n        bytes32 parentCollectionId,\n        bytes32 conditionId,\n        uint[] calldata partition,\n        uint amount\n    ) external virtual;\n\n    function redeemPositions(\n        IERC20 collateralToken,\n        bytes32 parentCollectionId,\n        bytes32 conditionId,\n        uint[] calldata indexSets\n    ) external virtual;\n\n    function getOutcomeSlotCount(\n        bytes32 conditionId\n    ) external virtual view returns (uint);\n\n    function getConditionId(\n        address oracle,\n        bytes32 questionId,\n        uint getOutcomeSlotCount\n    ) external virtual pure returns (bytes32);\n\n    function getCollectionId(\n        bytes32 parentCollectionId,\n        bytes32 conditionId,\n        uint indexSet\n    ) external virtual view returns (bytes32);\n\n    function getPositionId(\n        IERC20 collateralToken,\n        bytes32 collectionId\n    ) external virtual pure returns (uint);\n}"
			},
			"contracts/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}"
			},
			"contracts/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}"
			},
			"contracts/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/ConditionalTokensWallet.sol": {
				"ConditionalTokensWallet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_dai",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_conditionalTokens",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_oracle",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "oracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "conditionId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "indexSets",
									"type": "uint256[]"
								}
							],
							"name": "redeemTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferDai",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ConditionalTokensWallet.sol\":142:2264  contract ConditionalTokensWallet is IERC1155Receiver {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ConditionalTokensWallet.sol\":373:631  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/ConditionalTokensWallet.sol\":497:501  _dai */\n  dup3\n    /* \"contracts/ConditionalTokensWallet.sol\":484:487  dai */\n  0x00\n  dup1\n    /* \"contracts/ConditionalTokensWallet.sol\":484:502  dai = IERC20(_dai) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ConditionalTokensWallet.sol\":551:569  _conditionalTokens */\n  dup2\n    /* \"contracts/ConditionalTokensWallet.sol\":512:529  conditionalTokens */\n  0x01\n  0x00\n    /* \"contracts/ConditionalTokensWallet.sol\":512:570  conditionalTokens = IConditionalTokens(_conditionalTokens) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ConditionalTokensWallet.sol\":589:596  _oracle */\n  dup1\n    /* \"contracts/ConditionalTokensWallet.sol\":580:586  oracle */\n  0x02\n  0x00\n    /* \"contracts/ConditionalTokensWallet.sol\":580:596  oracle = _oracle */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ConditionalTokensWallet.sol\":614:624  msg.sender */\n  caller\n    /* \"contracts/ConditionalTokensWallet.sol\":606:611  admin */\n  0x04\n  0x00\n    /* \"contracts/ConditionalTokensWallet.sol\":606:624  admin = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/ConditionalTokensWallet.sol\":373:631  constructor(... */\n  pop\n  pop\n  pop\n    /* \"contracts/ConditionalTokensWallet.sol\":142:2264  contract ConditionalTokensWallet is IERC1155Receiver {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:819   */\ntag_3:\n    /* \"#utility.yul\":244:250   */\n  0x00\n    /* \"#utility.yul\":252:258   */\n  dup1\n    /* \"#utility.yul\":260:266   */\n  0x00\n    /* \"#utility.yul\":309:311   */\n  0x60\n    /* \"#utility.yul\":297:306   */\n  dup5\n    /* \"#utility.yul\":288:295   */\n  dup7\n    /* \"#utility.yul\":284:307   */\n  sub\n    /* \"#utility.yul\":280:312   */\n  slt\n    /* \"#utility.yul\":277:396   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":315:394   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":277:396   */\ntag_13:\n    /* \"#utility.yul\":435:436   */\n  0x00\n    /* \"#utility.yul\":460:524   */\n  tag_16\n    /* \"#utility.yul\":516:523   */\n  dup7\n    /* \"#utility.yul\":507:513   */\n  dup3\n    /* \"#utility.yul\":496:505   */\n  dup8\n    /* \"#utility.yul\":492:514   */\n  add\n    /* \"#utility.yul\":460:524   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":450:524   */\n  swap4\n  pop\n    /* \"#utility.yul\":406:534   */\n  pop\n    /* \"#utility.yul\":573:575   */\n  0x20\n    /* \"#utility.yul\":599:663   */\n  tag_17\n    /* \"#utility.yul\":655:662   */\n  dup7\n    /* \"#utility.yul\":646:652   */\n  dup3\n    /* \"#utility.yul\":635:644   */\n  dup8\n    /* \"#utility.yul\":631:653   */\n  add\n    /* \"#utility.yul\":599:663   */\n  tag_8\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":589:663   */\n  swap3\n  pop\n    /* \"#utility.yul\":544:673   */\n  pop\n    /* \"#utility.yul\":712:714   */\n  0x40\n    /* \"#utility.yul\":738:802   */\n  tag_18\n    /* \"#utility.yul\":794:801   */\n  dup7\n    /* \"#utility.yul\":785:791   */\n  dup3\n    /* \"#utility.yul\":774:783   */\n  dup8\n    /* \"#utility.yul\":770:792   */\n  add\n    /* \"#utility.yul\":738:802   */\n  tag_8\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":728:802   */\n  swap2\n  pop\n    /* \"#utility.yul\":683:812   */\n  pop\n    /* \"#utility.yul\":156:819   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":906:1002   */\ntag_21:\n    /* \"#utility.yul\":943:950   */\n  0x00\n    /* \"#utility.yul\":972:996   */\n  tag_23\n    /* \"#utility.yul\":990:995   */\n  dup3\n    /* \"#utility.yul\":972:996   */\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":961:996   */\n  swap1\n  pop\n    /* \"#utility.yul\":906:1002   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1008:1134   */\ntag_24:\n    /* \"#utility.yul\":1045:1052   */\n  0x00\n    /* \"#utility.yul\":1085:1127   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1078:1083   */\n  dup3\n    /* \"#utility.yul\":1074:1128   */\n  and\n    /* \"#utility.yul\":1063:1128   */\n  swap1\n  pop\n    /* \"#utility.yul\":1008:1134   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1263:1380   */\ntag_15:\n    /* \"#utility.yul\":1372:1373   */\n  0x00\n    /* \"#utility.yul\":1369:1370   */\n  dup1\n    /* \"#utility.yul\":1362:1374   */\n  revert\n    /* \"#utility.yul\":1386:1508   */\ntag_11:\n    /* \"#utility.yul\":1459:1483   */\n  tag_30\n    /* \"#utility.yul\":1477:1482   */\n  dup2\n    /* \"#utility.yul\":1459:1483   */\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1452:1457   */\n  dup2\n    /* \"#utility.yul\":1449:1484   */\n  eq\n    /* \"#utility.yul\":1439:1502   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":1498:1499   */\n  0x00\n    /* \"#utility.yul\":1495:1496   */\n  dup1\n    /* \"#utility.yul\":1488:1500   */\n  revert\n    /* \"#utility.yul\":1439:1502   */\ntag_31:\n    /* \"#utility.yul\":1386:1508   */\n  pop\n  jump\t// out\n    /* \"contracts/ConditionalTokensWallet.sol\":142:2264  contract ConditionalTokensWallet is IERC1155Receiver {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ConditionalTokensWallet.sol\":142:2264  contract ConditionalTokensWallet is IERC1155Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbc197c81\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xed0f7940\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf48b39dd\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x614f0869\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7dc0d1d0\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/ConditionalTokensWallet.sol\":1800:2262  function supportsInterface(bytes4 interfaceId) external pure override returns (bool) {... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ConditionalTokensWallet.sol\":637:887  function redeemTokens(... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/ConditionalTokensWallet.sol\":259:280  address public oracle */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ConditionalTokensWallet.sol\":1047:1433  function onERC1155BatchReceived(... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ConditionalTokensWallet.sol\":286:347  mapping(bytes32 => mapping(uint => uint)) public tokenBalance */\n    tag_7:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ConditionalTokensWallet.sol\":1439:1794  function onERC1155Received(... */\n    tag_8:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/ConditionalTokensWallet.sol\":893:1041  function transferDai(address to, uint amount) external {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contracts/ConditionalTokensWallet.sol\":1800:2262  function supportsInterface(bytes4 interfaceId) external pure override returns (bool) {... */\n    tag_14:\n        /* \"contracts/ConditionalTokensWallet.sol\":1879:1883  bool */\n      0x00\n        /* \"contracts/ConditionalTokensWallet.sol\":1895:1931  bytes4[2] memory supportedInterfaces */\n      dup1\n        /* \"contracts/ConditionalTokensWallet.sol\":1895:2057  bytes4[2] memory supportedInterfaces = [... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/ConditionalTokensWallet.sol\":1955:1987  keccak256(\"onERC1155Received()\") */\n      0xa38d190d714a56ff654d9f781d45dd8c6a178a7fa8ccd7800fdf6083324eee9c\n        /* \"contracts/ConditionalTokensWallet.sol\":1895:2057  bytes4[2] memory supportedInterfaces = [... */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/ConditionalTokensWallet.sol\":2009:2046  keccak256(\"onERC1155BatchReceived()\") */\n      0x3dae9a2b9bb26e63369b9a9e31c9ecbd73ac8f4903cbdea29db3655a87331e2b\n        /* \"contracts/ConditionalTokensWallet.sol\":1895:2057  bytes4[2] memory supportedInterfaces = [... */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/ConditionalTokensWallet.sol\":2073:2079  uint i */\n      0x00\n        /* \"contracts/ConditionalTokensWallet.sol\":2068:2233  for (uint i = 0; i < supportedInterfaces.length; i++) {... */\n    tag_47:\n        /* \"contracts/ConditionalTokensWallet.sol\":2089:2115  supportedInterfaces.length */\n      0x02\n        /* \"contracts/ConditionalTokensWallet.sol\":2085:2086  i */\n      dup2\n        /* \"contracts/ConditionalTokensWallet.sol\":2085:2115  i < supportedInterfaces.length */\n      lt\n        /* \"contracts/ConditionalTokensWallet.sol\":2068:2233  for (uint i = 0; i < supportedInterfaces.length; i++) {... */\n      iszero\n      tag_48\n      jumpi\n        /* \"contracts/ConditionalTokensWallet.sol\":2155:2174  supportedInterfaces */\n      dup2\n        /* \"contracts/ConditionalTokensWallet.sol\":2175:2176  i */\n      dup2\n        /* \"contracts/ConditionalTokensWallet.sol\":2155:2177  supportedInterfaces[i] */\n      0x02\n      dup2\n      lt\n      tag_50\n      jumpi\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n    tag_50:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/ConditionalTokensWallet.sol\":2140:2177  interfaceId == supportedInterfaces[i] */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/ConditionalTokensWallet.sol\":2140:2151  interfaceId */\n      dup5\n        /* \"contracts/ConditionalTokensWallet.sol\":2140:2177  interfaceId == supportedInterfaces[i] */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/ConditionalTokensWallet.sol\":2136:2223  if (interfaceId == supportedInterfaces[i]) {... */\n      iszero\n      tag_53\n      jumpi\n        /* \"contracts/ConditionalTokensWallet.sol\":2204:2208  true */\n      0x01\n        /* \"contracts/ConditionalTokensWallet.sol\":2197:2208  return true */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_46)\n        /* \"contracts/ConditionalTokensWallet.sol\":2136:2223  if (interfaceId == supportedInterfaces[i]) {... */\n    tag_53:\n        /* \"contracts/ConditionalTokensWallet.sol\":2117:2120  i++ */\n      dup1\n      dup1\n      tag_54\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      swap2\n      pop\n      pop\n        /* \"contracts/ConditionalTokensWallet.sol\":2068:2233  for (uint i = 0; i < supportedInterfaces.length; i++) {... */\n      jump(tag_47)\n    tag_48:\n      pop\n        /* \"contracts/ConditionalTokensWallet.sol\":2250:2255  false */\n      0x00\n        /* \"contracts/ConditionalTokensWallet.sol\":2243:2255  return false */\n      swap2\n      pop\n      pop\n        /* \"contracts/ConditionalTokensWallet.sol\":1800:2262  function supportsInterface(bytes4 interfaceId) external pure override returns (bool) {... */\n    tag_46:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/ConditionalTokensWallet.sol\":637:887  function redeemTokens(... */\n    tag_20:\n        /* \"contracts/ConditionalTokensWallet.sol\":748:765  conditionalTokens */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ConditionalTokensWallet.sol\":748:781  conditionalTokens.redeemPositions */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x01b7037c\n        /* \"contracts/ConditionalTokensWallet.sol\":795:798  dai */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ConditionalTokensWallet.sol\":820:821  0 */\n      0x00\n        /* \"contracts/ConditionalTokensWallet.sol\":812:822  bytes32(0) */\n      dup1\n      shl\n        /* \"contracts/ConditionalTokensWallet.sol\":836:847  conditionId */\n      dup7\n        /* \"contracts/ConditionalTokensWallet.sol\":861:870  indexSets */\n      dup7\n      dup7\n        /* \"contracts/ConditionalTokensWallet.sol\":748:880  conditionalTokens.redeemPositions(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/ConditionalTokensWallet.sol\":637:887  function redeemTokens(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ConditionalTokensWallet.sol\":259:280  address public oracle */\n    tag_22:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/ConditionalTokensWallet.sol\":1047:1433  function onERC1155BatchReceived(... */\n    tag_28:\n        /* \"contracts/ConditionalTokensWallet.sol\":1261:1267  bytes4 */\n      0x00\n        /* \"contracts/ConditionalTokensWallet.sol\":1333:1341  operator */\n      dup9\n        /* \"contracts/ConditionalTokensWallet.sol\":1355:1359  from */\n      dup9\n        /* \"contracts/ConditionalTokensWallet.sol\":1373:1376  ids */\n      dup9\n      dup9\n        /* \"contracts/ConditionalTokensWallet.sol\":1390:1396  values */\n      dup9\n      dup9\n        /* \"contracts/ConditionalTokensWallet.sol\":1410:1414  data */\n      dup9\n      dup9\n        /* \"contracts/ConditionalTokensWallet.sol\":1303:1424  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_63\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ConditionalTokensWallet.sol\":1293:1425  keccak256(abi.encodePacked(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/ConditionalTokensWallet.sol\":1279:1426  return bytes4(keccak256(abi.encodePacked(... */\n      swap1\n      pop\n        /* \"contracts/ConditionalTokensWallet.sol\":1047:1433  function onERC1155BatchReceived(... */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ConditionalTokensWallet.sol\":286:347  mapping(bytes32 => mapping(uint => uint)) public tokenBalance */\n    tag_34:\n      mstore(0x20, 0x03)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/ConditionalTokensWallet.sol\":1439:1794  function onERC1155Received(... */\n    tag_40:\n        /* \"contracts/ConditionalTokensWallet.sol\":1624:1630  bytes4 */\n      0x00\n        /* \"contracts/ConditionalTokensWallet.sol\":1696:1704  operator */\n      dup7\n        /* \"contracts/ConditionalTokensWallet.sol\":1718:1722  from */\n      dup7\n        /* \"contracts/ConditionalTokensWallet.sol\":1736:1738  id */\n      dup7\n        /* \"contracts/ConditionalTokensWallet.sol\":1752:1757  value */\n      dup7\n        /* \"contracts/ConditionalTokensWallet.sol\":1771:1775  data */\n      dup7\n      dup7\n        /* \"contracts/ConditionalTokensWallet.sol\":1666:1785  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_66\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/ConditionalTokensWallet.sol\":1656:1786  keccak256(abi.encodePacked(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/ConditionalTokensWallet.sol\":1642:1787  return bytes4(keccak256(abi.encodePacked(... */\n      swap1\n      pop\n        /* \"contracts/ConditionalTokensWallet.sol\":1439:1794  function onERC1155Received(... */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ConditionalTokensWallet.sol\":893:1041  function transferDai(address to, uint amount) external {... */\n    tag_45:\n        /* \"contracts/ConditionalTokensWallet.sol\":980:985  admin */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ConditionalTokensWallet.sol\":966:985  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ConditionalTokensWallet.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/ConditionalTokensWallet.sol\":966:985  msg.sender == admin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/ConditionalTokensWallet.sol\":958:1000  require(msg.sender == admin, 'only admin') */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"contracts/ConditionalTokensWallet.sol\":1010:1013  dai */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/ConditionalTokensWallet.sol\":1010:1022  dai.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/ConditionalTokensWallet.sol\":1023:1025  to */\n      dup4\n        /* \"contracts/ConditionalTokensWallet.sol\":1027:1033  amount */\n      dup4\n        /* \"contracts/ConditionalTokensWallet.sol\":1010:1034  dai.transfer(to, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap3\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_76\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_76:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      pop\n        /* \"contracts/ConditionalTokensWallet.sol\":893:1041  function transferDai(address to, uint amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_80:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_82\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":169:737   */\n    tag_84:\n        /* \"#utility.yul\":242:250   */\n      0x00\n        /* \"#utility.yul\":252:258   */\n      dup1\n        /* \"#utility.yul\":302:305   */\n      dup4\n        /* \"#utility.yul\":295:299   */\n      0x1f\n        /* \"#utility.yul\":287:293   */\n      dup5\n        /* \"#utility.yul\":283:300   */\n      add\n        /* \"#utility.yul\":279:306   */\n      slt\n        /* \"#utility.yul\":269:391   */\n      tag_86\n      jumpi\n        /* \"#utility.yul\":310:389   */\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":269:391   */\n    tag_86:\n        /* \"#utility.yul\":423:429   */\n      dup3\n        /* \"#utility.yul\":410:430   */\n      calldataload\n        /* \"#utility.yul\":400:430   */\n      swap1\n      pop\n        /* \"#utility.yul\":453:471   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":445:451   */\n      dup2\n        /* \"#utility.yul\":442:472   */\n      gt\n        /* \"#utility.yul\":439:556   */\n      iszero\n      tag_89\n      jumpi\n        /* \"#utility.yul\":475:554   */\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":439:556   */\n    tag_89:\n        /* \"#utility.yul\":589:593   */\n      0x20\n        /* \"#utility.yul\":581:587   */\n      dup4\n        /* \"#utility.yul\":577:594   */\n      add\n        /* \"#utility.yul\":565:594   */\n      swap2\n      pop\n        /* \"#utility.yul\":643:646   */\n      dup4\n        /* \"#utility.yul\":635:639   */\n      0x20\n        /* \"#utility.yul\":627:633   */\n      dup3\n        /* \"#utility.yul\":623:640   */\n      mul\n        /* \"#utility.yul\":613:621   */\n      dup4\n        /* \"#utility.yul\":609:641   */\n      add\n        /* \"#utility.yul\":606:647   */\n      gt\n        /* \"#utility.yul\":603:731   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":650:729   */\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":603:731   */\n    tag_92:\n        /* \"#utility.yul\":169:737   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":743:880   */\n    tag_95:\n        /* \"#utility.yul\":797:802   */\n      0x00\n        /* \"#utility.yul\":828:834   */\n      dup2\n        /* \"#utility.yul\":822:835   */\n      mload\n        /* \"#utility.yul\":813:835   */\n      swap1\n      pop\n        /* \"#utility.yul\":844:874   */\n      tag_97\n        /* \"#utility.yul\":868:873   */\n      dup2\n        /* \"#utility.yul\":844:874   */\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":743:880   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":886:1025   */\n    tag_99:\n        /* \"#utility.yul\":932:937   */\n      0x00\n        /* \"#utility.yul\":970:976   */\n      dup2\n        /* \"#utility.yul\":957:977   */\n      calldataload\n        /* \"#utility.yul\":948:977   */\n      swap1\n      pop\n        /* \"#utility.yul\":986:1019   */\n      tag_101\n        /* \"#utility.yul\":1013:1018   */\n      dup2\n        /* \"#utility.yul\":986:1019   */\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":886:1025   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1031:1168   */\n    tag_103:\n        /* \"#utility.yul\":1076:1081   */\n      0x00\n        /* \"#utility.yul\":1114:1120   */\n      dup2\n        /* \"#utility.yul\":1101:1121   */\n      calldataload\n        /* \"#utility.yul\":1092:1121   */\n      swap1\n      pop\n        /* \"#utility.yul\":1130:1162   */\n      tag_105\n        /* \"#utility.yul\":1156:1161   */\n      dup2\n        /* \"#utility.yul\":1130:1162   */\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1031:1168   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1739   */\n    tag_107:\n        /* \"#utility.yul\":1244:1252   */\n      0x00\n        /* \"#utility.yul\":1254:1260   */\n      dup1\n        /* \"#utility.yul\":1304:1307   */\n      dup4\n        /* \"#utility.yul\":1297:1301   */\n      0x1f\n        /* \"#utility.yul\":1289:1295   */\n      dup5\n        /* \"#utility.yul\":1285:1302   */\n      add\n        /* \"#utility.yul\":1281:1308   */\n      slt\n        /* \"#utility.yul\":1271:1393   */\n      tag_109\n      jumpi\n        /* \"#utility.yul\":1312:1391   */\n      tag_110\n      tag_88\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":1271:1393   */\n    tag_109:\n        /* \"#utility.yul\":1425:1431   */\n      dup3\n        /* \"#utility.yul\":1412:1432   */\n      calldataload\n        /* \"#utility.yul\":1402:1432   */\n      swap1\n      pop\n        /* \"#utility.yul\":1455:1473   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1447:1453   */\n      dup2\n        /* \"#utility.yul\":1444:1474   */\n      gt\n        /* \"#utility.yul\":1441:1558   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":1477:1556   */\n      tag_112\n      tag_91\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1441:1558   */\n    tag_111:\n        /* \"#utility.yul\":1591:1595   */\n      0x20\n        /* \"#utility.yul\":1583:1589   */\n      dup4\n        /* \"#utility.yul\":1579:1596   */\n      add\n        /* \"#utility.yul\":1567:1596   */\n      swap2\n      pop\n        /* \"#utility.yul\":1645:1648   */\n      dup4\n        /* \"#utility.yul\":1637:1641   */\n      0x01\n        /* \"#utility.yul\":1629:1635   */\n      dup3\n        /* \"#utility.yul\":1625:1642   */\n      mul\n        /* \"#utility.yul\":1615:1623   */\n      dup4\n        /* \"#utility.yul\":1611:1643   */\n      add\n        /* \"#utility.yul\":1608:1649   */\n      gt\n        /* \"#utility.yul\":1605:1733   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":1652:1731   */\n      tag_114\n      tag_94\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1605:1733   */\n    tag_113:\n        /* \"#utility.yul\":1187:1739   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1745:1884   */\n    tag_115:\n        /* \"#utility.yul\":1791:1796   */\n      0x00\n        /* \"#utility.yul\":1829:1835   */\n      dup2\n        /* \"#utility.yul\":1816:1836   */\n      calldataload\n        /* \"#utility.yul\":1807:1836   */\n      swap1\n      pop\n        /* \"#utility.yul\":1845:1878   */\n      tag_117\n        /* \"#utility.yul\":1872:1877   */\n      dup2\n        /* \"#utility.yul\":1845:1878   */\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":1745:1884   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1890:3459   */\n    tag_27:\n        /* \"#utility.yul\":2050:2056   */\n      0x00\n        /* \"#utility.yul\":2058:2064   */\n      dup1\n        /* \"#utility.yul\":2066:2072   */\n      0x00\n        /* \"#utility.yul\":2074:2080   */\n      dup1\n        /* \"#utility.yul\":2082:2088   */\n      0x00\n        /* \"#utility.yul\":2090:2096   */\n      dup1\n        /* \"#utility.yul\":2098:2104   */\n      0x00\n        /* \"#utility.yul\":2106:2112   */\n      dup1\n        /* \"#utility.yul\":2155:2158   */\n      0xa0\n        /* \"#utility.yul\":2143:2152   */\n      dup10\n        /* \"#utility.yul\":2134:2141   */\n      dup12\n        /* \"#utility.yul\":2130:2153   */\n      sub\n        /* \"#utility.yul\":2126:2159   */\n      slt\n        /* \"#utility.yul\":2123:2243   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":2162:2241   */\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":2123:2243   */\n    tag_120:\n        /* \"#utility.yul\":2282:2283   */\n      0x00\n        /* \"#utility.yul\":2307:2360   */\n      tag_123\n        /* \"#utility.yul\":2352:2359   */\n      dup12\n        /* \"#utility.yul\":2343:2349   */\n      dup3\n        /* \"#utility.yul\":2332:2341   */\n      dup13\n        /* \"#utility.yul\":2328:2350   */\n      add\n        /* \"#utility.yul\":2307:2360   */\n      tag_80\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":2297:2360   */\n      swap9\n      pop\n        /* \"#utility.yul\":2253:2370   */\n      pop\n        /* \"#utility.yul\":2409:2411   */\n      0x20\n        /* \"#utility.yul\":2435:2488   */\n      tag_124\n        /* \"#utility.yul\":2480:2487   */\n      dup12\n        /* \"#utility.yul\":2471:2477   */\n      dup3\n        /* \"#utility.yul\":2460:2469   */\n      dup13\n        /* \"#utility.yul\":2456:2478   */\n      add\n        /* \"#utility.yul\":2435:2488   */\n      tag_80\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2425:2488   */\n      swap8\n      pop\n        /* \"#utility.yul\":2380:2498   */\n      pop\n        /* \"#utility.yul\":2565:2567   */\n      0x40\n        /* \"#utility.yul\":2554:2563   */\n      dup10\n        /* \"#utility.yul\":2550:2568   */\n      add\n        /* \"#utility.yul\":2537:2569   */\n      calldataload\n        /* \"#utility.yul\":2596:2614   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2588:2594   */\n      dup2\n        /* \"#utility.yul\":2585:2615   */\n      gt\n        /* \"#utility.yul\":2582:2699   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":2618:2697   */\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2582:2699   */\n    tag_125:\n        /* \"#utility.yul\":2731:2811   */\n      tag_128\n        /* \"#utility.yul\":2803:2810   */\n      dup12\n        /* \"#utility.yul\":2794:2800   */\n      dup3\n        /* \"#utility.yul\":2783:2792   */\n      dup13\n        /* \"#utility.yul\":2779:2801   */\n      add\n        /* \"#utility.yul\":2731:2811   */\n      tag_84\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2713:2811   */\n      swap7\n      pop\n      swap7\n      pop\n        /* \"#utility.yul\":2508:2821   */\n      pop\n        /* \"#utility.yul\":2888:2890   */\n      0x60\n        /* \"#utility.yul\":2877:2886   */\n      dup10\n        /* \"#utility.yul\":2873:2891   */\n      add\n        /* \"#utility.yul\":2860:2892   */\n      calldataload\n        /* \"#utility.yul\":2919:2937   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2911:2917   */\n      dup2\n        /* \"#utility.yul\":2908:2938   */\n      gt\n        /* \"#utility.yul\":2905:3022   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":2941:3020   */\n      tag_130\n      tag_127\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2905:3022   */\n    tag_129:\n        /* \"#utility.yul\":3054:3134   */\n      tag_131\n        /* \"#utility.yul\":3126:3133   */\n      dup12\n        /* \"#utility.yul\":3117:3123   */\n      dup3\n        /* \"#utility.yul\":3106:3115   */\n      dup13\n        /* \"#utility.yul\":3102:3124   */\n      add\n        /* \"#utility.yul\":3054:3134   */\n      tag_84\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":3036:3134   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":2831:3144   */\n      pop\n        /* \"#utility.yul\":3211:3214   */\n      0x80\n        /* \"#utility.yul\":3200:3209   */\n      dup10\n        /* \"#utility.yul\":3196:3215   */\n      add\n        /* \"#utility.yul\":3183:3216   */\n      calldataload\n        /* \"#utility.yul\":3243:3261   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3235:3241   */\n      dup2\n        /* \"#utility.yul\":3232:3262   */\n      gt\n        /* \"#utility.yul\":3229:3346   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":3265:3344   */\n      tag_133\n      tag_127\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":3229:3346   */\n    tag_132:\n        /* \"#utility.yul\":3378:3442   */\n      tag_134\n        /* \"#utility.yul\":3434:3441   */\n      dup12\n        /* \"#utility.yul\":3425:3431   */\n      dup3\n        /* \"#utility.yul\":3414:3423   */\n      dup13\n        /* \"#utility.yul\":3410:3432   */\n      add\n        /* \"#utility.yul\":3378:3442   */\n      tag_107\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":3360:3442   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3154:3452   */\n      pop\n        /* \"#utility.yul\":1890:3459   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3465:4574   */\n    tag_39:\n        /* \"#utility.yul\":3571:3577   */\n      0x00\n        /* \"#utility.yul\":3579:3585   */\n      dup1\n        /* \"#utility.yul\":3587:3593   */\n      0x00\n        /* \"#utility.yul\":3595:3601   */\n      dup1\n        /* \"#utility.yul\":3603:3609   */\n      0x00\n        /* \"#utility.yul\":3611:3617   */\n      dup1\n        /* \"#utility.yul\":3660:3663   */\n      0xa0\n        /* \"#utility.yul\":3648:3657   */\n      dup8\n        /* \"#utility.yul\":3639:3646   */\n      dup10\n        /* \"#utility.yul\":3635:3658   */\n      sub\n        /* \"#utility.yul\":3631:3664   */\n      slt\n        /* \"#utility.yul\":3628:3748   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":3667:3746   */\n      tag_137\n      tag_122\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":3628:3748   */\n    tag_136:\n        /* \"#utility.yul\":3787:3788   */\n      0x00\n        /* \"#utility.yul\":3812:3865   */\n      tag_138\n        /* \"#utility.yul\":3857:3864   */\n      dup10\n        /* \"#utility.yul\":3848:3854   */\n      dup3\n        /* \"#utility.yul\":3837:3846   */\n      dup11\n        /* \"#utility.yul\":3833:3855   */\n      add\n        /* \"#utility.yul\":3812:3865   */\n      tag_80\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3802:3865   */\n      swap7\n      pop\n        /* \"#utility.yul\":3758:3875   */\n      pop\n        /* \"#utility.yul\":3914:3916   */\n      0x20\n        /* \"#utility.yul\":3940:3993   */\n      tag_139\n        /* \"#utility.yul\":3985:3992   */\n      dup10\n        /* \"#utility.yul\":3976:3982   */\n      dup3\n        /* \"#utility.yul\":3965:3974   */\n      dup11\n        /* \"#utility.yul\":3961:3983   */\n      add\n        /* \"#utility.yul\":3940:3993   */\n      tag_80\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3930:3993   */\n      swap6\n      pop\n        /* \"#utility.yul\":3885:4003   */\n      pop\n        /* \"#utility.yul\":4042:4044   */\n      0x40\n        /* \"#utility.yul\":4068:4121   */\n      tag_140\n        /* \"#utility.yul\":4113:4120   */\n      dup10\n        /* \"#utility.yul\":4104:4110   */\n      dup3\n        /* \"#utility.yul\":4093:4102   */\n      dup11\n        /* \"#utility.yul\":4089:4111   */\n      add\n        /* \"#utility.yul\":4068:4121   */\n      tag_115\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":4058:4121   */\n      swap5\n      pop\n        /* \"#utility.yul\":4013:4131   */\n      pop\n        /* \"#utility.yul\":4170:4172   */\n      0x60\n        /* \"#utility.yul\":4196:4249   */\n      tag_141\n        /* \"#utility.yul\":4241:4248   */\n      dup10\n        /* \"#utility.yul\":4232:4238   */\n      dup3\n        /* \"#utility.yul\":4221:4230   */\n      dup11\n        /* \"#utility.yul\":4217:4239   */\n      add\n        /* \"#utility.yul\":4196:4249   */\n      tag_115\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":4186:4249   */\n      swap4\n      pop\n        /* \"#utility.yul\":4141:4259   */\n      pop\n        /* \"#utility.yul\":4326:4329   */\n      0x80\n        /* \"#utility.yul\":4315:4324   */\n      dup8\n        /* \"#utility.yul\":4311:4330   */\n      add\n        /* \"#utility.yul\":4298:4331   */\n      calldataload\n        /* \"#utility.yul\":4358:4376   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4350:4356   */\n      dup2\n        /* \"#utility.yul\":4347:4377   */\n      gt\n        /* \"#utility.yul\":4344:4461   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":4380:4459   */\n      tag_143\n      tag_127\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":4344:4461   */\n    tag_142:\n        /* \"#utility.yul\":4493:4557   */\n      tag_144\n        /* \"#utility.yul\":4549:4556   */\n      dup10\n        /* \"#utility.yul\":4540:4546   */\n      dup3\n        /* \"#utility.yul\":4529:4538   */\n      dup11\n        /* \"#utility.yul\":4525:4547   */\n      add\n        /* \"#utility.yul\":4493:4557   */\n      tag_107\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":4475:4557   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":4269:4567   */\n      pop\n        /* \"#utility.yul\":3465:4574   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":4580:5054   */\n    tag_44:\n        /* \"#utility.yul\":4648:4654   */\n      0x00\n        /* \"#utility.yul\":4656:4662   */\n      dup1\n        /* \"#utility.yul\":4705:4707   */\n      0x40\n        /* \"#utility.yul\":4693:4702   */\n      dup4\n        /* \"#utility.yul\":4684:4691   */\n      dup6\n        /* \"#utility.yul\":4680:4703   */\n      sub\n        /* \"#utility.yul\":4676:4708   */\n      slt\n        /* \"#utility.yul\":4673:4792   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":4711:4790   */\n      tag_147\n      tag_122\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4673:4792   */\n    tag_146:\n        /* \"#utility.yul\":4831:4832   */\n      0x00\n        /* \"#utility.yul\":4856:4909   */\n      tag_148\n        /* \"#utility.yul\":4901:4908   */\n      dup6\n        /* \"#utility.yul\":4892:4898   */\n      dup3\n        /* \"#utility.yul\":4881:4890   */\n      dup7\n        /* \"#utility.yul\":4877:4899   */\n      add\n        /* \"#utility.yul\":4856:4909   */\n      tag_80\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":4846:4909   */\n      swap3\n      pop\n        /* \"#utility.yul\":4802:4919   */\n      pop\n        /* \"#utility.yul\":4958:4960   */\n      0x20\n        /* \"#utility.yul\":4984:5037   */\n      tag_149\n        /* \"#utility.yul\":5029:5036   */\n      dup6\n        /* \"#utility.yul\":5020:5026   */\n      dup3\n        /* \"#utility.yul\":5009:5018   */\n      dup7\n        /* \"#utility.yul\":5005:5027   */\n      add\n        /* \"#utility.yul\":4984:5037   */\n      tag_115\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4974:5037   */\n      swap2\n      pop\n        /* \"#utility.yul\":4929:5047   */\n      pop\n        /* \"#utility.yul\":4580:5054   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5060:5405   */\n    tag_78:\n        /* \"#utility.yul\":5127:5133   */\n      0x00\n        /* \"#utility.yul\":5176:5178   */\n      0x20\n        /* \"#utility.yul\":5164:5173   */\n      dup3\n        /* \"#utility.yul\":5155:5162   */\n      dup5\n        /* \"#utility.yul\":5151:5174   */\n      sub\n        /* \"#utility.yul\":5147:5179   */\n      slt\n        /* \"#utility.yul\":5144:5263   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":5182:5261   */\n      tag_152\n      tag_122\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":5144:5263   */\n    tag_151:\n        /* \"#utility.yul\":5302:5303   */\n      0x00\n        /* \"#utility.yul\":5327:5388   */\n      tag_153\n        /* \"#utility.yul\":5380:5387   */\n      dup5\n        /* \"#utility.yul\":5371:5377   */\n      dup3\n        /* \"#utility.yul\":5360:5369   */\n      dup6\n        /* \"#utility.yul\":5356:5378   */\n      add\n        /* \"#utility.yul\":5327:5388   */\n      tag_95\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":5317:5388   */\n      swap2\n      pop\n        /* \"#utility.yul\":5273:5398   */\n      pop\n        /* \"#utility.yul\":5060:5405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5411:6115   */\n    tag_19:\n        /* \"#utility.yul\":5506:5512   */\n      0x00\n        /* \"#utility.yul\":5514:5520   */\n      dup1\n        /* \"#utility.yul\":5522:5528   */\n      0x00\n        /* \"#utility.yul\":5571:5573   */\n      0x40\n        /* \"#utility.yul\":5559:5568   */\n      dup5\n        /* \"#utility.yul\":5550:5557   */\n      dup7\n        /* \"#utility.yul\":5546:5569   */\n      sub\n        /* \"#utility.yul\":5542:5574   */\n      slt\n        /* \"#utility.yul\":5539:5658   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":5577:5656   */\n      tag_156\n      tag_122\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":5539:5658   */\n    tag_155:\n        /* \"#utility.yul\":5697:5698   */\n      0x00\n        /* \"#utility.yul\":5722:5775   */\n      tag_157\n        /* \"#utility.yul\":5767:5774   */\n      dup7\n        /* \"#utility.yul\":5758:5764   */\n      dup3\n        /* \"#utility.yul\":5747:5756   */\n      dup8\n        /* \"#utility.yul\":5743:5765   */\n      add\n        /* \"#utility.yul\":5722:5775   */\n      tag_99\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5712:5775   */\n      swap4\n      pop\n        /* \"#utility.yul\":5668:5785   */\n      pop\n        /* \"#utility.yul\":5852:5854   */\n      0x20\n        /* \"#utility.yul\":5841:5850   */\n      dup5\n        /* \"#utility.yul\":5837:5855   */\n      add\n        /* \"#utility.yul\":5824:5856   */\n      calldataload\n        /* \"#utility.yul\":5883:5901   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5875:5881   */\n      dup2\n        /* \"#utility.yul\":5872:5902   */\n      gt\n        /* \"#utility.yul\":5869:5986   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":5905:5984   */\n      tag_159\n      tag_127\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":5869:5986   */\n    tag_158:\n        /* \"#utility.yul\":6018:6098   */\n      tag_160\n        /* \"#utility.yul\":6090:6097   */\n      dup7\n        /* \"#utility.yul\":6081:6087   */\n      dup3\n        /* \"#utility.yul\":6070:6079   */\n      dup8\n        /* \"#utility.yul\":6066:6088   */\n      add\n        /* \"#utility.yul\":6018:6098   */\n      tag_84\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":6000:6098   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":5795:6108   */\n      pop\n        /* \"#utility.yul\":5411:6115   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6121:6595   */\n    tag_33:\n        /* \"#utility.yul\":6189:6195   */\n      0x00\n        /* \"#utility.yul\":6197:6203   */\n      dup1\n        /* \"#utility.yul\":6246:6248   */\n      0x40\n        /* \"#utility.yul\":6234:6243   */\n      dup4\n        /* \"#utility.yul\":6225:6232   */\n      dup6\n        /* \"#utility.yul\":6221:6244   */\n      sub\n        /* \"#utility.yul\":6217:6249   */\n      slt\n        /* \"#utility.yul\":6214:6333   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":6252:6331   */\n      tag_163\n      tag_122\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":6214:6333   */\n    tag_162:\n        /* \"#utility.yul\":6372:6373   */\n      0x00\n        /* \"#utility.yul\":6397:6450   */\n      tag_164\n        /* \"#utility.yul\":6442:6449   */\n      dup6\n        /* \"#utility.yul\":6433:6439   */\n      dup3\n        /* \"#utility.yul\":6422:6431   */\n      dup7\n        /* \"#utility.yul\":6418:6440   */\n      add\n        /* \"#utility.yul\":6397:6450   */\n      tag_99\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":6387:6450   */\n      swap3\n      pop\n        /* \"#utility.yul\":6343:6460   */\n      pop\n        /* \"#utility.yul\":6499:6501   */\n      0x20\n        /* \"#utility.yul\":6525:6578   */\n      tag_165\n        /* \"#utility.yul\":6570:6577   */\n      dup6\n        /* \"#utility.yul\":6561:6567   */\n      dup3\n        /* \"#utility.yul\":6550:6559   */\n      dup7\n        /* \"#utility.yul\":6546:6568   */\n      add\n        /* \"#utility.yul\":6525:6578   */\n      tag_115\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":6515:6578   */\n      swap2\n      pop\n        /* \"#utility.yul\":6470:6588   */\n      pop\n        /* \"#utility.yul\":6121:6595   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6601:6928   */\n    tag_13:\n        /* \"#utility.yul\":6659:6665   */\n      0x00\n        /* \"#utility.yul\":6708:6710   */\n      0x20\n        /* \"#utility.yul\":6696:6705   */\n      dup3\n        /* \"#utility.yul\":6687:6694   */\n      dup5\n        /* \"#utility.yul\":6683:6706   */\n      sub\n        /* \"#utility.yul\":6679:6711   */\n      slt\n        /* \"#utility.yul\":6676:6795   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":6714:6793   */\n      tag_168\n      tag_122\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":6676:6795   */\n    tag_167:\n        /* \"#utility.yul\":6834:6835   */\n      0x00\n        /* \"#utility.yul\":6859:6911   */\n      tag_169\n        /* \"#utility.yul\":6903:6910   */\n      dup5\n        /* \"#utility.yul\":6894:6900   */\n      dup3\n        /* \"#utility.yul\":6883:6892   */\n      dup6\n        /* \"#utility.yul\":6879:6901   */\n      add\n        /* \"#utility.yul\":6859:6911   */\n      tag_103\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":6849:6911   */\n      swap2\n      pop\n        /* \"#utility.yul\":6805:6921   */\n      pop\n        /* \"#utility.yul\":6601:6928   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6934:7052   */\n    tag_170:\n        /* \"#utility.yul\":7021:7045   */\n      tag_172\n        /* \"#utility.yul\":7039:7044   */\n      dup2\n        /* \"#utility.yul\":7021:7045   */\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":7016:7019   */\n      dup3\n        /* \"#utility.yul\":7009:7046   */\n      mstore\n        /* \"#utility.yul\":6934:7052   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7058:7215   */\n    tag_174:\n        /* \"#utility.yul\":7163:7208   */\n      tag_176\n        /* \"#utility.yul\":7183:7207   */\n      tag_177\n        /* \"#utility.yul\":7201:7206   */\n      dup3\n        /* \"#utility.yul\":7183:7207   */\n      tag_173\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":7163:7208   */\n      tag_178\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":7158:7161   */\n      dup3\n        /* \"#utility.yul\":7151:7209   */\n      mstore\n        /* \"#utility.yul\":7058:7215   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7251:7788   */\n    tag_179:\n        /* \"#utility.yul\":7379:7382   */\n      0x00\n        /* \"#utility.yul\":7400:7486   */\n      tag_181\n        /* \"#utility.yul\":7479:7485   */\n      dup4\n        /* \"#utility.yul\":7474:7477   */\n      dup6\n        /* \"#utility.yul\":7400:7486   */\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":7393:7486   */\n      swap4\n      pop\n        /* \"#utility.yul\":7510:7576   */\n      0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7502:7508   */\n      dup4\n        /* \"#utility.yul\":7499:7577   */\n      gt\n        /* \"#utility.yul\":7496:7661   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":7580:7659   */\n      tag_184\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":7496:7661   */\n    tag_183:\n        /* \"#utility.yul\":7692:7696   */\n      0x20\n        /* \"#utility.yul\":7684:7690   */\n      dup4\n        /* \"#utility.yul\":7680:7697   */\n      mul\n        /* \"#utility.yul\":7670:7697   */\n      swap3\n      pop\n        /* \"#utility.yul\":7707:7750   */\n      tag_186\n        /* \"#utility.yul\":7743:7749   */\n      dup4\n        /* \"#utility.yul\":7738:7741   */\n      dup6\n        /* \"#utility.yul\":7731:7736   */\n      dup5\n        /* \"#utility.yul\":7707:7750   */\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":7775:7781   */\n      dup3\n        /* \"#utility.yul\":7770:7773   */\n      dup5\n        /* \"#utility.yul\":7766:7782   */\n      add\n        /* \"#utility.yul\":7759:7782   */\n      swap1\n      pop\n        /* \"#utility.yul\":7251:7788   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7824:8397   */\n    tag_188:\n        /* \"#utility.yul\":7970:7973   */\n      0x00\n        /* \"#utility.yul\":7991:8095   */\n      tag_190\n        /* \"#utility.yul\":8088:8094   */\n      dup4\n        /* \"#utility.yul\":8083:8086   */\n      dup6\n        /* \"#utility.yul\":7991:8095   */\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":7984:8095   */\n      swap4\n      pop\n        /* \"#utility.yul\":8119:8185   */\n      0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8111:8117   */\n      dup4\n        /* \"#utility.yul\":8108:8186   */\n      gt\n        /* \"#utility.yul\":8105:8270   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":8189:8268   */\n      tag_193\n      tag_185\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":8105:8270   */\n    tag_192:\n        /* \"#utility.yul\":8301:8305   */\n      0x20\n        /* \"#utility.yul\":8293:8299   */\n      dup4\n        /* \"#utility.yul\":8289:8306   */\n      mul\n        /* \"#utility.yul\":8279:8306   */\n      swap3\n      pop\n        /* \"#utility.yul\":8316:8359   */\n      tag_194\n        /* \"#utility.yul\":8352:8358   */\n      dup4\n        /* \"#utility.yul\":8347:8350   */\n      dup6\n        /* \"#utility.yul\":8340:8345   */\n      dup5\n        /* \"#utility.yul\":8316:8359   */\n      tag_187\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":8384:8390   */\n      dup3\n        /* \"#utility.yul\":8379:8382   */\n      dup5\n        /* \"#utility.yul\":8375:8391   */\n      add\n        /* \"#utility.yul\":8368:8391   */\n      swap1\n      pop\n        /* \"#utility.yul\":7824:8397   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8403:8512   */\n    tag_195:\n        /* \"#utility.yul\":8484:8505   */\n      tag_197\n        /* \"#utility.yul\":8499:8504   */\n      dup2\n        /* \"#utility.yul\":8484:8505   */\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":8479:8482   */\n      dup3\n        /* \"#utility.yul\":8472:8506   */\n      mstore\n        /* \"#utility.yul\":8403:8512   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8518:8636   */\n    tag_199:\n        /* \"#utility.yul\":8605:8629   */\n      tag_201\n        /* \"#utility.yul\":8623:8628   */\n      dup2\n        /* \"#utility.yul\":8605:8629   */\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":8600:8603   */\n      dup3\n        /* \"#utility.yul\":8593:8630   */\n      mstore\n        /* \"#utility.yul\":8518:8636   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8642:8757   */\n    tag_203:\n        /* \"#utility.yul\":8727:8750   */\n      tag_205\n        /* \"#utility.yul\":8744:8749   */\n      dup2\n        /* \"#utility.yul\":8727:8750   */\n      tag_206\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":8722:8725   */\n      dup3\n        /* \"#utility.yul\":8715:8751   */\n      mstore\n        /* \"#utility.yul\":8642:8757   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8785:9099   */\n    tag_207:\n        /* \"#utility.yul\":8899:8902   */\n      0x00\n        /* \"#utility.yul\":8920:9008   */\n      tag_209\n        /* \"#utility.yul\":9001:9007   */\n      dup4\n        /* \"#utility.yul\":8996:8999   */\n      dup6\n        /* \"#utility.yul\":8920:9008   */\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":8913:9008   */\n      swap4\n      pop\n        /* \"#utility.yul\":9018:9061   */\n      tag_211\n        /* \"#utility.yul\":9054:9060   */\n      dup4\n        /* \"#utility.yul\":9049:9052   */\n      dup6\n        /* \"#utility.yul\":9042:9047   */\n      dup5\n        /* \"#utility.yul\":9018:9061   */\n      tag_187\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":9086:9092   */\n      dup3\n        /* \"#utility.yul\":9081:9084   */\n      dup5\n        /* \"#utility.yul\":9077:9093   */\n      add\n        /* \"#utility.yul\":9070:9093   */\n      swap1\n      pop\n        /* \"#utility.yul\":8785:9099   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9105:9264   */\n    tag_212:\n        /* \"#utility.yul\":9206:9257   */\n      tag_214\n        /* \"#utility.yul\":9251:9256   */\n      dup2\n        /* \"#utility.yul\":9206:9257   */\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":9201:9204   */\n      dup3\n        /* \"#utility.yul\":9194:9258   */\n      mstore\n        /* \"#utility.yul\":9105:9264   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9270:9636   */\n    tag_216:\n        /* \"#utility.yul\":9412:9415   */\n      0x00\n        /* \"#utility.yul\":9433:9500   */\n      tag_218\n        /* \"#utility.yul\":9497:9499   */\n      0x0a\n        /* \"#utility.yul\":9492:9495   */\n      dup4\n        /* \"#utility.yul\":9433:9500   */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":9426:9500   */\n      swap2\n      pop\n        /* \"#utility.yul\":9509:9602   */\n      tag_220\n        /* \"#utility.yul\":9598:9601   */\n      dup3\n        /* \"#utility.yul\":9509:9602   */\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":9627:9629   */\n      0x20\n        /* \"#utility.yul\":9622:9625   */\n      dup3\n        /* \"#utility.yul\":9618:9630   */\n      add\n        /* \"#utility.yul\":9611:9630   */\n      swap1\n      pop\n        /* \"#utility.yul\":9270:9636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9642:9760   */\n    tag_222:\n        /* \"#utility.yul\":9729:9753   */\n      tag_224\n        /* \"#utility.yul\":9747:9752   */\n      dup2\n        /* \"#utility.yul\":9729:9753   */\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":9724:9727   */\n      dup3\n        /* \"#utility.yul\":9717:9754   */\n      mstore\n        /* \"#utility.yul\":9642:9760   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9766:9923   */\n    tag_226:\n        /* \"#utility.yul\":9871:9916   */\n      tag_228\n        /* \"#utility.yul\":9891:9915   */\n      tag_229\n        /* \"#utility.yul\":9909:9914   */\n      dup3\n        /* \"#utility.yul\":9891:9915   */\n      tag_225\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":9871:9916   */\n      tag_230\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":9866:9869   */\n      dup3\n        /* \"#utility.yul\":9859:9917   */\n      mstore\n        /* \"#utility.yul\":9766:9923   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9929:10982   */\n    tag_64:\n        /* \"#utility.yul\":10301:10304   */\n      0x00\n        /* \"#utility.yul\":10316:10391   */\n      tag_232\n        /* \"#utility.yul\":10387:10390   */\n      dup3\n        /* \"#utility.yul\":10378:10384   */\n      dup12\n        /* \"#utility.yul\":10316:10391   */\n      tag_174\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":10416:10418   */\n      0x14\n        /* \"#utility.yul\":10411:10414   */\n      dup3\n        /* \"#utility.yul\":10407:10419   */\n      add\n        /* \"#utility.yul\":10400:10419   */\n      swap2\n      pop\n        /* \"#utility.yul\":10429:10504   */\n      tag_233\n        /* \"#utility.yul\":10500:10503   */\n      dup3\n        /* \"#utility.yul\":10491:10497   */\n      dup11\n        /* \"#utility.yul\":10429:10504   */\n      tag_174\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":10529:10531   */\n      0x14\n        /* \"#utility.yul\":10524:10527   */\n      dup3\n        /* \"#utility.yul\":10520:10532   */\n      add\n        /* \"#utility.yul\":10513:10532   */\n      swap2\n      pop\n        /* \"#utility.yul\":10549:10684   */\n      tag_234\n        /* \"#utility.yul\":10680:10683   */\n      dup3\n        /* \"#utility.yul\":10671:10677   */\n      dup9\n        /* \"#utility.yul\":10663:10669   */\n      dup11\n        /* \"#utility.yul\":10549:10684   */\n      tag_188\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":10542:10684   */\n      swap2\n      pop\n        /* \"#utility.yul\":10701:10836   */\n      tag_235\n        /* \"#utility.yul\":10832:10835   */\n      dup3\n        /* \"#utility.yul\":10823:10829   */\n      dup7\n        /* \"#utility.yul\":10815:10821   */\n      dup9\n        /* \"#utility.yul\":10701:10836   */\n      tag_188\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":10694:10836   */\n      swap2\n      pop\n        /* \"#utility.yul\":10853:10956   */\n      tag_236\n        /* \"#utility.yul\":10952:10955   */\n      dup3\n        /* \"#utility.yul\":10943:10949   */\n      dup5\n        /* \"#utility.yul\":10935:10941   */\n      dup7\n        /* \"#utility.yul\":10853:10956   */\n      tag_207\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":10846:10956   */\n      swap2\n      pop\n        /* \"#utility.yul\":10973:10976   */\n      dup2\n        /* \"#utility.yul\":10966:10976   */\n      swap1\n      pop\n        /* \"#utility.yul\":9929:10982   */\n      swap10\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10988:11843   */\n    tag_67:\n        /* \"#utility.yul\":11240:11243   */\n      0x00\n        /* \"#utility.yul\":11255:11330   */\n      tag_238\n        /* \"#utility.yul\":11326:11329   */\n      dup3\n        /* \"#utility.yul\":11317:11323   */\n      dup10\n        /* \"#utility.yul\":11255:11330   */\n      tag_174\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":11355:11357   */\n      0x14\n        /* \"#utility.yul\":11350:11353   */\n      dup3\n        /* \"#utility.yul\":11346:11358   */\n      add\n        /* \"#utility.yul\":11339:11358   */\n      swap2\n      pop\n        /* \"#utility.yul\":11368:11443   */\n      tag_239\n        /* \"#utility.yul\":11439:11442   */\n      dup3\n        /* \"#utility.yul\":11430:11436   */\n      dup9\n        /* \"#utility.yul\":11368:11443   */\n      tag_174\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":11468:11470   */\n      0x14\n        /* \"#utility.yul\":11463:11466   */\n      dup3\n        /* \"#utility.yul\":11459:11471   */\n      add\n        /* \"#utility.yul\":11452:11471   */\n      swap2\n      pop\n        /* \"#utility.yul\":11481:11556   */\n      tag_240\n        /* \"#utility.yul\":11552:11555   */\n      dup3\n        /* \"#utility.yul\":11543:11549   */\n      dup8\n        /* \"#utility.yul\":11481:11556   */\n      tag_226\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":11581:11583   */\n      0x20\n        /* \"#utility.yul\":11576:11579   */\n      dup3\n        /* \"#utility.yul\":11572:11584   */\n      add\n        /* \"#utility.yul\":11565:11584   */\n      swap2\n      pop\n        /* \"#utility.yul\":11594:11669   */\n      tag_241\n        /* \"#utility.yul\":11665:11668   */\n      dup3\n        /* \"#utility.yul\":11656:11662   */\n      dup7\n        /* \"#utility.yul\":11594:11669   */\n      tag_226\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":11694:11696   */\n      0x20\n        /* \"#utility.yul\":11689:11692   */\n      dup3\n        /* \"#utility.yul\":11685:11697   */\n      add\n        /* \"#utility.yul\":11678:11697   */\n      swap2\n      pop\n        /* \"#utility.yul\":11714:11817   */\n      tag_242\n        /* \"#utility.yul\":11813:11816   */\n      dup3\n        /* \"#utility.yul\":11804:11810   */\n      dup5\n        /* \"#utility.yul\":11796:11802   */\n      dup7\n        /* \"#utility.yul\":11714:11817   */\n      tag_207\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":11707:11817   */\n      swap2\n      pop\n        /* \"#utility.yul\":11834:11837   */\n      dup2\n        /* \"#utility.yul\":11827:11837   */\n      swap1\n      pop\n        /* \"#utility.yul\":10988:11843   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11849:12071   */\n    tag_24:\n        /* \"#utility.yul\":11942:11946   */\n      0x00\n        /* \"#utility.yul\":11980:11982   */\n      0x20\n        /* \"#utility.yul\":11969:11978   */\n      dup3\n        /* \"#utility.yul\":11965:11983   */\n      add\n        /* \"#utility.yul\":11957:11983   */\n      swap1\n      pop\n        /* \"#utility.yul\":11993:12064   */\n      tag_244\n        /* \"#utility.yul\":12061:12062   */\n      0x00\n        /* \"#utility.yul\":12050:12059   */\n      dup4\n        /* \"#utility.yul\":12046:12063   */\n      add\n        /* \"#utility.yul\":12037:12043   */\n      dup5\n        /* \"#utility.yul\":11993:12064   */\n      tag_170\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":11849:12071   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12077:12409   */\n    tag_73:\n        /* \"#utility.yul\":12198:12202   */\n      0x00\n        /* \"#utility.yul\":12236:12238   */\n      0x40\n        /* \"#utility.yul\":12225:12234   */\n      dup3\n        /* \"#utility.yul\":12221:12239   */\n      add\n        /* \"#utility.yul\":12213:12239   */\n      swap1\n      pop\n        /* \"#utility.yul\":12249:12320   */\n      tag_246\n        /* \"#utility.yul\":12317:12318   */\n      0x00\n        /* \"#utility.yul\":12306:12315   */\n      dup4\n        /* \"#utility.yul\":12302:12319   */\n      add\n        /* \"#utility.yul\":12293:12299   */\n      dup6\n        /* \"#utility.yul\":12249:12320   */\n      tag_170\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":12330:12402   */\n      tag_247\n        /* \"#utility.yul\":12398:12400   */\n      0x20\n        /* \"#utility.yul\":12387:12396   */\n      dup4\n        /* \"#utility.yul\":12383:12401   */\n      add\n        /* \"#utility.yul\":12374:12380   */\n      dup5\n        /* \"#utility.yul\":12330:12402   */\n      tag_222\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":12077:12409   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12415:12625   */\n    tag_16:\n        /* \"#utility.yul\":12502:12506   */\n      0x00\n        /* \"#utility.yul\":12540:12542   */\n      0x20\n        /* \"#utility.yul\":12529:12538   */\n      dup3\n        /* \"#utility.yul\":12525:12543   */\n      add\n        /* \"#utility.yul\":12517:12543   */\n      swap1\n      pop\n        /* \"#utility.yul\":12553:12618   */\n      tag_249\n        /* \"#utility.yul\":12615:12616   */\n      0x00\n        /* \"#utility.yul\":12604:12613   */\n      dup4\n        /* \"#utility.yul\":12600:12617   */\n      add\n        /* \"#utility.yul\":12591:12597   */\n      dup5\n        /* \"#utility.yul\":12553:12618   */\n      tag_195\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":12415:12625   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12631:12849   */\n    tag_30:\n        /* \"#utility.yul\":12722:12726   */\n      0x00\n        /* \"#utility.yul\":12760:12762   */\n      0x20\n        /* \"#utility.yul\":12749:12758   */\n      dup3\n        /* \"#utility.yul\":12745:12763   */\n      add\n        /* \"#utility.yul\":12737:12763   */\n      swap1\n      pop\n        /* \"#utility.yul\":12773:12842   */\n      tag_251\n        /* \"#utility.yul\":12839:12840   */\n      0x00\n        /* \"#utility.yul\":12828:12837   */\n      dup4\n        /* \"#utility.yul\":12824:12841   */\n      add\n        /* \"#utility.yul\":12815:12821   */\n      dup5\n        /* \"#utility.yul\":12773:12842   */\n      tag_203\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":12631:12849   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12855:13607   */\n    tag_58:\n        /* \"#utility.yul\":13106:13110   */\n      0x00\n        /* \"#utility.yul\":13144:13147   */\n      0x80\n        /* \"#utility.yul\":13133:13142   */\n      dup3\n        /* \"#utility.yul\":13129:13148   */\n      add\n        /* \"#utility.yul\":13121:13148   */\n      swap1\n      pop\n        /* \"#utility.yul\":13158:13243   */\n      tag_253\n        /* \"#utility.yul\":13240:13241   */\n      0x00\n        /* \"#utility.yul\":13229:13238   */\n      dup4\n        /* \"#utility.yul\":13225:13242   */\n      add\n        /* \"#utility.yul\":13216:13222   */\n      dup9\n        /* \"#utility.yul\":13158:13243   */\n      tag_212\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":13253:13325   */\n      tag_254\n        /* \"#utility.yul\":13321:13323   */\n      0x20\n        /* \"#utility.yul\":13310:13319   */\n      dup4\n        /* \"#utility.yul\":13306:13324   */\n      add\n        /* \"#utility.yul\":13297:13303   */\n      dup8\n        /* \"#utility.yul\":13253:13325   */\n      tag_199\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":13335:13407   */\n      tag_255\n        /* \"#utility.yul\":13403:13405   */\n      0x40\n        /* \"#utility.yul\":13392:13401   */\n      dup4\n        /* \"#utility.yul\":13388:13406   */\n      add\n        /* \"#utility.yul\":13379:13385   */\n      dup7\n        /* \"#utility.yul\":13335:13407   */\n      tag_199\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":13454:13463   */\n      dup2\n        /* \"#utility.yul\":13448:13452   */\n      dup2\n        /* \"#utility.yul\":13444:13464   */\n      sub\n        /* \"#utility.yul\":13439:13441   */\n      0x60\n        /* \"#utility.yul\":13428:13437   */\n      dup4\n        /* \"#utility.yul\":13424:13442   */\n      add\n        /* \"#utility.yul\":13417:13465   */\n      mstore\n        /* \"#utility.yul\":13482:13600   */\n      tag_256\n        /* \"#utility.yul\":13595:13599   */\n      dup2\n        /* \"#utility.yul\":13586:13592   */\n      dup5\n        /* \"#utility.yul\":13578:13584   */\n      dup7\n        /* \"#utility.yul\":13482:13600   */\n      tag_179\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":13474:13600   */\n      swap1\n      pop\n        /* \"#utility.yul\":12855:13607   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13613:14032   */\n    tag_71:\n        /* \"#utility.yul\":13779:13783   */\n      0x00\n        /* \"#utility.yul\":13817:13819   */\n      0x20\n        /* \"#utility.yul\":13806:13815   */\n      dup3\n        /* \"#utility.yul\":13802:13820   */\n      add\n        /* \"#utility.yul\":13794:13820   */\n      swap1\n      pop\n        /* \"#utility.yul\":13866:13875   */\n      dup2\n        /* \"#utility.yul\":13860:13864   */\n      dup2\n        /* \"#utility.yul\":13856:13876   */\n      sub\n        /* \"#utility.yul\":13852:13853   */\n      0x00\n        /* \"#utility.yul\":13841:13850   */\n      dup4\n        /* \"#utility.yul\":13837:13854   */\n      add\n        /* \"#utility.yul\":13830:13877   */\n      mstore\n        /* \"#utility.yul\":13894:14025   */\n      tag_258\n        /* \"#utility.yul\":14020:14024   */\n      dup2\n        /* \"#utility.yul\":13894:14025   */\n      tag_216\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":13886:14025   */\n      swap1\n      pop\n        /* \"#utility.yul\":13613:14032   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14038:14260   */\n    tag_36:\n        /* \"#utility.yul\":14131:14135   */\n      0x00\n        /* \"#utility.yul\":14169:14171   */\n      0x20\n        /* \"#utility.yul\":14158:14167   */\n      dup3\n        /* \"#utility.yul\":14154:14172   */\n      add\n        /* \"#utility.yul\":14146:14172   */\n      swap1\n      pop\n        /* \"#utility.yul\":14182:14253   */\n      tag_260\n        /* \"#utility.yul\":14250:14251   */\n      0x00\n        /* \"#utility.yul\":14239:14248   */\n      dup4\n        /* \"#utility.yul\":14235:14252   */\n      add\n        /* \"#utility.yul\":14226:14232   */\n      dup5\n        /* \"#utility.yul\":14182:14253   */\n      tag_222\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":14038:14260   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14347:14531   */\n    tag_182:\n        /* \"#utility.yul\":14446:14457   */\n      0x00\n        /* \"#utility.yul\":14480:14486   */\n      dup3\n        /* \"#utility.yul\":14475:14478   */\n      dup3\n        /* \"#utility.yul\":14468:14487   */\n      mstore\n        /* \"#utility.yul\":14520:14524   */\n      0x20\n        /* \"#utility.yul\":14515:14518   */\n      dup3\n        /* \"#utility.yul\":14511:14525   */\n      add\n        /* \"#utility.yul\":14496:14525   */\n      swap1\n      pop\n        /* \"#utility.yul\":14347:14531   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14537:14700   */\n    tag_191:\n        /* \"#utility.yul\":14654:14665   */\n      0x00\n        /* \"#utility.yul\":14691:14694   */\n      dup2\n        /* \"#utility.yul\":14676:14694   */\n      swap1\n      pop\n        /* \"#utility.yul\":14537:14700   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14706:14853   */\n    tag_210:\n        /* \"#utility.yul\":14807:14818   */\n      0x00\n        /* \"#utility.yul\":14844:14847   */\n      dup2\n        /* \"#utility.yul\":14829:14847   */\n      swap1\n      pop\n        /* \"#utility.yul\":14706:14853   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14859:15028   */\n    tag_219:\n        /* \"#utility.yul\":14943:14954   */\n      0x00\n        /* \"#utility.yul\":14977:14983   */\n      dup3\n        /* \"#utility.yul\":14972:14975   */\n      dup3\n        /* \"#utility.yul\":14965:14984   */\n      mstore\n        /* \"#utility.yul\":15017:15021   */\n      0x20\n        /* \"#utility.yul\":15012:15015   */\n      dup3\n        /* \"#utility.yul\":15008:15022   */\n      add\n        /* \"#utility.yul\":14993:15022   */\n      swap1\n      pop\n        /* \"#utility.yul\":14859:15028   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15034:15130   */\n    tag_173:\n        /* \"#utility.yul\":15071:15078   */\n      0x00\n        /* \"#utility.yul\":15100:15124   */\n      tag_268\n        /* \"#utility.yul\":15118:15123   */\n      dup3\n        /* \"#utility.yul\":15100:15124   */\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":15089:15124   */\n      swap1\n      pop\n        /* \"#utility.yul\":15034:15130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15136:15226   */\n    tag_198:\n        /* \"#utility.yul\":15170:15177   */\n      0x00\n        /* \"#utility.yul\":15213:15218   */\n      dup2\n        /* \"#utility.yul\":15206:15219   */\n      iszero\n        /* \"#utility.yul\":15199:15220   */\n      iszero\n        /* \"#utility.yul\":15188:15220   */\n      swap1\n      pop\n        /* \"#utility.yul\":15136:15226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15232:15309   */\n    tag_202:\n        /* \"#utility.yul\":15269:15276   */\n      0x00\n        /* \"#utility.yul\":15298:15303   */\n      dup2\n        /* \"#utility.yul\":15287:15303   */\n      swap1\n      pop\n        /* \"#utility.yul\":15232:15309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15315:15464   */\n    tag_206:\n        /* \"#utility.yul\":15351:15358   */\n      0x00\n        /* \"#utility.yul\":15391:15457   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15384:15389   */\n      dup3\n        /* \"#utility.yul\":15380:15458   */\n      and\n        /* \"#utility.yul\":15369:15458   */\n      swap1\n      pop\n        /* \"#utility.yul\":15315:15464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15470:15596   */\n    tag_269:\n        /* \"#utility.yul\":15507:15514   */\n      0x00\n        /* \"#utility.yul\":15547:15589   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15540:15545   */\n      dup3\n        /* \"#utility.yul\":15536:15590   */\n      and\n        /* \"#utility.yul\":15525:15590   */\n      swap1\n      pop\n        /* \"#utility.yul\":15470:15596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15602:15679   */\n    tag_225:\n        /* \"#utility.yul\":15639:15646   */\n      0x00\n        /* \"#utility.yul\":15668:15673   */\n      dup2\n        /* \"#utility.yul\":15657:15673   */\n      swap1\n      pop\n        /* \"#utility.yul\":15602:15679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15685:15825   */\n    tag_215:\n        /* \"#utility.yul\":15749:15758   */\n      0x00\n        /* \"#utility.yul\":15782:15819   */\n      tag_276\n        /* \"#utility.yul\":15813:15818   */\n      dup3\n        /* \"#utility.yul\":15782:15819   */\n      tag_277\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":15769:15819   */\n      swap1\n      pop\n        /* \"#utility.yul\":15685:15825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15831:15957   */\n    tag_277:\n        /* \"#utility.yul\":15881:15890   */\n      0x00\n        /* \"#utility.yul\":15914:15951   */\n      tag_279\n        /* \"#utility.yul\":15945:15950   */\n      dup3\n        /* \"#utility.yul\":15914:15951   */\n      tag_280\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":15901:15951   */\n      swap1\n      pop\n        /* \"#utility.yul\":15831:15957   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15963:16076   */\n    tag_280:\n        /* \"#utility.yul\":16013:16022   */\n      0x00\n        /* \"#utility.yul\":16046:16070   */\n      tag_282\n        /* \"#utility.yul\":16064:16069   */\n      dup3\n        /* \"#utility.yul\":16046:16070   */\n      tag_269\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":16033:16070   */\n      swap1\n      pop\n        /* \"#utility.yul\":15963:16076   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16082:16236   */\n    tag_187:\n        /* \"#utility.yul\":16166:16172   */\n      dup3\n        /* \"#utility.yul\":16161:16164   */\n      dup2\n        /* \"#utility.yul\":16156:16159   */\n      dup4\n        /* \"#utility.yul\":16143:16173   */\n      calldatacopy\n        /* \"#utility.yul\":16228:16229   */\n      0x00\n        /* \"#utility.yul\":16219:16225   */\n      dup4\n        /* \"#utility.yul\":16214:16217   */\n      dup4\n        /* \"#utility.yul\":16210:16226   */\n      add\n        /* \"#utility.yul\":16203:16230   */\n      mstore\n        /* \"#utility.yul\":16082:16236   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16242:16475   */\n    tag_55:\n        /* \"#utility.yul\":16281:16284   */\n      0x00\n        /* \"#utility.yul\":16304:16328   */\n      tag_285\n        /* \"#utility.yul\":16322:16327   */\n      dup3\n        /* \"#utility.yul\":16304:16328   */\n      tag_225\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":16295:16328   */\n      swap2\n      pop\n        /* \"#utility.yul\":16350:16416   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16343:16348   */\n      dup3\n        /* \"#utility.yul\":16340:16417   */\n      eq\n        /* \"#utility.yul\":16337:16440   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":16420:16438   */\n      tag_287\n      tag_288\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":16337:16440   */\n    tag_286:\n        /* \"#utility.yul\":16467:16468   */\n      0x01\n        /* \"#utility.yul\":16460:16465   */\n      dup3\n        /* \"#utility.yul\":16456:16469   */\n      add\n        /* \"#utility.yul\":16449:16469   */\n      swap1\n      pop\n        /* \"#utility.yul\":16242:16475   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16481:16581   */\n    tag_178:\n        /* \"#utility.yul\":16520:16527   */\n      0x00\n        /* \"#utility.yul\":16549:16575   */\n      tag_290\n        /* \"#utility.yul\":16569:16574   */\n      dup3\n        /* \"#utility.yul\":16549:16575   */\n      tag_291\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":16538:16575   */\n      swap1\n      pop\n        /* \"#utility.yul\":16481:16581   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16587:16681   */\n    tag_291:\n        /* \"#utility.yul\":16626:16633   */\n      0x00\n        /* \"#utility.yul\":16655:16675   */\n      tag_293\n        /* \"#utility.yul\":16669:16674   */\n      dup3\n        /* \"#utility.yul\":16655:16675   */\n      tag_294\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":16644:16675   */\n      swap1\n      pop\n        /* \"#utility.yul\":16587:16681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16687:16766   */\n    tag_230:\n        /* \"#utility.yul\":16726:16733   */\n      0x00\n        /* \"#utility.yul\":16755:16760   */\n      dup2\n        /* \"#utility.yul\":16744:16760   */\n      swap1\n      pop\n        /* \"#utility.yul\":16687:16766   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16772:16952   */\n    tag_288:\n        /* \"#utility.yul\":16820:16897   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16817:16818   */\n      0x00\n        /* \"#utility.yul\":16810:16898   */\n      mstore\n        /* \"#utility.yul\":16917:16921   */\n      0x11\n        /* \"#utility.yul\":16914:16915   */\n      0x04\n        /* \"#utility.yul\":16907:16922   */\n      mstore\n        /* \"#utility.yul\":16941:16945   */\n      0x24\n        /* \"#utility.yul\":16938:16939   */\n      0x00\n        /* \"#utility.yul\":16931:16946   */\n      revert\n        /* \"#utility.yul\":16958:17138   */\n    tag_52:\n        /* \"#utility.yul\":17006:17083   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17003:17004   */\n      0x00\n        /* \"#utility.yul\":16996:17084   */\n      mstore\n        /* \"#utility.yul\":17103:17107   */\n      0x32\n        /* \"#utility.yul\":17100:17101   */\n      0x04\n        /* \"#utility.yul\":17093:17108   */\n      mstore\n        /* \"#utility.yul\":17127:17131   */\n      0x24\n        /* \"#utility.yul\":17124:17125   */\n      0x00\n        /* \"#utility.yul\":17117:17132   */\n      revert\n        /* \"#utility.yul\":17144:17261   */\n    tag_91:\n        /* \"#utility.yul\":17253:17254   */\n      0x00\n        /* \"#utility.yul\":17250:17251   */\n      dup1\n        /* \"#utility.yul\":17243:17255   */\n      revert\n        /* \"#utility.yul\":17267:17384   */\n    tag_88:\n        /* \"#utility.yul\":17376:17377   */\n      0x00\n        /* \"#utility.yul\":17373:17374   */\n      dup1\n        /* \"#utility.yul\":17366:17378   */\n      revert\n        /* \"#utility.yul\":17390:17507   */\n    tag_94:\n        /* \"#utility.yul\":17499:17500   */\n      0x00\n        /* \"#utility.yul\":17496:17497   */\n      dup1\n        /* \"#utility.yul\":17489:17501   */\n      revert\n        /* \"#utility.yul\":17513:17630   */\n    tag_127:\n        /* \"#utility.yul\":17622:17623   */\n      0x00\n        /* \"#utility.yul\":17619:17620   */\n      dup1\n        /* \"#utility.yul\":17612:17624   */\n      revert\n        /* \"#utility.yul\":17636:17753   */\n    tag_185:\n        /* \"#utility.yul\":17745:17746   */\n      0x00\n        /* \"#utility.yul\":17742:17743   */\n      dup1\n        /* \"#utility.yul\":17735:17747   */\n      revert\n        /* \"#utility.yul\":17759:17876   */\n    tag_122:\n        /* \"#utility.yul\":17868:17869   */\n      0x00\n        /* \"#utility.yul\":17865:17866   */\n      dup1\n        /* \"#utility.yul\":17858:17870   */\n      revert\n        /* \"#utility.yul\":17882:17976   */\n    tag_294:\n        /* \"#utility.yul\":17915:17923   */\n      0x00\n        /* \"#utility.yul\":17963:17968   */\n      dup2\n        /* \"#utility.yul\":17959:17961   */\n      0x60\n        /* \"#utility.yul\":17955:17969   */\n      shl\n        /* \"#utility.yul\":17934:17969   */\n      swap1\n      pop\n        /* \"#utility.yul\":17882:17976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17982:18142   */\n    tag_221:\n        /* \"#utility.yul\":18122:18134   */\n      0x6f6e6c792061646d696e00000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18118:18119   */\n      0x00\n        /* \"#utility.yul\":18110:18116   */\n      dup3\n        /* \"#utility.yul\":18106:18120   */\n      add\n        /* \"#utility.yul\":18099:18135   */\n      mstore\n        /* \"#utility.yul\":17982:18142   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18148:18270   */\n    tag_83:\n        /* \"#utility.yul\":18221:18245   */\n      tag_307\n        /* \"#utility.yul\":18239:18244   */\n      dup2\n        /* \"#utility.yul\":18221:18245   */\n      tag_173\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":18214:18219   */\n      dup2\n        /* \"#utility.yul\":18211:18246   */\n      eq\n        /* \"#utility.yul\":18201:18264   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":18260:18261   */\n      0x00\n        /* \"#utility.yul\":18257:18258   */\n      dup1\n        /* \"#utility.yul\":18250:18262   */\n      revert\n        /* \"#utility.yul\":18201:18264   */\n    tag_308:\n        /* \"#utility.yul\":18148:18270   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18276:18392   */\n    tag_98:\n        /* \"#utility.yul\":18346:18367   */\n      tag_310\n        /* \"#utility.yul\":18361:18366   */\n      dup2\n        /* \"#utility.yul\":18346:18367   */\n      tag_198\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":18339:18344   */\n      dup2\n        /* \"#utility.yul\":18336:18368   */\n      eq\n        /* \"#utility.yul\":18326:18386   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":18382:18383   */\n      0x00\n        /* \"#utility.yul\":18379:18380   */\n      dup1\n        /* \"#utility.yul\":18372:18384   */\n      revert\n        /* \"#utility.yul\":18326:18386   */\n    tag_311:\n        /* \"#utility.yul\":18276:18392   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18398:18520   */\n    tag_102:\n        /* \"#utility.yul\":18471:18495   */\n      tag_313\n        /* \"#utility.yul\":18489:18494   */\n      dup2\n        /* \"#utility.yul\":18471:18495   */\n      tag_202\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":18464:18469   */\n      dup2\n        /* \"#utility.yul\":18461:18496   */\n      eq\n        /* \"#utility.yul\":18451:18514   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":18510:18511   */\n      0x00\n        /* \"#utility.yul\":18507:18508   */\n      dup1\n        /* \"#utility.yul\":18500:18512   */\n      revert\n        /* \"#utility.yul\":18451:18514   */\n    tag_314:\n        /* \"#utility.yul\":18398:18520   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18526:18646   */\n    tag_106:\n        /* \"#utility.yul\":18598:18621   */\n      tag_316\n        /* \"#utility.yul\":18615:18620   */\n      dup2\n        /* \"#utility.yul\":18598:18621   */\n      tag_206\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":18591:18596   */\n      dup2\n        /* \"#utility.yul\":18588:18622   */\n      eq\n        /* \"#utility.yul\":18578:18640   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":18636:18637   */\n      0x00\n        /* \"#utility.yul\":18633:18634   */\n      dup1\n        /* \"#utility.yul\":18626:18638   */\n      revert\n        /* \"#utility.yul\":18578:18640   */\n    tag_317:\n        /* \"#utility.yul\":18526:18646   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18652:18774   */\n    tag_118:\n        /* \"#utility.yul\":18725:18749   */\n      tag_319\n        /* \"#utility.yul\":18743:18748   */\n      dup2\n        /* \"#utility.yul\":18725:18749   */\n      tag_225\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":18718:18723   */\n      dup2\n        /* \"#utility.yul\":18715:18750   */\n      eq\n        /* \"#utility.yul\":18705:18768   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":18764:18765   */\n      0x00\n        /* \"#utility.yul\":18761:18762   */\n      dup1\n        /* \"#utility.yul\":18754:18766   */\n      revert\n        /* \"#utility.yul\":18705:18768   */\n    tag_320:\n        /* \"#utility.yul\":18652:18774   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220781c2eecc6384d28056facaed7ab45a210cd215908a5b3e42f8c885e2490e22e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_53": {
									"entryPoint": null,
									"id": 53,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 490,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1511:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:5",
														"type": ""
													}
												],
												"src": "7:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "267:552:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "313:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "315:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "315:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "315:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "288:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "297:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "284:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "284:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "280:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "280:32:5"
															},
															"nodeType": "YulIf",
															"src": "277:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "406:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "421:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "435:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "425:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "450:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "496:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "507:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "492:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "492:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "516:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "460:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "460:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "450:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "544:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "559:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "573:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "563:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "589:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "635:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "646:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "631:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "631:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "655:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "599:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "599:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "589:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "683:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "698:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "712:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "702:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "728:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "774:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "770:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "770:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "794:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "738:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "738:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "728:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "221:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "232:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "244:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "252:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "260:6:5",
														"type": ""
													}
												],
												"src": "156:663:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "865:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "875:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "891:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "885:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "885:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "875:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "858:6:5",
														"type": ""
													}
												],
												"src": "825:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "951:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "961:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "990:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "972:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "972:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "961:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "933:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "943:7:5",
														"type": ""
													}
												],
												"src": "906:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1053:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1063:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1078:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1085:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1074:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1063:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1035:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1045:7:5",
														"type": ""
													}
												],
												"src": "1008:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1229:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1246:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1249:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1239:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1140:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1352:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1369:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1372:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1362:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1362:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1263:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1429:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1486:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1495:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1498:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1488:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1488:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1488:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1452:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1477:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1459:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1459:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1449:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1449:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:43:5"
															},
															"nodeType": "YulIf",
															"src": "1439:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1422:5:5",
														"type": ""
													}
												],
												"src": "1386:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620011bb380380620011bb83398181016040528101906200003791906200015a565b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000209565b6000815190506200015481620001ef565b92915050565b600080600060608486031215620001765762000175620001ea565b5b6000620001868682870162000143565b9350506020620001998682870162000143565b9250506040620001ac8682870162000143565b9150509250925092565b6000620001c382620001ca565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620001fa81620001b6565b81146200020657600080fd5b50565b610fa280620002196000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063bc197c811161005b578063bc197c81146100ec578063ed0f79401461011c578063f23a6e611461014c578063f48b39dd1461017c5761007d565b806301ffc9a714610082578063614f0869146100b25780637dc0d1d0146100ce575b600080fd5b61009c60048036038101906100979190610967565b610198565b6040516100a99190610c16565b60405180910390f35b6100cc60048036038101906100c791906108c7565b610301565b005b6100d66103be565b6040516100e39190610bd2565b60405180910390f35b610106600480360381019061010191906106e4565b6103e4565b6040516101139190610c31565b60405180910390f35b61013660048036038101906101319190610927565b610429565b6040516101439190610cba565b60405180910390f35b610166600480360381019061016191906107c0565b61044e565b6040516101739190610c31565b60405180910390f35b6101966004803603810190610191919061085a565b61048d565b005b60008060405180604001604052807fa38d190d714a56ff654d9f781d45dd8c6a178a7fa8ccd7800fdf6083324eee9c7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020017f3dae9a2b9bb26e63369b9a9e31c9ecbd73ac8f4903cbdea29db3655a87331e2b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250905060005b60028110156102f55781816002811061028d5761028c610e76565b5b60200201517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156102e2576001925050506102fc565b80806102ed90610dd0565b915050610271565b5060009150505b919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166301b7037c60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000801b8686866040518663ffffffff1660e01b8152600401610387959493929190610c4c565b600060405180830381600087803b1580156103a157600080fd5b505af11580156103b5573d6000803e3d6000fd5b50505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008888888888888888604051602001610405989796959493929190610b1c565b60405160208183030381529060405280519060200120905098975050505050505050565b6003602052816000526040600020602052806000526040600020600091509150505481565b600086868686868660405160200161046b96959493929190610b75565b6040516020818303038152906040528051906020012090509695505050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461051d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051490610c9a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610578929190610bed565b602060405180830381600087803b15801561059257600080fd5b505af11580156105a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ca919061089a565b505050565b6000813590506105de81610ef9565b92915050565b60008083601f8401126105fa576105f9610eaa565b5b8235905067ffffffffffffffff81111561061757610616610ea5565b5b60208301915083602082028301111561063357610632610eaf565b5b9250929050565b60008151905061064981610f10565b92915050565b60008135905061065e81610f27565b92915050565b60008135905061067381610f3e565b92915050565b60008083601f84011261068f5761068e610eaa565b5b8235905067ffffffffffffffff8111156106ac576106ab610ea5565b5b6020830191508360018202830111156106c8576106c7610eaf565b5b9250929050565b6000813590506106de81610f55565b92915050565b60008060008060008060008060a0898b03121561070457610703610ebe565b5b60006107128b828c016105cf565b98505060206107238b828c016105cf565b975050604089013567ffffffffffffffff81111561074457610743610eb4565b5b6107508b828c016105e4565b9650965050606089013567ffffffffffffffff81111561077357610772610eb4565b5b61077f8b828c016105e4565b9450945050608089013567ffffffffffffffff8111156107a2576107a1610eb4565b5b6107ae8b828c01610679565b92509250509295985092959890939650565b60008060008060008060a087890312156107dd576107dc610ebe565b5b60006107eb89828a016105cf565b96505060206107fc89828a016105cf565b955050604061080d89828a016106cf565b945050606061081e89828a016106cf565b935050608087013567ffffffffffffffff81111561083f5761083e610eb4565b5b61084b89828a01610679565b92509250509295509295509295565b6000806040838503121561087157610870610ebe565b5b600061087f858286016105cf565b9250506020610890858286016106cf565b9150509250929050565b6000602082840312156108b0576108af610ebe565b5b60006108be8482850161063a565b91505092915050565b6000806000604084860312156108e0576108df610ebe565b5b60006108ee8682870161064f565b935050602084013567ffffffffffffffff81111561090f5761090e610eb4565b5b61091b868287016105e4565b92509250509250925092565b6000806040838503121561093e5761093d610ebe565b5b600061094c8582860161064f565b925050602061095d858286016106cf565b9150509250929050565b60006020828403121561097d5761097c610ebe565b5b600061098b84828501610664565b91505092915050565b61099d81610d0d565b82525050565b6109b46109af82610d0d565b610e19565b82525050565b60006109c68385610cd5565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156109f9576109f8610eb9565b5b602083029250610a0a838584610dc1565b82840190509392505050565b6000610a228385610ce6565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115610a5557610a54610eb9565b5b602083029250610a66838584610dc1565b82840190509392505050565b610a7b81610d1f565b82525050565b610a8a81610d2b565b82525050565b610a9981610d35565b82525050565b6000610aab8385610cf1565b9350610ab8838584610dc1565b82840190509392505050565b610acd81610d8b565b82525050565b6000610ae0600a83610cfc565b9150610aeb82610ed0565b602082019050919050565b610aff81610d81565b82525050565b610b16610b1182610d81565b610e3d565b82525050565b6000610b28828b6109a3565b601482019150610b38828a6109a3565b601482019150610b4982888a610a16565b9150610b56828688610a16565b9150610b63828486610a9f565b91508190509998505050505050505050565b6000610b8182896109a3565b601482019150610b9182886109a3565b601482019150610ba18287610b05565b602082019150610bb18286610b05565b602082019150610bc2828486610a9f565b9150819050979650505050505050565b6000602082019050610be76000830184610994565b92915050565b6000604082019050610c026000830185610994565b610c0f6020830184610af6565b9392505050565b6000602082019050610c2b6000830184610a72565b92915050565b6000602082019050610c466000830184610a90565b92915050565b6000608082019050610c616000830188610ac4565b610c6e6020830187610a81565b610c7b6040830186610a81565b8181036060830152610c8e8184866109ba565b90509695505050505050565b60006020820190508181036000830152610cb381610ad3565b9050919050565b6000602082019050610ccf6000830184610af6565b92915050565b600082825260208201905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b6000610d1882610d61565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d9682610d9d565b9050919050565b6000610da882610daf565b9050919050565b6000610dba82610d61565b9050919050565b82818337600083830152505050565b6000610ddb82610d81565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e0e57610e0d610e47565b5b600182019050919050565b6000610e2482610e2b565b9050919050565b6000610e3682610ec3565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008160601b9050919050565b7f6f6e6c792061646d696e00000000000000000000000000000000000000000000600082015250565b610f0281610d0d565b8114610f0d57600080fd5b50565b610f1981610d1f565b8114610f2457600080fd5b50565b610f3081610d2b565b8114610f3b57600080fd5b50565b610f4781610d35565b8114610f5257600080fd5b50565b610f5e81610d81565b8114610f6957600080fd5b5056fea2646970667358221220781c2eecc6384d28056facaed7ab45a210cd215908a5b3e42f8c885e2490e22e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x11BB CODESIZE SUB DUP1 PUSH3 0x11BB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x15A JUMP JUMPDEST DUP3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x209 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x154 DUP2 PUSH3 0x1EF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x176 JUMPI PUSH3 0x175 PUSH3 0x1EA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x186 DUP7 DUP3 DUP8 ADD PUSH3 0x143 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x199 DUP7 DUP3 DUP8 ADD PUSH3 0x143 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x1AC DUP7 DUP3 DUP8 ADD PUSH3 0x143 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C3 DUP3 PUSH3 0x1CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1FA DUP2 PUSH3 0x1B6 JUMP JUMPDEST DUP2 EQ PUSH3 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xFA2 DUP1 PUSH3 0x219 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC197C81 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xED0F7940 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xF48B39DD EQ PUSH2 0x17C JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x614F0869 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0xCE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x967 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xBD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x927 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x85A JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0xA38D190D714A56FF654D9F781D45DD8C6A178A7FA8CCD7800FDF6083324EEE9C PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3DAE9A2B9BB26E63369B9A9E31C9ECBD73AC8F4903CBDEA29DB3655A87331E2B PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x2F5 JUMPI DUP2 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x28D JUMPI PUSH2 0x28C PUSH2 0xE76 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x2FC JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2ED SWAP1 PUSH2 0xDD0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x271 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1B7037C PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x387 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x405 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x46B SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x514 SWAP1 PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP3 SWAP2 SWAP1 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x89A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5DE DUP2 PUSH2 0xEF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x5FA JUMPI PUSH2 0x5F9 PUSH2 0xEAA JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x617 JUMPI PUSH2 0x616 PUSH2 0xEA5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x633 JUMPI PUSH2 0x632 PUSH2 0xEAF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x649 DUP2 PUSH2 0xF10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x65E DUP2 PUSH2 0xF27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x673 DUP2 PUSH2 0xF3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x68F JUMPI PUSH2 0x68E PUSH2 0xEAA JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6AC JUMPI PUSH2 0x6AB PUSH2 0xEA5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x6C8 JUMPI PUSH2 0x6C7 PUSH2 0xEAF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6DE DUP2 PUSH2 0xF55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x704 JUMPI PUSH2 0x703 PUSH2 0xEBE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x712 DUP12 DUP3 DUP13 ADD PUSH2 0x5CF JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x723 DUP12 DUP3 DUP13 ADD PUSH2 0x5CF JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x744 JUMPI PUSH2 0x743 PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST PUSH2 0x750 DUP12 DUP3 DUP13 ADD PUSH2 0x5E4 JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x773 JUMPI PUSH2 0x772 PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST PUSH2 0x77F DUP12 DUP3 DUP13 ADD PUSH2 0x5E4 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7A2 JUMPI PUSH2 0x7A1 PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST PUSH2 0x7AE DUP12 DUP3 DUP13 ADD PUSH2 0x679 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x7DD JUMPI PUSH2 0x7DC PUSH2 0xEBE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7EB DUP10 DUP3 DUP11 ADD PUSH2 0x5CF JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x7FC DUP10 DUP3 DUP11 ADD PUSH2 0x5CF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x80D DUP10 DUP3 DUP11 ADD PUSH2 0x6CF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x81E DUP10 DUP3 DUP11 ADD PUSH2 0x6CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x83F JUMPI PUSH2 0x83E PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST PUSH2 0x84B DUP10 DUP3 DUP11 ADD PUSH2 0x679 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x871 JUMPI PUSH2 0x870 PUSH2 0xEBE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x87F DUP6 DUP3 DUP7 ADD PUSH2 0x5CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x890 DUP6 DUP3 DUP7 ADD PUSH2 0x6CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B0 JUMPI PUSH2 0x8AF PUSH2 0xEBE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8BE DUP5 DUP3 DUP6 ADD PUSH2 0x63A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8E0 JUMPI PUSH2 0x8DF PUSH2 0xEBE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8EE DUP7 DUP3 DUP8 ADD PUSH2 0x64F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x90F JUMPI PUSH2 0x90E PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST PUSH2 0x91B DUP7 DUP3 DUP8 ADD PUSH2 0x5E4 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x93E JUMPI PUSH2 0x93D PUSH2 0xEBE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x94C DUP6 DUP3 DUP7 ADD PUSH2 0x64F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x95D DUP6 DUP3 DUP7 ADD PUSH2 0x6CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97D JUMPI PUSH2 0x97C PUSH2 0xEBE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x98B DUP5 DUP3 DUP6 ADD PUSH2 0x664 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x99D DUP2 PUSH2 0xD0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x9B4 PUSH2 0x9AF DUP3 PUSH2 0xD0D JUMP JUMPDEST PUSH2 0xE19 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C6 DUP4 DUP6 PUSH2 0xCD5 JUMP JUMPDEST SWAP4 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x9F9 JUMPI PUSH2 0x9F8 PUSH2 0xEB9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 MUL SWAP3 POP PUSH2 0xA0A DUP4 DUP6 DUP5 PUSH2 0xDC1 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA22 DUP4 DUP6 PUSH2 0xCE6 JUMP JUMPDEST SWAP4 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0xA55 JUMPI PUSH2 0xA54 PUSH2 0xEB9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 MUL SWAP3 POP PUSH2 0xA66 DUP4 DUP6 DUP5 PUSH2 0xDC1 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA7B DUP2 PUSH2 0xD1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA8A DUP2 PUSH2 0xD2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA99 DUP2 PUSH2 0xD35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAB DUP4 DUP6 PUSH2 0xCF1 JUMP JUMPDEST SWAP4 POP PUSH2 0xAB8 DUP4 DUP6 DUP5 PUSH2 0xDC1 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xACD DUP2 PUSH2 0xD8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE0 PUSH1 0xA DUP4 PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP PUSH2 0xAEB DUP3 PUSH2 0xED0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAFF DUP2 PUSH2 0xD81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB16 PUSH2 0xB11 DUP3 PUSH2 0xD81 JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB28 DUP3 DUP12 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xB38 DUP3 DUP11 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xB49 DUP3 DUP9 DUP11 PUSH2 0xA16 JUMP JUMPDEST SWAP2 POP PUSH2 0xB56 DUP3 DUP7 DUP9 PUSH2 0xA16 JUMP JUMPDEST SWAP2 POP PUSH2 0xB63 DUP3 DUP5 DUP7 PUSH2 0xA9F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB81 DUP3 DUP10 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xB91 DUP3 DUP9 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xBA1 DUP3 DUP8 PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xBB1 DUP3 DUP7 PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xBC2 DUP3 DUP5 DUP7 PUSH2 0xA9F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBE7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x994 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC02 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x994 JUMP JUMPDEST PUSH2 0xC0F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAF6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC2B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC46 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0xC6E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xA81 JUMP JUMPDEST PUSH2 0xC7B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xA81 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xC8E DUP2 DUP5 DUP7 PUSH2 0x9BA JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCB3 DUP2 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCCF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD18 DUP3 PUSH2 0xD61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD96 DUP3 PUSH2 0xD9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA8 DUP3 PUSH2 0xDAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBA DUP3 PUSH2 0xD61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDB DUP3 PUSH2 0xD81 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xE0E JUMPI PUSH2 0xE0D PUSH2 0xE47 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 DUP3 PUSH2 0xE2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE36 DUP3 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6F6E6C792061646D696E00000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xF02 DUP2 PUSH2 0xD0D JUMP JUMPDEST DUP2 EQ PUSH2 0xF0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xF19 DUP2 PUSH2 0xD1F JUMP JUMPDEST DUP2 EQ PUSH2 0xF24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xF30 DUP2 PUSH2 0xD2B JUMP JUMPDEST DUP2 EQ PUSH2 0xF3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xF47 DUP2 PUSH2 0xD35 JUMP JUMPDEST DUP2 EQ PUSH2 0xF52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xF5E DUP2 PUSH2 0xD81 JUMP JUMPDEST DUP2 EQ PUSH2 0xF69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x1C2EECC6384D28056FACAED7AB45A210CD215908A5B3E42F8C DUP9 0x5E 0x24 SWAP1 0xE2 0x2E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "142:2122:0:-:0;;;373:258;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;497:4;484:3;;:18;;;;;;;;;;;;;;;;;;551;512:17;;:58;;;;;;;;;;;;;;;;;;589:7;580:6;;:16;;;;;;;;;;;;;;;;;;614:10;606:5;;:18;;;;;;;;;;;;;;;;;;373:258;;;142:2122;;7:143:5;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:663::-;244:6;252;260;309:2;297:9;288:7;284:23;280:32;277:119;;;315:79;;:::i;:::-;277:119;435:1;460:64;516:7;507:6;496:9;492:22;460:64;:::i;:::-;450:74;;406:128;573:2;599:64;655:7;646:6;635:9;631:22;599:64;:::i;:::-;589:74;;544:129;712:2;738:64;794:7;785:6;774:9;770:22;738:64;:::i;:::-;728:74;;683:129;156:663;;;;;:::o;906:96::-;943:7;972:24;990:5;972:24;:::i;:::-;961:35;;906:96;;;:::o;1008:126::-;1045:7;1085:42;1078:5;1074:54;1063:65;;1008:126;;;:::o;1263:117::-;1372:1;1369;1362:12;1386:122;1459:24;1477:5;1459:24;:::i;:::-;1452:5;1449:35;1439:63;;1498:1;1495;1488:12;1439:63;1386:122;:::o;142:2122:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC1155BatchReceived_130": {
									"entryPoint": 996,
									"id": 130,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"@onERC1155Received_161": {
									"entryPoint": 1102,
									"id": 161,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@oracle_14": {
									"entryPoint": 958,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@redeemTokens_74": {
									"entryPoint": 769,
									"id": 74,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@supportsInterface_214": {
									"entryPoint": 408,
									"id": 214,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenBalance_20": {
									"entryPoint": 1065,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferDai_97": {
									"entryPoint": 1165,
									"id": 97,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 1508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 1615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 1636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 1657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1743,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr": {
									"entryPoint": 1764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr": {
									"entryPoint": 1984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 2247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes32t_uint256": {
									"entryPoint": 2343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 2467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2490,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2582,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 2674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 2704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2719,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$571_to_t_address_fromStack": {
									"entryPoint": 2756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack": {
									"entryPoint": 2821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_address_t_array$_t_uint256_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr_t_bytes_calldata_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2844,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2933,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3053,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 3121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$571_t_bytes32_t_bytes32_t_array$_t_uint256_$dyn_calldata_ptr__to_t_address_t_bytes32_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3148,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 3371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$571_to_t_address": {
									"entryPoint": 3467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 3521,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 3536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 3609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 3627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint256": {
									"entryPoint": 3645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3655,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 3702,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 3749,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3759,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3764,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec": {
									"entryPoint": 3769,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3774,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_96": {
									"entryPoint": 3779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d": {
									"entryPoint": 3792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 3879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 3902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18777:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "259:478:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "310:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "287:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "295:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "283:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "283:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "302:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "272:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "272:35:5"
															},
															"nodeType": "YulIf",
															"src": "269:122:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "400:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "423:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "410:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "410:20:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "473:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "475:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "475:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "475:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "445:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "453:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "442:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "442:30:5"
															},
															"nodeType": "YulIf",
															"src": "439:117:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "565:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "581:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "589:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "577:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "577:17:5"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "565:8:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "648:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "650:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "650:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "650:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "613:8:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "627:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "635:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "623:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "623:17:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "609:32:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "643:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "606:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "606:41:5"
															},
															"nodeType": "YulIf",
															"src": "603:128:5"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "226:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "234:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "242:8:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "252:6:5",
														"type": ""
													}
												],
												"src": "169:568:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "803:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "813:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "828:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "822:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "822:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "813:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "868:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "844:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "844:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "844:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "781:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "789:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "797:5:5",
														"type": ""
													}
												],
												"src": "743:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "938:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "948:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "970:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "957:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "957:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "948:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1013:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "986:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "986:33:5"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "916:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "924:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "932:5:5",
														"type": ""
													}
												],
												"src": "886:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1082:86:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1092:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1114:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1101:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1101:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1092:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1156:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "1130:25:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1130:32:5"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1060:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1068:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1076:5:5",
														"type": ""
													}
												],
												"src": "1031:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1261:478:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1310:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1312:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1312:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1312:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1289:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1297:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1285:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1285:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1304:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1281:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1281:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1274:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:35:5"
															},
															"nodeType": "YulIf",
															"src": "1271:122:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1402:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1425:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1412:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:20:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1402:6:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1475:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "1477:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1477:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1477:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1447:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1444:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1444:30:5"
															},
															"nodeType": "YulIf",
															"src": "1441:117:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1567:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1583:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1591:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1579:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1579:17:5"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "1567:8:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1650:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "1652:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1652:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1652:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "1615:8:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1629:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1637:4:5",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1625:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1625:17:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1611:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1611:32:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1645:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1608:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1608:41:5"
															},
															"nodeType": "YulIf",
															"src": "1605:128:5"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1228:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1236:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "1244:8:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1254:6:5",
														"type": ""
													}
												],
												"src": "1187:552:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1797:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1807:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1829:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1816:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1816:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1807:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1872:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1845:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1845:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1845:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1775:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1783:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1791:5:5",
														"type": ""
													}
												],
												"src": "1745:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2113:1346:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2160:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2162:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2162:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2162:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2134:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2143:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2130:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2130:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2155:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2126:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2126:33:5"
															},
															"nodeType": "YulIf",
															"src": "2123:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2253:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2268:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2282:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2272:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2297:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2332:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2343:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2328:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2328:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2352:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2307:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2307:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2297:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2380:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2395:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2409:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2399:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2425:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2460:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2471:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2456:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2456:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2480:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2435:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2435:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2425:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2508:313:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2523:46:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2554:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2565:2:5",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2550:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2550:18:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2537:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2537:32:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2527:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2616:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2618:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2618:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2618:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2588:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2596:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2585:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2585:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "2582:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2713:98:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2783:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2794:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2779:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2779:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2803:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2731:47:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:80:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2713:6:5"
																		},
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2721:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2831:313:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2846:46:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2877:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2888:2:5",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2873:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2873:18:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2860:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2860:32:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2850:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2939:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2941:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2941:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2941:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2911:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2919:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2908:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2908:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "2905:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3036:98:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3106:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3117:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3102:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3102:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3126:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3054:47:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:80:5"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3036:6:5"
																		},
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "3044:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3154:298:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3169:47:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3200:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3211:3:5",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3196:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3196:19:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3183:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3183:33:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3173:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3263:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3265:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3265:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3265:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3235:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3243:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3232:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3232:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "3229:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3360:82:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3414:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3425:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3410:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3410:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3434:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3378:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3378:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "3360:6:5"
																		},
																		{
																			"name": "value7",
																			"nodeType": "YulIdentifier",
																			"src": "3368:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2027:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2038:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2050:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2058:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2066:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2074:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2082:6:5",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2090:6:5",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2098:6:5",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "2106:6:5",
														"type": ""
													}
												],
												"src": "1890:1569:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3618:956:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3665:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3667:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3667:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3667:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3639:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3648:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3635:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3635:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3660:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3631:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3631:33:5"
															},
															"nodeType": "YulIf",
															"src": "3628:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "3758:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3773:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3787:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3777:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3802:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3837:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3848:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3833:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3833:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3857:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3812:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3812:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3802:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3885:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3900:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3914:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3904:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3930:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3965:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3976:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3961:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3961:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3985:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3940:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3940:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3930:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4013:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4028:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4042:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4032:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4058:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4093:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4104:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4089:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4089:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4113:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4068:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4068:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4058:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4141:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4156:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4170:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4160:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4186:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4221:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4232:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4217:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4217:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4241:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4196:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4196:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4186:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4269:298:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4284:47:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4315:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4326:3:5",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4311:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4311:19:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "4298:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4298:33:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4288:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4378:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "4380:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4380:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4380:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4350:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4358:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4347:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "4344:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4475:82:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4529:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4540:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4525:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4525:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4549:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4493:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4493:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "4475:6:5"
																		},
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "4483:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3548:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3559:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3571:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3579:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3587:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3595:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3603:6:5",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3611:6:5",
														"type": ""
													}
												],
												"src": "3465:1109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4663:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4709:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4711:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4711:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4711:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4684:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4693:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4680:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4680:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4705:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4676:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4676:32:5"
															},
															"nodeType": "YulIf",
															"src": "4673:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "4802:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4817:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4831:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4821:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4846:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4881:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4892:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4877:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4877:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4901:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4856:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4856:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4846:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4929:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4944:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4958:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4948:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4974:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5009:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5020:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5005:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5005:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5029:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4984:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4984:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4974:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4625:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4636:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4648:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4656:6:5",
														"type": ""
													}
												],
												"src": "4580:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5134:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5180:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5182:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5182:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5182:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5155:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5164:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5151:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5151:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5176:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5147:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5147:32:5"
															},
															"nodeType": "YulIf",
															"src": "5144:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "5273:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5288:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5302:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5292:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5317:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5360:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5371:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5356:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5356:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5380:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5327:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5327:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5317:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5104:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5115:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5127:6:5",
														"type": ""
													}
												],
												"src": "5060:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5529:586:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5575:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5577:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5577:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5577:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5550:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5559:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5546:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5546:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5571:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5542:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5542:32:5"
															},
															"nodeType": "YulIf",
															"src": "5539:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "5668:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5683:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5697:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5687:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5712:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5747:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5758:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5743:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5743:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5767:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5722:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5722:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5712:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5795:313:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5810:46:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5841:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5852:2:5",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5837:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5837:18:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5824:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5824:32:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5814:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5903:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5905:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5905:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5905:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5875:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5883:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5872:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5872:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "5869:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6000:98:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6070:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6081:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6066:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6066:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6090:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6018:47:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6018:80:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6000:6:5"
																		},
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6008:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_array$_t_uint256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5483:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5494:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5506:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5514:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5522:6:5",
														"type": ""
													}
												],
												"src": "5411:704:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6204:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6250:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6252:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6252:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6252:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6225:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6234:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6221:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6221:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6246:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6217:32:5"
															},
															"nodeType": "YulIf",
															"src": "6214:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "6343:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6358:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6372:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6362:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6387:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6422:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6433:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6418:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6418:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6442:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "6397:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6397:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6387:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6470:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6485:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6499:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6489:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6515:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6550:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6561:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6546:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6546:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6570:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6525:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6525:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6515:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6166:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6177:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6189:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6197:6:5",
														"type": ""
													}
												],
												"src": "6121:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6666:262:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6712:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6714:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6714:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6714:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6687:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6696:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6683:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6683:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6708:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6679:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6679:32:5"
															},
															"nodeType": "YulIf",
															"src": "6676:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "6805:116:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6820:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6834:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6824:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6849:62:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6883:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6894:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6879:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6879:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6903:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "6859:19:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6859:52:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6849:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6636:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6647:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6659:6:5",
														"type": ""
													}
												],
												"src": "6601:327:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6999:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7016:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7039:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7021:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7021:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7009:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7009:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7009:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6987:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6994:3:5",
														"type": ""
													}
												],
												"src": "6934:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7141:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7158:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7201:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7183:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7183:24:5"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7163:19:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7163:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7151:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7151:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7151:58:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7129:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7136:3:5",
														"type": ""
													}
												],
												"src": "7058:157:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7383:405:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7393:93:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7474:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7479:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7400:73:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7400:86:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7393:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7578:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec",
																				"nodeType": "YulIdentifier",
																				"src": "7580:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7580:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7580:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7502:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7510:66:5",
																		"type": "",
																		"value": "0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7499:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7499:78:5"
															},
															"nodeType": "YulIf",
															"src": "7496:165:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7670:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7684:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7692:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7680:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7680:17:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "7670:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "7731:5:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7738:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7743:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7707:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7707:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7707:43:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7759:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7770:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7775:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7766:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7766:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7759:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "7356:5:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7363:6:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7371:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7379:3:5",
														"type": ""
													}
												],
												"src": "7251:537:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7974:423:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7984:111:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8083:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8088:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7991:91:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7991:104:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7984:3:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8187:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec",
																				"nodeType": "YulIdentifier",
																				"src": "8189:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8189:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8189:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8111:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8119:66:5",
																		"type": "",
																		"value": "0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8108:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8108:78:5"
															},
															"nodeType": "YulIf",
															"src": "8105:165:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8279:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8293:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8301:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8289:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8289:17:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8279:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "8340:5:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8347:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8352:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8316:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8316:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8316:43:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8368:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8379:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8384:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8375:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8375:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8368:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "7947:5:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7954:6:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7962:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7970:3:5",
														"type": ""
													}
												],
												"src": "7824:573:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8462:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8479:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8499:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "8484:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8484:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8472:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8472:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8472:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8450:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8457:3:5",
														"type": ""
													}
												],
												"src": "8403:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8583:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8600:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8623:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "8605:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8605:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8593:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8593:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8593:37:5"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8571:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8578:3:5",
														"type": ""
													}
												],
												"src": "8518:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8705:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8722:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8744:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "8727:16:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8727:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8715:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8715:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8715:36:5"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8693:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8700:3:5",
														"type": ""
													}
												],
												"src": "8642:115:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8903:196:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8913:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8996:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9001:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8920:75:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8920:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8913:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "9042:5:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9049:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9054:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "9018:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9018:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9018:43:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9070:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9081:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9086:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9077:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9077:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9070:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "8876:5:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8883:6:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8891:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8899:3:5",
														"type": ""
													}
												],
												"src": "8785:314:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9184:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9201:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9251:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$571_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9206:44:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9206:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9194:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9194:64:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9194:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$571_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9172:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9179:3:5",
														"type": ""
													}
												],
												"src": "9105:159:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9416:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9426:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9492:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9497:2:5",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9433:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9433:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9426:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9598:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
																	"nodeType": "YulIdentifier",
																	"src": "9509:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9509:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9509:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9611:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9622:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9627:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9618:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9618:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9611:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9404:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9412:3:5",
														"type": ""
													}
												],
												"src": "9270:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9707:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9724:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9747:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9729:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9729:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9717:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9717:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9717:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9695:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9702:3:5",
														"type": ""
													}
												],
												"src": "9642:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9849:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9866:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9909:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "9891:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9891:24:5"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9871:19:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9871:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9859:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9859:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9859:58:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9837:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9844:3:5",
														"type": ""
													}
												],
												"src": "9766:157:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10305:677:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10378:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10387:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10316:61:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10316:75:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10316:75:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10400:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10411:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10416:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10407:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10407:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10400:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10491:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10500:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10429:61:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10429:75:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10429:75:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10513:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10524:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10529:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10520:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10520:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10513:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10542:142:5",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10663:6:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10671:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10680:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10549:113:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10549:135:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10542:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10694:142:5",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "10815:6:5"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "10823:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10832:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10701:113:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10701:135:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10694:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10846:110:5",
															"value": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "10935:6:5"
																	},
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "10943:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10952:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10853:81:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10853:103:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10846:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10966:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10973:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10966:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_address_t_array$_t_uint256_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr_t_bytes_calldata_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10228:3:5",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "10234:6:5",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "10242:6:5",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "10250:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10258:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10266:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10274:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10282:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10290:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10301:3:5",
														"type": ""
													}
												],
												"src": "9929:1053:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11244:599:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11317:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11326:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11255:61:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11255:75:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11255:75:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11339:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11350:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11355:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11346:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11346:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11339:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11430:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11439:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11368:61:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11368:75:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11368:75:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11452:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11463:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11468:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11459:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11459:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11452:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11543:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11552:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11481:61:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11481:75:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11481:75:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11565:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11576:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11581:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11572:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11572:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11565:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11656:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11665:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11594:61:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11594:75:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11594:75:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11678:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11689:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11694:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11685:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11685:12:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11678:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11707:110:5",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "11796:6:5"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "11804:6:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11813:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11714:81:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11714:103:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11707:3:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11827:10:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11834:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11827:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11183:3:5",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "11189:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "11197:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11205:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11213:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11221:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11229:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11240:3:5",
														"type": ""
													}
												],
												"src": "10988:855:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11947:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11957:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11969:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11980:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11965:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11965:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11957:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12037:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12050:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12061:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12046:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12046:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11993:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11993:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11993:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11919:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11931:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11942:4:5",
														"type": ""
													}
												],
												"src": "11849:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12203:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12213:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12225:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12236:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12221:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12221:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12213:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12293:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12306:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12317:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12302:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12302:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12249:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12249:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12249:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12374:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12387:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12398:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12383:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12383:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12330:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12330:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12330:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12167:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12179:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12187:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12198:4:5",
														"type": ""
													}
												],
												"src": "12077:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12507:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12517:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12529:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12540:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12525:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12525:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12517:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12591:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12604:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12615:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12600:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12600:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12553:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12553:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12553:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12479:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12491:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12502:4:5",
														"type": ""
													}
												],
												"src": "12415:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12727:122:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12737:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12749:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12760:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12745:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12745:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12737:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12815:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12828:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12839:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12824:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12824:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12773:41:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12773:69:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12773:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12699:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12711:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12722:4:5",
														"type": ""
													}
												],
												"src": "12631:218:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13111:496:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13121:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13133:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13144:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13129:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13129:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13121:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13216:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13229:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13240:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13225:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13225:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$571_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13158:57:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13158:85:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13158:85:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13297:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13310:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13321:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13306:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13306:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13253:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13253:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13253:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13379:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13392:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13403:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13388:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13388:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13335:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13335:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13335:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13428:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13439:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13424:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13424:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13448:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13454:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13444:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13444:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13417:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13417:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13417:48:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13474:126:5",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13578:6:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "13586:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13595:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13482:95:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13482:118:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13474:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$571_t_bytes32_t_bytes32_t_array$_t_uint256_$dyn_calldata_ptr__to_t_address_t_bytes32_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13051:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13063:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13071:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13079:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13087:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13095:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13106:4:5",
														"type": ""
													}
												],
												"src": "12855:752:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13784:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13794:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13806:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13817:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13802:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13802:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13794:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13841:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13852:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13837:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13837:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13860:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13866:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13856:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13856:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13830:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13830:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13830:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13886:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14020:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13894:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13894:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13886:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13764:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13779:4:5",
														"type": ""
													}
												],
												"src": "13613:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14136:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14146:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14158:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14169:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14154:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14154:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14146:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14226:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14239:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14250:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14235:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14235:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14182:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14182:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14182:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14108:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14120:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14131:4:5",
														"type": ""
													}
												],
												"src": "14038:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14306:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14316:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14332:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14326:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14326:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "14316:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14299:6:5",
														"type": ""
													}
												],
												"src": "14266:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14458:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14475:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14480:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14468:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14468:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14468:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14496:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14515:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14520:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14511:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14511:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14496:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14430:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14435:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14446:11:5",
														"type": ""
													}
												],
												"src": "14347:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14666:34:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14676:18:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14691:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14676:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14638:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14643:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14654:11:5",
														"type": ""
													}
												],
												"src": "14537:163:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14819:34:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14829:18:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "14844:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14829:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14791:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14796:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14807:11:5",
														"type": ""
													}
												],
												"src": "14706:147:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14955:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14972:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14977:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14965:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14965:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14965:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14993:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15012:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15017:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15008:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15008:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "14993:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14927:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14932:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "14943:11:5",
														"type": ""
													}
												],
												"src": "14859:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15079:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15089:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15118:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "15100:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15100:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15089:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15061:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15071:7:5",
														"type": ""
													}
												],
												"src": "15034:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15178:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15188:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15213:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "15206:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15206:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15199:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15199:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15188:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15160:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15170:7:5",
														"type": ""
													}
												],
												"src": "15136:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15277:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15287:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15298:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15287:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15259:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15269:7:5",
														"type": ""
													}
												],
												"src": "15232:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15359:105:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15369:89:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15384:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15391:66:5",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15380:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15380:78:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15369:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15341:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15351:7:5",
														"type": ""
													}
												],
												"src": "15315:149:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15515:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15525:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15540:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15547:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15536:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15536:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15525:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15497:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15507:7:5",
														"type": ""
													}
												],
												"src": "15470:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15647:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15657:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15668:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15657:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15629:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15639:7:5",
														"type": ""
													}
												],
												"src": "15602:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15759:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15769:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15813:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "15782:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15782:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "15769:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$571_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15739:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15749:9:5",
														"type": ""
													}
												],
												"src": "15685:140:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15891:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15901:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15945:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "15914:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15914:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "15901:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15871:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15881:9:5",
														"type": ""
													}
												],
												"src": "15831:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16023:53:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16033:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16064:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "16046:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16046:24:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "16033:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16003:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "16013:9:5",
														"type": ""
													}
												],
												"src": "15963:113:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16133:103:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "16156:3:5"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "16161:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16166:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "16143:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16143:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16143:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "16214:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16219:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16210:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16210:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16228:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16203:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16203:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16203:27:5"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "16115:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "16120:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16125:6:5",
														"type": ""
													}
												],
												"src": "16082:154:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16285:190:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16295:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16322:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16304:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16304:24:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16295:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16418:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16420:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16420:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16420:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16343:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16350:66:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "16340:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16340:77:5"
															},
															"nodeType": "YulIf",
															"src": "16337:103:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16449:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16460:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16467:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16456:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16456:13:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16449:3:5"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16271:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16281:3:5",
														"type": ""
													}
												],
												"src": "16242:233:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16528:53:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16538:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16569:5:5"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "16549:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16549:26:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "16538:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16510:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "16520:7:5",
														"type": ""
													}
												],
												"src": "16481:100:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16634:47:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16644:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16669:5:5"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nodeType": "YulIdentifier",
																	"src": "16655:13:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16655:20:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "16644:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16616:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "16626:7:5",
														"type": ""
													}
												],
												"src": "16587:94:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16734:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16744:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "16755:5:5"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nodeType": "YulIdentifier",
																	"src": "16744:7:5"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16716:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nodeType": "YulTypedName",
														"src": "16726:7:5",
														"type": ""
													}
												],
												"src": "16687:79:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16800:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16817:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16820:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16810:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16810:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16810:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16914:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16917:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16907:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16907:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16907:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16938:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16941:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16931:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16931:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16931:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16772:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16986:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17003:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17006:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16996:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "16996:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16996:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17100:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17103:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17093:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17093:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17093:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17124:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17127:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17117:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17117:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17117:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "16958:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17233:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17250:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17253:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17243:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17243:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17243:12:5"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "17144:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17356:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17373:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17376:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17366:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17366:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17366:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "17267:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17479:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17496:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17499:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17489:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17489:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17489:12:5"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "17390:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17602:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17619:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17622:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17612:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17612:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17612:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "17513:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17725:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17742:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17745:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17735:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17735:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17735:12:5"
														}
													]
												},
												"name": "revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec",
												"nodeType": "YulFunctionDefinition",
												"src": "17636:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17848:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17865:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17868:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17858:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17858:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17858:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "17759:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17924:52:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17934:35:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17959:2:5",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17963:5:5"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "17955:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "17955:14:5"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "17934:8:5"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17905:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "17915:8:5",
														"type": ""
													}
												],
												"src": "17882:94:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18088:54:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18110:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18118:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18106:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18106:14:5"
																	},
																	{
																		"hexValue": "6f6e6c792061646d696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18122:12:5",
																		"type": "",
																		"value": "only admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18099:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18099:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18099:36:5"
														}
													]
												},
												"name": "store_literal_in_memory_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18080:6:5",
														"type": ""
													}
												],
												"src": "17982:160:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18191:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18248:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18257:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18260:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18250:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18250:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18250:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18214:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18239:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "18221:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18221:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18211:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18211:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18204:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18204:43:5"
															},
															"nodeType": "YulIf",
															"src": "18201:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18184:5:5",
														"type": ""
													}
												],
												"src": "18148:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18316:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18370:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18379:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18382:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18372:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18372:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18372:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18339:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18361:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "18346:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18346:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18336:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18336:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18329:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18329:40:5"
															},
															"nodeType": "YulIf",
															"src": "18326:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18309:5:5",
														"type": ""
													}
												],
												"src": "18276:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18441:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18498:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18507:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18510:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18500:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18500:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18500:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18464:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18489:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "18471:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18471:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18461:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18461:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18454:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18454:43:5"
															},
															"nodeType": "YulIf",
															"src": "18451:63:5"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18434:5:5",
														"type": ""
													}
												],
												"src": "18398:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18568:78:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18624:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18633:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18636:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18626:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18626:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18626:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18591:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18615:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "18598:16:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18598:23:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18588:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18588:34:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18581:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18581:42:5"
															},
															"nodeType": "YulIf",
															"src": "18578:62:5"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18561:5:5",
														"type": ""
													}
												],
												"src": "18526:120:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18695:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18752:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18761:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18764:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18754:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18754:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18754:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18718:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18743:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "18725:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18725:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18715:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18715:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18708:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "18708:43:5"
															},
															"nodeType": "YulIf",
															"src": "18705:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18688:5:5",
														"type": ""
													}
												],
												"src": "18652:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6, value7 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_array$_t_uint256_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n\n        if gt(length, 0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec() }\n        length := mul(length, 0x20)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, length)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        if gt(length, 0x07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec() }\n        length := mul(length, 0x20)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_contract$_IERC20_$571_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$571_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_address_t_array$_t_uint256_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr_t_bytes_calldata_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value7, value6, value5, value4, value3, value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        pos := abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_nonPadded_inplace_fromStack(value2, value3,  pos)\n\n        pos := abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_nonPadded_inplace_fromStack(value4, value5,  pos)\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value6, value7,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_address_t_address_t_uint256_t_uint256_t_bytes_calldata_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value5, value4, value3, value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value3,  pos)\n        pos := add(pos, 32)\n\n        pos := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value4, value5,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$571_t_bytes32_t_bytes32_t_array$_t_uint256_$dyn_calldata_ptr__to_t_address_t_bytes32_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_contract$_IERC20_$571_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_calldata_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3, value4,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$571_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_d0468cefdb41083d2ff66f1e66140f10c9da08cd905521a779422e76a84d11ec() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function store_literal_in_memory_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d(memPtr) {\n\n        mstore(add(memPtr, 0), \"only admin\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063bc197c811161005b578063bc197c81146100ec578063ed0f79401461011c578063f23a6e611461014c578063f48b39dd1461017c5761007d565b806301ffc9a714610082578063614f0869146100b25780637dc0d1d0146100ce575b600080fd5b61009c60048036038101906100979190610967565b610198565b6040516100a99190610c16565b60405180910390f35b6100cc60048036038101906100c791906108c7565b610301565b005b6100d66103be565b6040516100e39190610bd2565b60405180910390f35b610106600480360381019061010191906106e4565b6103e4565b6040516101139190610c31565b60405180910390f35b61013660048036038101906101319190610927565b610429565b6040516101439190610cba565b60405180910390f35b610166600480360381019061016191906107c0565b61044e565b6040516101739190610c31565b60405180910390f35b6101966004803603810190610191919061085a565b61048d565b005b60008060405180604001604052807fa38d190d714a56ff654d9f781d45dd8c6a178a7fa8ccd7800fdf6083324eee9c7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020017f3dae9a2b9bb26e63369b9a9e31c9ecbd73ac8f4903cbdea29db3655a87331e2b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815250905060005b60028110156102f55781816002811061028d5761028c610e76565b5b60200201517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614156102e2576001925050506102fc565b80806102ed90610dd0565b915050610271565b5060009150505b919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166301b7037c60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000801b8686866040518663ffffffff1660e01b8152600401610387959493929190610c4c565b600060405180830381600087803b1580156103a157600080fd5b505af11580156103b5573d6000803e3d6000fd5b50505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008888888888888888604051602001610405989796959493929190610b1c565b60405160208183030381529060405280519060200120905098975050505050505050565b6003602052816000526040600020602052806000526040600020600091509150505481565b600086868686868660405160200161046b96959493929190610b75565b6040516020818303038152906040528051906020012090509695505050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461051d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051490610c9a565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610578929190610bed565b602060405180830381600087803b15801561059257600080fd5b505af11580156105a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ca919061089a565b505050565b6000813590506105de81610ef9565b92915050565b60008083601f8401126105fa576105f9610eaa565b5b8235905067ffffffffffffffff81111561061757610616610ea5565b5b60208301915083602082028301111561063357610632610eaf565b5b9250929050565b60008151905061064981610f10565b92915050565b60008135905061065e81610f27565b92915050565b60008135905061067381610f3e565b92915050565b60008083601f84011261068f5761068e610eaa565b5b8235905067ffffffffffffffff8111156106ac576106ab610ea5565b5b6020830191508360018202830111156106c8576106c7610eaf565b5b9250929050565b6000813590506106de81610f55565b92915050565b60008060008060008060008060a0898b03121561070457610703610ebe565b5b60006107128b828c016105cf565b98505060206107238b828c016105cf565b975050604089013567ffffffffffffffff81111561074457610743610eb4565b5b6107508b828c016105e4565b9650965050606089013567ffffffffffffffff81111561077357610772610eb4565b5b61077f8b828c016105e4565b9450945050608089013567ffffffffffffffff8111156107a2576107a1610eb4565b5b6107ae8b828c01610679565b92509250509295985092959890939650565b60008060008060008060a087890312156107dd576107dc610ebe565b5b60006107eb89828a016105cf565b96505060206107fc89828a016105cf565b955050604061080d89828a016106cf565b945050606061081e89828a016106cf565b935050608087013567ffffffffffffffff81111561083f5761083e610eb4565b5b61084b89828a01610679565b92509250509295509295509295565b6000806040838503121561087157610870610ebe565b5b600061087f858286016105cf565b9250506020610890858286016106cf565b9150509250929050565b6000602082840312156108b0576108af610ebe565b5b60006108be8482850161063a565b91505092915050565b6000806000604084860312156108e0576108df610ebe565b5b60006108ee8682870161064f565b935050602084013567ffffffffffffffff81111561090f5761090e610eb4565b5b61091b868287016105e4565b92509250509250925092565b6000806040838503121561093e5761093d610ebe565b5b600061094c8582860161064f565b925050602061095d858286016106cf565b9150509250929050565b60006020828403121561097d5761097c610ebe565b5b600061098b84828501610664565b91505092915050565b61099d81610d0d565b82525050565b6109b46109af82610d0d565b610e19565b82525050565b60006109c68385610cd5565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156109f9576109f8610eb9565b5b602083029250610a0a838584610dc1565b82840190509392505050565b6000610a228385610ce6565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115610a5557610a54610eb9565b5b602083029250610a66838584610dc1565b82840190509392505050565b610a7b81610d1f565b82525050565b610a8a81610d2b565b82525050565b610a9981610d35565b82525050565b6000610aab8385610cf1565b9350610ab8838584610dc1565b82840190509392505050565b610acd81610d8b565b82525050565b6000610ae0600a83610cfc565b9150610aeb82610ed0565b602082019050919050565b610aff81610d81565b82525050565b610b16610b1182610d81565b610e3d565b82525050565b6000610b28828b6109a3565b601482019150610b38828a6109a3565b601482019150610b4982888a610a16565b9150610b56828688610a16565b9150610b63828486610a9f565b91508190509998505050505050505050565b6000610b8182896109a3565b601482019150610b9182886109a3565b601482019150610ba18287610b05565b602082019150610bb18286610b05565b602082019150610bc2828486610a9f565b9150819050979650505050505050565b6000602082019050610be76000830184610994565b92915050565b6000604082019050610c026000830185610994565b610c0f6020830184610af6565b9392505050565b6000602082019050610c2b6000830184610a72565b92915050565b6000602082019050610c466000830184610a90565b92915050565b6000608082019050610c616000830188610ac4565b610c6e6020830187610a81565b610c7b6040830186610a81565b8181036060830152610c8e8184866109ba565b90509695505050505050565b60006020820190508181036000830152610cb381610ad3565b9050919050565b6000602082019050610ccf6000830184610af6565b92915050565b600082825260208201905092915050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b6000610d1882610d61565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d9682610d9d565b9050919050565b6000610da882610daf565b9050919050565b6000610dba82610d61565b9050919050565b82818337600083830152505050565b6000610ddb82610d81565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e0e57610e0d610e47565b5b600182019050919050565b6000610e2482610e2b565b9050919050565b6000610e3682610ec3565b9050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008160601b9050919050565b7f6f6e6c792061646d696e00000000000000000000000000000000000000000000600082015250565b610f0281610d0d565b8114610f0d57600080fd5b50565b610f1981610d1f565b8114610f2457600080fd5b50565b610f3081610d2b565b8114610f3b57600080fd5b50565b610f4781610d35565b8114610f5257600080fd5b50565b610f5e81610d81565b8114610f6957600080fd5b5056fea2646970667358221220781c2eecc6384d28056facaed7ab45a210cd215908a5b3e42f8c885e2490e22e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC197C81 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xED0F7940 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0xF48B39DD EQ PUSH2 0x17C JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x614F0869 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x7DC0D1D0 EQ PUSH2 0xCE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x967 JUMP JUMPDEST PUSH2 0x198 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC16 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD6 PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0xBD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x927 JUMP JUMPDEST PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0xCBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x161 SWAP2 SWAP1 PUSH2 0x7C0 JUMP JUMPDEST PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0xC31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x85A JUMP JUMPDEST PUSH2 0x48D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0xA38D190D714A56FF654D9F781D45DD8C6A178A7FA8CCD7800FDF6083324EEE9C PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3DAE9A2B9BB26E63369B9A9E31C9ECBD73AC8F4903CBDEA29DB3655A87331E2B PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x2 DUP2 LT ISZERO PUSH2 0x2F5 JUMPI DUP2 DUP2 PUSH1 0x2 DUP2 LT PUSH2 0x28D JUMPI PUSH2 0x28C PUSH2 0xE76 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP5 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ ISZERO PUSH2 0x2E2 JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x2FC JUMP JUMPDEST DUP1 DUP1 PUSH2 0x2ED SWAP1 PUSH2 0xDD0 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x271 JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1B7037C PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SHL DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x387 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x405 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x46B SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x51D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x514 SWAP1 PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x578 SWAP3 SWAP2 SWAP1 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x89A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5DE DUP2 PUSH2 0xEF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x5FA JUMPI PUSH2 0x5F9 PUSH2 0xEAA JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x617 JUMPI PUSH2 0x616 PUSH2 0xEA5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x633 JUMPI PUSH2 0x632 PUSH2 0xEAF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x649 DUP2 PUSH2 0xF10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x65E DUP2 PUSH2 0xF27 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x673 DUP2 PUSH2 0xF3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x68F JUMPI PUSH2 0x68E PUSH2 0xEAA JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6AC JUMPI PUSH2 0x6AB PUSH2 0xEA5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x6C8 JUMPI PUSH2 0x6C7 PUSH2 0xEAF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6DE DUP2 PUSH2 0xF55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x704 JUMPI PUSH2 0x703 PUSH2 0xEBE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x712 DUP12 DUP3 DUP13 ADD PUSH2 0x5CF JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x723 DUP12 DUP3 DUP13 ADD PUSH2 0x5CF JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x744 JUMPI PUSH2 0x743 PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST PUSH2 0x750 DUP12 DUP3 DUP13 ADD PUSH2 0x5E4 JUMP JUMPDEST SWAP7 POP SWAP7 POP POP PUSH1 0x60 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x773 JUMPI PUSH2 0x772 PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST PUSH2 0x77F DUP12 DUP3 DUP13 ADD PUSH2 0x5E4 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7A2 JUMPI PUSH2 0x7A1 PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST PUSH2 0x7AE DUP12 DUP3 DUP13 ADD PUSH2 0x679 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x7DD JUMPI PUSH2 0x7DC PUSH2 0xEBE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7EB DUP10 DUP3 DUP11 ADD PUSH2 0x5CF JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x7FC DUP10 DUP3 DUP11 ADD PUSH2 0x5CF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x80D DUP10 DUP3 DUP11 ADD PUSH2 0x6CF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x81E DUP10 DUP3 DUP11 ADD PUSH2 0x6CF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x83F JUMPI PUSH2 0x83E PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST PUSH2 0x84B DUP10 DUP3 DUP11 ADD PUSH2 0x679 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x871 JUMPI PUSH2 0x870 PUSH2 0xEBE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x87F DUP6 DUP3 DUP7 ADD PUSH2 0x5CF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x890 DUP6 DUP3 DUP7 ADD PUSH2 0x6CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8B0 JUMPI PUSH2 0x8AF PUSH2 0xEBE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8BE DUP5 DUP3 DUP6 ADD PUSH2 0x63A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8E0 JUMPI PUSH2 0x8DF PUSH2 0xEBE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8EE DUP7 DUP3 DUP8 ADD PUSH2 0x64F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x90F JUMPI PUSH2 0x90E PUSH2 0xEB4 JUMP JUMPDEST JUMPDEST PUSH2 0x91B DUP7 DUP3 DUP8 ADD PUSH2 0x5E4 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x93E JUMPI PUSH2 0x93D PUSH2 0xEBE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x94C DUP6 DUP3 DUP7 ADD PUSH2 0x64F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x95D DUP6 DUP3 DUP7 ADD PUSH2 0x6CF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x97D JUMPI PUSH2 0x97C PUSH2 0xEBE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x98B DUP5 DUP3 DUP6 ADD PUSH2 0x664 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x99D DUP2 PUSH2 0xD0D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x9B4 PUSH2 0x9AF DUP3 PUSH2 0xD0D JUMP JUMPDEST PUSH2 0xE19 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9C6 DUP4 DUP6 PUSH2 0xCD5 JUMP JUMPDEST SWAP4 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x9F9 JUMPI PUSH2 0x9F8 PUSH2 0xEB9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 MUL SWAP3 POP PUSH2 0xA0A DUP4 DUP6 DUP5 PUSH2 0xDC1 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA22 DUP4 DUP6 PUSH2 0xCE6 JUMP JUMPDEST SWAP4 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0xA55 JUMPI PUSH2 0xA54 PUSH2 0xEB9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 MUL SWAP3 POP PUSH2 0xA66 DUP4 DUP6 DUP5 PUSH2 0xDC1 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA7B DUP2 PUSH2 0xD1F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA8A DUP2 PUSH2 0xD2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xA99 DUP2 PUSH2 0xD35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAAB DUP4 DUP6 PUSH2 0xCF1 JUMP JUMPDEST SWAP4 POP PUSH2 0xAB8 DUP4 DUP6 DUP5 PUSH2 0xDC1 JUMP JUMPDEST DUP3 DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xACD DUP2 PUSH2 0xD8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAE0 PUSH1 0xA DUP4 PUSH2 0xCFC JUMP JUMPDEST SWAP2 POP PUSH2 0xAEB DUP3 PUSH2 0xED0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAFF DUP2 PUSH2 0xD81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xB16 PUSH2 0xB11 DUP3 PUSH2 0xD81 JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB28 DUP3 DUP12 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xB38 DUP3 DUP11 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xB49 DUP3 DUP9 DUP11 PUSH2 0xA16 JUMP JUMPDEST SWAP2 POP PUSH2 0xB56 DUP3 DUP7 DUP9 PUSH2 0xA16 JUMP JUMPDEST SWAP2 POP PUSH2 0xB63 DUP3 DUP5 DUP7 PUSH2 0xA9F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB81 DUP3 DUP10 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xB91 DUP3 DUP9 PUSH2 0x9A3 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0xBA1 DUP3 DUP8 PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xBB1 DUP3 DUP7 PUSH2 0xB05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xBC2 DUP3 DUP5 DUP7 PUSH2 0xA9F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBE7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x994 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xC02 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x994 JUMP JUMPDEST PUSH2 0xC0F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xAF6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC2B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC46 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA90 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0xC6E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xA81 JUMP JUMPDEST PUSH2 0xC7B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xA81 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0xC8E DUP2 DUP5 DUP7 PUSH2 0x9BA JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCB3 DUP2 PUSH2 0xAD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCCF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD18 DUP3 PUSH2 0xD61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD96 DUP3 PUSH2 0xD9D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA8 DUP3 PUSH2 0xDAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBA DUP3 PUSH2 0xD61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDDB DUP3 PUSH2 0xD81 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xE0E JUMPI PUSH2 0xE0D PUSH2 0xE47 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 DUP3 PUSH2 0xE2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE36 DUP3 PUSH2 0xEC3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6F6E6C792061646D696E00000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xF02 DUP2 PUSH2 0xD0D JUMP JUMPDEST DUP2 EQ PUSH2 0xF0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xF19 DUP2 PUSH2 0xD1F JUMP JUMPDEST DUP2 EQ PUSH2 0xF24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xF30 DUP2 PUSH2 0xD2B JUMP JUMPDEST DUP2 EQ PUSH2 0xF3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xF47 DUP2 PUSH2 0xD35 JUMP JUMPDEST DUP2 EQ PUSH2 0xF52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xF5E DUP2 PUSH2 0xD81 JUMP JUMPDEST DUP2 EQ PUSH2 0xF69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x1C2EECC6384D28056FACAED7AB45A210CD215908A5B3E42F8C DUP9 0x5E 0x24 SWAP1 0xE2 0x2E PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "142:2122:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1800:462;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;637:250;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;259:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1047:386;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;286:61;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1439:355;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;893:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1800:462;1879:4;1895:36;:162;;;;;;;;1955:32;1895:162;;;;;;;;;;2009:37;1895:162;;;;;;;;;;;2073:6;2068:165;2089:26;2085:1;:30;2068:165;;;2155:19;2175:1;2155:22;;;;;;;:::i;:::-;;;;;;2140:37;;;:11;:37;;;;2136:87;;;2204:4;2197:11;;;;;;2136:87;2117:3;;;;;:::i;:::-;;;;2068:165;;;;2250:5;2243:12;;;1800:462;;;;:::o;637:250::-;748:17;;;;;;;;;;;:33;;;795:3;;;;;;;;;;820:1;812:10;;836:11;861:9;;748:132;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;637:250;;;:::o;259:21::-;;;;;;;;;;;;;:::o;1047:386::-;1261:6;1333:8;1355:4;1373:3;;1390:6;;1410:4;;1303:121;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1293:132;;;;;;1279:147;;1047:386;;;;;;;;;;:::o;286:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1439:355::-;1624:6;1696:8;1718:4;1736:2;1752:5;1771:4;;1666:119;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1656:130;;;;;;1642:145;;1439:355;;;;;;;;:::o;893:148::-;980:5;;;;;;;;;;;966:19;;:10;:19;;;958:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;1010:3;;;;;;;;;;:12;;;1023:2;1027:6;1010:24;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;893:148;;:::o;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;169:568::-;242:8;252:6;302:3;295:4;287:6;283:17;279:27;269:122;;310:79;;:::i;:::-;269:122;423:6;410:20;400:30;;453:18;445:6;442:30;439:117;;;475:79;;:::i;:::-;439:117;589:4;581:6;577:17;565:29;;643:3;635:4;627:6;623:17;613:8;609:32;606:41;603:128;;;650:79;;:::i;:::-;603:128;169:568;;;;;:::o;743:137::-;797:5;828:6;822:13;813:22;;844:30;868:5;844:30;:::i;:::-;743:137;;;;:::o;886:139::-;932:5;970:6;957:20;948:29;;986:33;1013:5;986:33;:::i;:::-;886:139;;;;:::o;1031:137::-;1076:5;1114:6;1101:20;1092:29;;1130:32;1156:5;1130:32;:::i;:::-;1031:137;;;;:::o;1187:552::-;1244:8;1254:6;1304:3;1297:4;1289:6;1285:17;1281:27;1271:122;;1312:79;;:::i;:::-;1271:122;1425:6;1412:20;1402:30;;1455:18;1447:6;1444:30;1441:117;;;1477:79;;:::i;:::-;1441:117;1591:4;1583:6;1579:17;1567:29;;1645:3;1637:4;1629:6;1625:17;1615:8;1611:32;1608:41;1605:128;;;1652:79;;:::i;:::-;1605:128;1187:552;;;;;:::o;1745:139::-;1791:5;1829:6;1816:20;1807:29;;1845:33;1872:5;1845:33;:::i;:::-;1745:139;;;;:::o;1890:1569::-;2050:6;2058;2066;2074;2082;2090;2098;2106;2155:3;2143:9;2134:7;2130:23;2126:33;2123:120;;;2162:79;;:::i;:::-;2123:120;2282:1;2307:53;2352:7;2343:6;2332:9;2328:22;2307:53;:::i;:::-;2297:63;;2253:117;2409:2;2435:53;2480:7;2471:6;2460:9;2456:22;2435:53;:::i;:::-;2425:63;;2380:118;2565:2;2554:9;2550:18;2537:32;2596:18;2588:6;2585:30;2582:117;;;2618:79;;:::i;:::-;2582:117;2731:80;2803:7;2794:6;2783:9;2779:22;2731:80;:::i;:::-;2713:98;;;;2508:313;2888:2;2877:9;2873:18;2860:32;2919:18;2911:6;2908:30;2905:117;;;2941:79;;:::i;:::-;2905:117;3054:80;3126:7;3117:6;3106:9;3102:22;3054:80;:::i;:::-;3036:98;;;;2831:313;3211:3;3200:9;3196:19;3183:33;3243:18;3235:6;3232:30;3229:117;;;3265:79;;:::i;:::-;3229:117;3378:64;3434:7;3425:6;3414:9;3410:22;3378:64;:::i;:::-;3360:82;;;;3154:298;1890:1569;;;;;;;;;;;:::o;3465:1109::-;3571:6;3579;3587;3595;3603;3611;3660:3;3648:9;3639:7;3635:23;3631:33;3628:120;;;3667:79;;:::i;:::-;3628:120;3787:1;3812:53;3857:7;3848:6;3837:9;3833:22;3812:53;:::i;:::-;3802:63;;3758:117;3914:2;3940:53;3985:7;3976:6;3965:9;3961:22;3940:53;:::i;:::-;3930:63;;3885:118;4042:2;4068:53;4113:7;4104:6;4093:9;4089:22;4068:53;:::i;:::-;4058:63;;4013:118;4170:2;4196:53;4241:7;4232:6;4221:9;4217:22;4196:53;:::i;:::-;4186:63;;4141:118;4326:3;4315:9;4311:19;4298:33;4358:18;4350:6;4347:30;4344:117;;;4380:79;;:::i;:::-;4344:117;4493:64;4549:7;4540:6;4529:9;4525:22;4493:64;:::i;:::-;4475:82;;;;4269:298;3465:1109;;;;;;;;:::o;4580:474::-;4648:6;4656;4705:2;4693:9;4684:7;4680:23;4676:32;4673:119;;;4711:79;;:::i;:::-;4673:119;4831:1;4856:53;4901:7;4892:6;4881:9;4877:22;4856:53;:::i;:::-;4846:63;;4802:117;4958:2;4984:53;5029:7;5020:6;5009:9;5005:22;4984:53;:::i;:::-;4974:63;;4929:118;4580:474;;;;;:::o;5060:345::-;5127:6;5176:2;5164:9;5155:7;5151:23;5147:32;5144:119;;;5182:79;;:::i;:::-;5144:119;5302:1;5327:61;5380:7;5371:6;5360:9;5356:22;5327:61;:::i;:::-;5317:71;;5273:125;5060:345;;;;:::o;5411:704::-;5506:6;5514;5522;5571:2;5559:9;5550:7;5546:23;5542:32;5539:119;;;5577:79;;:::i;:::-;5539:119;5697:1;5722:53;5767:7;5758:6;5747:9;5743:22;5722:53;:::i;:::-;5712:63;;5668:117;5852:2;5841:9;5837:18;5824:32;5883:18;5875:6;5872:30;5869:117;;;5905:79;;:::i;:::-;5869:117;6018:80;6090:7;6081:6;6070:9;6066:22;6018:80;:::i;:::-;6000:98;;;;5795:313;5411:704;;;;;:::o;6121:474::-;6189:6;6197;6246:2;6234:9;6225:7;6221:23;6217:32;6214:119;;;6252:79;;:::i;:::-;6214:119;6372:1;6397:53;6442:7;6433:6;6422:9;6418:22;6397:53;:::i;:::-;6387:63;;6343:117;6499:2;6525:53;6570:7;6561:6;6550:9;6546:22;6525:53;:::i;:::-;6515:63;;6470:118;6121:474;;;;;:::o;6601:327::-;6659:6;6708:2;6696:9;6687:7;6683:23;6679:32;6676:119;;;6714:79;;:::i;:::-;6676:119;6834:1;6859:52;6903:7;6894:6;6883:9;6879:22;6859:52;:::i;:::-;6849:62;;6805:116;6601:327;;;;:::o;6934:118::-;7021:24;7039:5;7021:24;:::i;:::-;7016:3;7009:37;6934:118;;:::o;7058:157::-;7163:45;7183:24;7201:5;7183:24;:::i;:::-;7163:45;:::i;:::-;7158:3;7151:58;7058:157;;:::o;7251:537::-;7379:3;7400:86;7479:6;7474:3;7400:86;:::i;:::-;7393:93;;7510:66;7502:6;7499:78;7496:165;;;7580:79;;:::i;:::-;7496:165;7692:4;7684:6;7680:17;7670:27;;7707:43;7743:6;7738:3;7731:5;7707:43;:::i;:::-;7775:6;7770:3;7766:16;7759:23;;7251:537;;;;;:::o;7824:573::-;7970:3;7991:104;8088:6;8083:3;7991:104;:::i;:::-;7984:111;;8119:66;8111:6;8108:78;8105:165;;;8189:79;;:::i;:::-;8105:165;8301:4;8293:6;8289:17;8279:27;;8316:43;8352:6;8347:3;8340:5;8316:43;:::i;:::-;8384:6;8379:3;8375:16;8368:23;;7824:573;;;;;:::o;8403:109::-;8484:21;8499:5;8484:21;:::i;:::-;8479:3;8472:34;8403:109;;:::o;8518:118::-;8605:24;8623:5;8605:24;:::i;:::-;8600:3;8593:37;8518:118;;:::o;8642:115::-;8727:23;8744:5;8727:23;:::i;:::-;8722:3;8715:36;8642:115;;:::o;8785:314::-;8899:3;8920:88;9001:6;8996:3;8920:88;:::i;:::-;8913:95;;9018:43;9054:6;9049:3;9042:5;9018:43;:::i;:::-;9086:6;9081:3;9077:16;9070:23;;8785:314;;;;;:::o;9105:159::-;9206:51;9251:5;9206:51;:::i;:::-;9201:3;9194:64;9105:159;;:::o;9270:366::-;9412:3;9433:67;9497:2;9492:3;9433:67;:::i;:::-;9426:74;;9509:93;9598:3;9509:93;:::i;:::-;9627:2;9622:3;9618:12;9611:19;;9270:366;;;:::o;9642:118::-;9729:24;9747:5;9729:24;:::i;:::-;9724:3;9717:37;9642:118;;:::o;9766:157::-;9871:45;9891:24;9909:5;9891:24;:::i;:::-;9871:45;:::i;:::-;9866:3;9859:58;9766:157;;:::o;9929:1053::-;10301:3;10316:75;10387:3;10378:6;10316:75;:::i;:::-;10416:2;10411:3;10407:12;10400:19;;10429:75;10500:3;10491:6;10429:75;:::i;:::-;10529:2;10524:3;10520:12;10513:19;;10549:135;10680:3;10671:6;10663;10549:135;:::i;:::-;10542:142;;10701:135;10832:3;10823:6;10815;10701:135;:::i;:::-;10694:142;;10853:103;10952:3;10943:6;10935;10853:103;:::i;:::-;10846:110;;10973:3;10966:10;;9929:1053;;;;;;;;;;;:::o;10988:855::-;11240:3;11255:75;11326:3;11317:6;11255:75;:::i;:::-;11355:2;11350:3;11346:12;11339:19;;11368:75;11439:3;11430:6;11368:75;:::i;:::-;11468:2;11463:3;11459:12;11452:19;;11481:75;11552:3;11543:6;11481:75;:::i;:::-;11581:2;11576:3;11572:12;11565:19;;11594:75;11665:3;11656:6;11594:75;:::i;:::-;11694:2;11689:3;11685:12;11678:19;;11714:103;11813:3;11804:6;11796;11714:103;:::i;:::-;11707:110;;11834:3;11827:10;;10988:855;;;;;;;;;:::o;11849:222::-;11942:4;11980:2;11969:9;11965:18;11957:26;;11993:71;12061:1;12050:9;12046:17;12037:6;11993:71;:::i;:::-;11849:222;;;;:::o;12077:332::-;12198:4;12236:2;12225:9;12221:18;12213:26;;12249:71;12317:1;12306:9;12302:17;12293:6;12249:71;:::i;:::-;12330:72;12398:2;12387:9;12383:18;12374:6;12330:72;:::i;:::-;12077:332;;;;;:::o;12415:210::-;12502:4;12540:2;12529:9;12525:18;12517:26;;12553:65;12615:1;12604:9;12600:17;12591:6;12553:65;:::i;:::-;12415:210;;;;:::o;12631:218::-;12722:4;12760:2;12749:9;12745:18;12737:26;;12773:69;12839:1;12828:9;12824:17;12815:6;12773:69;:::i;:::-;12631:218;;;;:::o;12855:752::-;13106:4;13144:3;13133:9;13129:19;13121:27;;13158:85;13240:1;13229:9;13225:17;13216:6;13158:85;:::i;:::-;13253:72;13321:2;13310:9;13306:18;13297:6;13253:72;:::i;:::-;13335;13403:2;13392:9;13388:18;13379:6;13335:72;:::i;:::-;13454:9;13448:4;13444:20;13439:2;13428:9;13424:18;13417:48;13482:118;13595:4;13586:6;13578;13482:118;:::i;:::-;13474:126;;12855:752;;;;;;;;:::o;13613:419::-;13779:4;13817:2;13806:9;13802:18;13794:26;;13866:9;13860:4;13856:20;13852:1;13841:9;13837:17;13830:47;13894:131;14020:4;13894:131;:::i;:::-;13886:139;;13613:419;;;:::o;14038:222::-;14131:4;14169:2;14158:9;14154:18;14146:26;;14182:71;14250:1;14239:9;14235:17;14226:6;14182:71;:::i;:::-;14038:222;;;;:::o;14347:184::-;14446:11;14480:6;14475:3;14468:19;14520:4;14515:3;14511:14;14496:29;;14347:184;;;;:::o;14537:163::-;14654:11;14691:3;14676:18;;14537:163;;;;:::o;14706:147::-;14807:11;14844:3;14829:18;;14706:147;;;;:::o;14859:169::-;14943:11;14977:6;14972:3;14965:19;15017:4;15012:3;15008:14;14993:29;;14859:169;;;;:::o;15034:96::-;15071:7;15100:24;15118:5;15100:24;:::i;:::-;15089:35;;15034:96;;;:::o;15136:90::-;15170:7;15213:5;15206:13;15199:21;15188:32;;15136:90;;;:::o;15232:77::-;15269:7;15298:5;15287:16;;15232:77;;;:::o;15315:149::-;15351:7;15391:66;15384:5;15380:78;15369:89;;15315:149;;;:::o;15470:126::-;15507:7;15547:42;15540:5;15536:54;15525:65;;15470:126;;;:::o;15602:77::-;15639:7;15668:5;15657:16;;15602:77;;;:::o;15685:140::-;15749:9;15782:37;15813:5;15782:37;:::i;:::-;15769:50;;15685:140;;;:::o;15831:126::-;15881:9;15914:37;15945:5;15914:37;:::i;:::-;15901:50;;15831:126;;;:::o;15963:113::-;16013:9;16046:24;16064:5;16046:24;:::i;:::-;16033:37;;15963:113;;;:::o;16082:154::-;16166:6;16161:3;16156;16143:30;16228:1;16219:6;16214:3;16210:16;16203:27;16082:154;;;:::o;16242:233::-;16281:3;16304:24;16322:5;16304:24;:::i;:::-;16295:33;;16350:66;16343:5;16340:77;16337:103;;;16420:18;;:::i;:::-;16337:103;16467:1;16460:5;16456:13;16449:20;;16242:233;;;:::o;16481:100::-;16520:7;16549:26;16569:5;16549:26;:::i;:::-;16538:37;;16481:100;;;:::o;16587:94::-;16626:7;16655:20;16669:5;16655:20;:::i;:::-;16644:31;;16587:94;;;:::o;16687:79::-;16726:7;16755:5;16744:16;;16687:79;;;:::o;16772:180::-;16820:77;16817:1;16810:88;16917:4;16914:1;16907:15;16941:4;16938:1;16931:15;16958:180;17006:77;17003:1;16996:88;17103:4;17100:1;17093:15;17127:4;17124:1;17117:15;17144:117;17253:1;17250;17243:12;17267:117;17376:1;17373;17366:12;17390:117;17499:1;17496;17489:12;17513:117;17622:1;17619;17612:12;17636:117;17745:1;17742;17735:12;17759:117;17868:1;17865;17858:12;17882:94;17915:8;17963:5;17959:2;17955:14;17934:35;;17882:94;;;:::o;17982:160::-;18122:12;18118:1;18110:6;18106:14;18099:36;17982:160;:::o;18148:122::-;18221:24;18239:5;18221:24;:::i;:::-;18214:5;18211:35;18201:63;;18260:1;18257;18250:12;18201:63;18148:122;:::o;18276:116::-;18346:21;18361:5;18346:21;:::i;:::-;18339:5;18336:32;18326:60;;18382:1;18379;18372:12;18326:60;18276:116;:::o;18398:122::-;18471:24;18489:5;18471:24;:::i;:::-;18464:5;18461:35;18451:63;;18510:1;18507;18500:12;18451:63;18398:122;:::o;18526:120::-;18598:23;18615:5;18598:23;:::i;:::-;18591:5;18588:34;18578:62;;18636:1;18633;18626:12;18578:62;18526:120;:::o;18652:122::-;18725:24;18743:5;18725:24;:::i;:::-;18718:5;18715:35;18705:63;;18764:1;18761;18754:12;18705:63;18652:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "800400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"oracle()": "2559",
								"redeemTokens(bytes32,uint256[])": "infinite",
								"supportsInterface(bytes4)": "infinite",
								"tokenBalance(bytes32,uint256)": "infinite",
								"transferDai(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 142,
									"end": 2264,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 142,
									"end": 2264,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 142,
									"end": 2264,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 373,
									"end": 631,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 631,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 373,
									"end": 631,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 373,
									"end": 631,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 373,
									"end": 631,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 373,
									"end": 631,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 373,
									"end": 631,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 373,
									"end": 631,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 373,
									"end": 631,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 497,
									"end": 501,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 484,
									"end": 487,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 484,
									"end": 487,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 484,
									"end": 502,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 484,
									"end": 502,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 484,
									"end": 502,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 484,
									"end": 502,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 484,
									"end": 502,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 484,
									"end": 502,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 484,
									"end": 502,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 484,
									"end": 502,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 484,
									"end": 502,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 484,
									"end": 502,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 484,
									"end": 502,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 484,
									"end": 502,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 484,
									"end": 502,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 484,
									"end": 502,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 484,
									"end": 502,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 484,
									"end": 502,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 484,
									"end": 502,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 484,
									"end": 502,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 551,
									"end": 569,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 512,
									"end": 529,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 512,
									"end": 529,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 512,
									"end": 570,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 512,
									"end": 570,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 512,
									"end": 570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 512,
									"end": 570,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 512,
									"end": 570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 512,
									"end": 570,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 512,
									"end": 570,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 512,
									"end": 570,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 512,
									"end": 570,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 512,
									"end": 570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 512,
									"end": 570,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 512,
									"end": 570,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 512,
									"end": 570,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 512,
									"end": 570,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 512,
									"end": 570,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 512,
									"end": 570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 512,
									"end": 570,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 512,
									"end": 570,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 589,
									"end": 596,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 580,
									"end": 586,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 580,
									"end": 586,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 580,
									"end": 596,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 580,
									"end": 596,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 580,
									"end": 596,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 580,
									"end": 596,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 580,
									"end": 596,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 580,
									"end": 596,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 580,
									"end": 596,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 580,
									"end": 596,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 580,
									"end": 596,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 580,
									"end": 596,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 580,
									"end": 596,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 580,
									"end": 596,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 580,
									"end": 596,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 580,
									"end": 596,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 580,
									"end": 596,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 580,
									"end": 596,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 580,
									"end": 596,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 580,
									"end": 596,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 614,
									"end": 624,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 606,
									"end": 611,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 606,
									"end": 611,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 606,
									"end": 624,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 606,
									"end": 624,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 606,
									"end": 624,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 606,
									"end": 624,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 606,
									"end": 624,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 606,
									"end": 624,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 606,
									"end": 624,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 606,
									"end": 624,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 606,
									"end": 624,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 606,
									"end": 624,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 606,
									"end": 624,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 606,
									"end": 624,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 606,
									"end": 624,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 606,
									"end": 624,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 606,
									"end": 624,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 606,
									"end": 624,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 606,
									"end": 624,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 606,
									"end": 624,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 373,
									"end": 631,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 142,
									"end": 2264,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 142,
									"end": 2264,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 819,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 819,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 244,
									"end": 250,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 258,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 260,
									"end": 266,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 311,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 297,
									"end": 306,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 288,
									"end": 295,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 284,
									"end": 307,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 280,
									"end": 312,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 277,
									"end": 396,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 277,
									"end": 396,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 277,
									"end": 396,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 315,
									"end": 394,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 315,
									"end": 394,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 277,
									"end": 396,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 277,
									"end": 396,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 435,
									"end": 436,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 516,
									"end": 523,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 507,
									"end": 513,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 496,
									"end": 505,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 492,
									"end": 514,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 460,
									"end": 524,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 460,
									"end": 524,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 450,
									"end": 524,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 450,
									"end": 524,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 406,
									"end": 534,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 573,
									"end": 575,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 655,
									"end": 662,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 646,
									"end": 652,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 635,
									"end": 644,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 631,
									"end": 653,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 599,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 599,
									"end": 663,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 589,
									"end": 663,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 589,
									"end": 663,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 544,
									"end": 673,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 712,
									"end": 714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 794,
									"end": 801,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 785,
									"end": 791,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 774,
									"end": 783,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 770,
									"end": 792,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 738,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 738,
									"end": 802,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 728,
									"end": 802,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 728,
									"end": 802,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 683,
									"end": 812,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 819,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 819,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 819,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 819,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 819,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 819,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 943,
									"end": 950,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 990,
									"end": 995,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 972,
									"end": 996,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 972,
									"end": 996,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 961,
									"end": 996,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 961,
									"end": 996,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 906,
									"end": 1002,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1045,
									"end": 1052,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1085,
									"end": 1127,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1078,
									"end": 1083,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1074,
									"end": 1128,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1063,
									"end": 1128,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1063,
									"end": 1128,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1008,
									"end": 1134,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1263,
									"end": 1380,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 1263,
									"end": 1380,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1372,
									"end": 1373,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1369,
									"end": 1370,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1362,
									"end": 1374,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1477,
									"end": 1482,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1459,
									"end": 1483,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1452,
									"end": 1457,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1449,
									"end": 1484,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1498,
									"end": 1499,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1495,
									"end": 1496,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1488,
									"end": 1500,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1439,
									"end": 1502,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1386,
									"end": 1508,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 142,
									"end": 2264,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 142,
									"end": 2264,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 142,
									"end": 2264,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 142,
									"end": 2264,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 142,
									"end": 2264,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 142,
									"end": 2264,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 2264,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 142,
									"end": 2264,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 142,
									"end": 2264,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220781c2eecc6384d28056facaed7ab45a210cd215908a5b3e42f8c885e2490e22e64736f6c63430008070033",
									".code": [
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH",
											"source": 0,
											"value": "ED0F7940"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH",
											"source": 0,
											"value": "F48B39DD"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH",
											"source": 0,
											"value": "614F0869"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH",
											"source": 0,
											"value": "7DC0D1D0"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 142,
											"end": 2264,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 637,
											"end": 887,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 637,
											"end": 887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 637,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 637,
											"end": 887,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 637,
											"end": 887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 637,
											"end": 887,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 637,
											"end": 887,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 637,
											"end": 887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 637,
											"end": 887,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 637,
											"end": 887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 637,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 637,
											"end": 887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 637,
											"end": 887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 637,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 637,
											"end": 887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 637,
											"end": 887,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 637,
											"end": 887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 637,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 637,
											"end": 887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 637,
											"end": 887,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 637,
											"end": 887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 637,
											"end": 887,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 259,
											"end": 280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 259,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 259,
											"end": 280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 259,
											"end": 280,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 259,
											"end": 280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 259,
											"end": 280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 259,
											"end": 280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 259,
											"end": 280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 259,
											"end": 280,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 259,
											"end": 280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 259,
											"end": 280,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1879,
											"end": 1883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1955,
											"end": 1987,
											"name": "PUSH",
											"source": 0,
											"value": "A38D190D714A56FF654D9F781D45DD8C6A178A7FA8CCD7800FDF6083324EEE9C"
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2046,
											"name": "PUSH",
											"source": 0,
											"value": "3DAE9A2B9BB26E63369B9A9E31C9ECBD73AC8F4903CBDEA29DB3655A87331E2B"
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 2057,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2073,
											"end": 2079,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2068,
											"end": 2233,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2068,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2089,
											"end": 2115,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2085,
											"end": 2086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2115,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2233,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2068,
											"end": 2233,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2175,
											"end": 2176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2155,
											"end": 2177,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2140,
											"end": 2177,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2140,
											"end": 2177,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2140,
											"end": 2177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2140,
											"end": 2151,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2140,
											"end": 2177,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2140,
											"end": 2177,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2140,
											"end": 2177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2140,
											"end": 2177,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2136,
											"end": 2223,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2136,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2136,
											"end": 2223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2204,
											"end": 2208,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2136,
											"end": 2223,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2136,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2117,
											"end": 2120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2068,
											"end": 2233,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2233,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2068,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2068,
											"end": 2233,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2243,
											"end": 2255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2243,
											"end": 2255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1800,
											"end": 2262,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 637,
											"end": 887,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 637,
											"end": 887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 748,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 765,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 748,
											"end": 765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 748,
											"end": 765,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 765,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 748,
											"end": 765,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 748,
											"end": 765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 748,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 748,
											"end": 781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 748,
											"end": 781,
											"name": "PUSH",
											"source": 0,
											"value": "1B7037C"
										},
										{
											"begin": 795,
											"end": 798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 795,
											"end": 798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 795,
											"end": 798,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 795,
											"end": 798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 795,
											"end": 798,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 795,
											"end": 798,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 795,
											"end": 798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 795,
											"end": 798,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 795,
											"end": 798,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 795,
											"end": 798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 820,
											"end": 821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 812,
											"end": 822,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 836,
											"end": 847,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 861,
											"end": 870,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 861,
											"end": 870,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 748,
											"end": 880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 748,
											"end": 880,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 748,
											"end": 880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 748,
											"end": 880,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 748,
											"end": 880,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 748,
											"end": 880,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 748,
											"end": 880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 880,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 748,
											"end": 880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 748,
											"end": 880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 748,
											"end": 880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 880,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 748,
											"end": 880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 748,
											"end": 880,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 637,
											"end": 887,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 259,
											"end": 280,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 259,
											"end": 280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 259,
											"end": 280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 259,
											"end": 280,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 259,
											"end": 280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 259,
											"end": 280,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1261,
											"end": 1267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1341,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1359,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1376,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1376,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1390,
											"end": 1396,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1390,
											"end": 1396,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1414,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1414,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1303,
											"end": 1424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1425,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1293,
											"end": 1425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1425,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1279,
											"end": 1426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1433,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 286,
											"end": 347,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1624,
											"end": 1630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1704,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1718,
											"end": 1722,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1736,
											"end": 1738,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1757,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1775,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1775,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1666,
											"end": 1785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1656,
											"end": 1786,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1656,
											"end": 1786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1656,
											"end": 1786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1656,
											"end": 1786,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1656,
											"end": 1786,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1656,
											"end": 1786,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1787,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1439,
											"end": 1794,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 980,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 980,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 980,
											"end": 985,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 980,
											"end": 985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 980,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 980,
											"end": 985,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 980,
											"end": 985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 980,
											"end": 985,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 980,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 980,
											"end": 985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 966,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 966,
											"end": 985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 966,
											"end": 985,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 966,
											"end": 985,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 966,
											"end": 985,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 958,
											"end": 1000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1013,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1013,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1010,
											"end": 1013,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1013,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1013,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1010,
											"end": 1013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1010,
											"end": 1022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1022,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1023,
											"end": 1025,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1033,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 893,
											"end": 1041,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 169,
											"end": 737,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 169,
											"end": 737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 242,
											"end": 250,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 258,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 302,
											"end": 305,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 295,
											"end": 299,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 287,
											"end": 293,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 283,
											"end": 300,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 279,
											"end": 306,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 269,
											"end": 391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 269,
											"end": 391,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 310,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 310,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 310,
											"end": 389,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 310,
											"end": 389,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 310,
											"end": 389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 269,
											"end": 391,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 269,
											"end": 391,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 423,
											"end": 429,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 410,
											"end": 430,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 400,
											"end": 430,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 400,
											"end": 430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 453,
											"end": 471,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 445,
											"end": 451,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 442,
											"end": 472,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 439,
											"end": 556,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 439,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 439,
											"end": 556,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 475,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 475,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 475,
											"end": 554,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 475,
											"end": 554,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 475,
											"end": 554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 439,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 439,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 589,
											"end": 593,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 581,
											"end": 587,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 577,
											"end": 594,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 565,
											"end": 594,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 565,
											"end": 594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 643,
											"end": 646,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 635,
											"end": 639,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 633,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 623,
											"end": 640,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 613,
											"end": 621,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 609,
											"end": 641,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 606,
											"end": 647,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 603,
											"end": 731,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 603,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 603,
											"end": 731,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 650,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 650,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 650,
											"end": 729,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 650,
											"end": 729,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 650,
											"end": 729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 603,
											"end": 731,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 603,
											"end": 731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 169,
											"end": 737,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 169,
											"end": 737,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 169,
											"end": 737,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 169,
											"end": 737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 169,
											"end": 737,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 169,
											"end": 737,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 743,
											"end": 880,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 743,
											"end": 880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 797,
											"end": 802,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 822,
											"end": 835,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 813,
											"end": 835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 813,
											"end": 835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 844,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 868,
											"end": 873,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 844,
											"end": 874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 844,
											"end": 874,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 844,
											"end": 874,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 844,
											"end": 874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 743,
											"end": 880,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 743,
											"end": 880,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 743,
											"end": 880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 743,
											"end": 880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 743,
											"end": 880,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 886,
											"end": 1025,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 886,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 932,
											"end": 937,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 976,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 957,
											"end": 977,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 948,
											"end": 977,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 948,
											"end": 977,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 1013,
											"end": 1018,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 986,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 986,
											"end": 1019,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 986,
											"end": 1019,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 986,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 886,
											"end": 1025,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 886,
											"end": 1025,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 886,
											"end": 1025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 886,
											"end": 1025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 886,
											"end": 1025,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1031,
											"end": 1168,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1031,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1081,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1121,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1092,
											"end": 1121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1156,
											"end": 1161,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1130,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1130,
											"end": 1162,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1130,
											"end": 1162,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1130,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1168,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1168,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1168,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1168,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1168,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1187,
											"end": 1739,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1187,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1244,
											"end": 1252,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1260,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1304,
											"end": 1307,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1297,
											"end": 1301,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1289,
											"end": 1295,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1302,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1281,
											"end": 1308,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1393,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1271,
											"end": 1393,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1312,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1312,
											"end": 1391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1312,
											"end": 1391,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1312,
											"end": 1391,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1312,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1393,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1271,
											"end": 1393,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1425,
											"end": 1431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1412,
											"end": 1432,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1432,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1432,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1455,
											"end": 1473,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1444,
											"end": 1474,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1558,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1441,
											"end": 1558,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1477,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1477,
											"end": 1556,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1477,
											"end": 1556,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1477,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1558,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 1441,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1595,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1583,
											"end": 1589,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1579,
											"end": 1596,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1567,
											"end": 1596,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1567,
											"end": 1596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1648,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1637,
											"end": 1641,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1629,
											"end": 1635,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1625,
											"end": 1642,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1623,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1643,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1649,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1733,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1605,
											"end": 1733,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1652,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 1652,
											"end": 1731,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1652,
											"end": 1731,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1652,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1733,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1605,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1187,
											"end": 1739,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1187,
											"end": 1739,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1187,
											"end": 1739,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1187,
											"end": 1739,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1187,
											"end": 1739,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1187,
											"end": 1739,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1745,
											"end": 1884,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1745,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1835,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 1836,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1845,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1872,
											"end": 1877,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1845,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1845,
											"end": 1878,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1845,
											"end": 1878,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1845,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1884,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1884,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1884,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1884,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1884,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1890,
											"end": 3459,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1890,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2050,
											"end": 2056,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2064,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2072,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2080,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2082,
											"end": 2088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2090,
											"end": 2096,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2155,
											"end": 2158,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 2143,
											"end": 2152,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2134,
											"end": 2141,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2153,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2126,
											"end": 2159,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2243,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2123,
											"end": 2243,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2162,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2162,
											"end": 2241,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2162,
											"end": 2241,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2162,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2123,
											"end": 2243,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2123,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2352,
											"end": 2359,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 2343,
											"end": 2349,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 2328,
											"end": 2350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2307,
											"end": 2360,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2307,
											"end": 2360,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2307,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2360,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2409,
											"end": 2411,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 2471,
											"end": 2477,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2469,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 2456,
											"end": 2478,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2435,
											"end": 2488,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2435,
											"end": 2488,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2435,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2488,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 2425,
											"end": 2488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2380,
											"end": 2498,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2567,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2554,
											"end": 2563,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2537,
											"end": 2569,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2596,
											"end": 2614,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2588,
											"end": 2594,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2585,
											"end": 2615,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2582,
											"end": 2699,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2582,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2582,
											"end": 2699,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2618,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2618,
											"end": 2697,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2618,
											"end": 2697,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2618,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2582,
											"end": 2699,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 2582,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2731,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2803,
											"end": 2810,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2800,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2801,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2731,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2731,
											"end": 2811,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2731,
											"end": 2811,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2731,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2811,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2811,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2890,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2877,
											"end": 2886,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2873,
											"end": 2891,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2860,
											"end": 2892,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2911,
											"end": 2917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2908,
											"end": 2938,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 3022,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2905,
											"end": 3022,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2941,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2941,
											"end": 3020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2941,
											"end": 3020,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2941,
											"end": 3020,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2941,
											"end": 3020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 3022,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2905,
											"end": 3022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3126,
											"end": 3133,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 3117,
											"end": 3123,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3106,
											"end": 3115,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 3102,
											"end": 3124,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3054,
											"end": 3134,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3054,
											"end": 3134,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3054,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3036,
											"end": 3134,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3036,
											"end": 3134,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3036,
											"end": 3134,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 3036,
											"end": 3134,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2831,
											"end": 3144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3214,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3200,
											"end": 3209,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3196,
											"end": 3215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3216,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3243,
											"end": 3261,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3235,
											"end": 3241,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3232,
											"end": 3262,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3229,
											"end": 3346,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3229,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3229,
											"end": 3346,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3265,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3229,
											"end": 3346,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3229,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3434,
											"end": 3441,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 3425,
											"end": 3431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "DUP13",
											"source": 5
										},
										{
											"begin": 3410,
											"end": 3432,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3378,
											"end": 3442,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3378,
											"end": 3442,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3378,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3442,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3442,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3442,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3442,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3154,
											"end": 3452,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 3459,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 3459,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 3459,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 3459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 3459,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 3459,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 3459,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 3459,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 3459,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 3459,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 3459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 3459,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 4574,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3465,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3571,
											"end": 3577,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3585,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3587,
											"end": 3593,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3601,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3603,
											"end": 3609,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3611,
											"end": 3617,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3663,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 3648,
											"end": 3657,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3639,
											"end": 3646,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3635,
											"end": 3658,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3631,
											"end": 3664,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3628,
											"end": 3748,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3628,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3628,
											"end": 3748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3667,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3667,
											"end": 3746,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3667,
											"end": 3746,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 3667,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3628,
											"end": 3748,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 3628,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3787,
											"end": 3788,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3812,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3857,
											"end": 3864,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3848,
											"end": 3854,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3837,
											"end": 3846,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3833,
											"end": 3855,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3812,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3812,
											"end": 3865,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3812,
											"end": 3865,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3812,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3802,
											"end": 3865,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 3802,
											"end": 3865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3758,
											"end": 3875,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3914,
											"end": 3916,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3940,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3985,
											"end": 3992,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3976,
											"end": 3982,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3965,
											"end": 3974,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3983,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3940,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3940,
											"end": 3993,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3940,
											"end": 3993,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3940,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 3993,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3930,
											"end": 3993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3885,
											"end": 4003,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4042,
											"end": 4044,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4068,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4113,
											"end": 4120,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4110,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4093,
											"end": 4102,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 4089,
											"end": 4111,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4068,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4068,
											"end": 4121,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4068,
											"end": 4121,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 4068,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4058,
											"end": 4121,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4058,
											"end": 4121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4013,
											"end": 4131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4170,
											"end": 4172,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4196,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4241,
											"end": 4248,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 4232,
											"end": 4238,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4221,
											"end": 4230,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4239,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4196,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4196,
											"end": 4249,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4196,
											"end": 4249,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4196,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4249,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4186,
											"end": 4249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4141,
											"end": 4259,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4326,
											"end": 4329,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4315,
											"end": 4324,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 4311,
											"end": 4330,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4298,
											"end": 4331,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 4358,
											"end": 4376,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4350,
											"end": 4356,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4347,
											"end": 4377,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4461,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 4344,
											"end": 4461,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4380,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 4380,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4380,
											"end": 4459,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4380,
											"end": 4459,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 4380,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4461,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 4344,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4493,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4549,
											"end": 4556,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 4540,
											"end": 4546,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4529,
											"end": 4538,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 4525,
											"end": 4547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4493,
											"end": 4557,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4493,
											"end": 4557,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4557,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4493,
											"end": 4557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4475,
											"end": 4557,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4475,
											"end": 4557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4475,
											"end": 4557,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4475,
											"end": 4557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4269,
											"end": 4567,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 4574,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 4574,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 4574,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 4574,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 4574,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 4574,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 4574,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 4574,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 4574,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4580,
											"end": 5054,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4580,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4656,
											"end": 4662,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4707,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4693,
											"end": 4702,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4684,
											"end": 4691,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4703,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4676,
											"end": 4708,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4792,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4673,
											"end": 4792,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4711,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4711,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4711,
											"end": 4790,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4711,
											"end": 4790,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 4711,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4673,
											"end": 4792,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 4673,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4831,
											"end": 4832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4856,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4901,
											"end": 4908,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4898,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4881,
											"end": 4890,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 4877,
											"end": 4899,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4856,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4856,
											"end": 4909,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4856,
											"end": 4909,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4856,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4846,
											"end": 4909,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4846,
											"end": 4909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4802,
											"end": 4919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4958,
											"end": 4960,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4984,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5029,
											"end": 5036,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5020,
											"end": 5026,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5018,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5027,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4984,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4984,
											"end": 5037,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4984,
											"end": 5037,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4984,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 5037,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4974,
											"end": 5037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4929,
											"end": 5047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5054,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5054,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5054,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5054,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5054,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4580,
											"end": 5054,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5060,
											"end": 5405,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 5060,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5127,
											"end": 5133,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5176,
											"end": 5178,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5164,
											"end": 5173,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5155,
											"end": 5162,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5151,
											"end": 5174,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5147,
											"end": 5179,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5144,
											"end": 5263,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5144,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 5144,
											"end": 5263,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 5182,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5182,
											"end": 5261,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5182,
											"end": 5261,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 5182,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5144,
											"end": 5263,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 5144,
											"end": 5263,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5302,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5380,
											"end": 5387,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5371,
											"end": 5377,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5360,
											"end": 5369,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5356,
											"end": 5378,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5327,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 5327,
											"end": 5388,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5327,
											"end": 5388,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5327,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5388,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5388,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5273,
											"end": 5398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5060,
											"end": 5405,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5060,
											"end": 5405,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5060,
											"end": 5405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5060,
											"end": 5405,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5060,
											"end": 5405,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5411,
											"end": 6115,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 5411,
											"end": 6115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5506,
											"end": 5512,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5514,
											"end": 5520,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5522,
											"end": 5528,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5559,
											"end": 5568,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5550,
											"end": 5557,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5546,
											"end": 5569,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5574,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5539,
											"end": 5658,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5539,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5539,
											"end": 5658,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5577,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5577,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5577,
											"end": 5656,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5577,
											"end": 5656,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5577,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5539,
											"end": 5658,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5539,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 5767,
											"end": 5774,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5758,
											"end": 5764,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5747,
											"end": 5756,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5743,
											"end": 5765,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 5722,
											"end": 5775,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5722,
											"end": 5775,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 5722,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5712,
											"end": 5775,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5712,
											"end": 5775,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5668,
											"end": 5785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5852,
											"end": 5854,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5841,
											"end": 5850,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5837,
											"end": 5855,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5824,
											"end": 5856,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5875,
											"end": 5881,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5872,
											"end": 5902,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5986,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 5869,
											"end": 5986,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5905,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 5905,
											"end": 5984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5905,
											"end": 5984,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5905,
											"end": 5984,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 5905,
											"end": 5984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5869,
											"end": 5986,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 5869,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6018,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 6090,
											"end": 6097,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6081,
											"end": 6087,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 6066,
											"end": 6088,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6018,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 6018,
											"end": 6098,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6018,
											"end": 6098,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 6018,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6000,
											"end": 6098,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6000,
											"end": 6098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6000,
											"end": 6098,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6000,
											"end": 6098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5795,
											"end": 6108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5411,
											"end": 6115,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5411,
											"end": 6115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5411,
											"end": 6115,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5411,
											"end": 6115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5411,
											"end": 6115,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5411,
											"end": 6115,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6121,
											"end": 6595,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 6121,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6189,
											"end": 6195,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6203,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6246,
											"end": 6248,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6234,
											"end": 6243,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6232,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6221,
											"end": 6244,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6217,
											"end": 6249,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6333,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 6214,
											"end": 6333,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6252,
											"end": 6331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 6252,
											"end": 6331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 6252,
											"end": 6331,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6252,
											"end": 6331,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 6252,
											"end": 6331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6214,
											"end": 6333,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 6214,
											"end": 6333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6372,
											"end": 6373,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 6442,
											"end": 6449,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6433,
											"end": 6439,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6422,
											"end": 6431,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6418,
											"end": 6440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6397,
											"end": 6450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 6397,
											"end": 6450,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6397,
											"end": 6450,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 6397,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6387,
											"end": 6450,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6387,
											"end": 6450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6343,
											"end": 6460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6499,
											"end": 6501,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6525,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 6570,
											"end": 6577,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6561,
											"end": 6567,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6550,
											"end": 6559,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6546,
											"end": 6568,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6525,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 6525,
											"end": 6578,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6525,
											"end": 6578,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 6525,
											"end": 6578,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6515,
											"end": 6578,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6515,
											"end": 6578,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6470,
											"end": 6588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6121,
											"end": 6595,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6121,
											"end": 6595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6121,
											"end": 6595,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6121,
											"end": 6595,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6121,
											"end": 6595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6121,
											"end": 6595,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6601,
											"end": 6928,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 6601,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6659,
											"end": 6665,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6708,
											"end": 6710,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6696,
											"end": 6705,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6687,
											"end": 6694,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6683,
											"end": 6706,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6679,
											"end": 6711,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 6676,
											"end": 6795,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6676,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 6676,
											"end": 6795,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6714,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 6714,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 6714,
											"end": 6793,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6714,
											"end": 6793,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 6714,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6676,
											"end": 6795,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 6676,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6834,
											"end": 6835,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6859,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6903,
											"end": 6910,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6894,
											"end": 6900,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6883,
											"end": 6892,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6879,
											"end": 6901,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6859,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 6859,
											"end": 6911,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6859,
											"end": 6911,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6859,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6849,
											"end": 6911,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6849,
											"end": 6911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6805,
											"end": 6921,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6601,
											"end": 6928,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6601,
											"end": 6928,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6601,
											"end": 6928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6601,
											"end": 6928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6601,
											"end": 6928,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6934,
											"end": 7052,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 6934,
											"end": 7052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 7039,
											"end": 7044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 7021,
											"end": 7045,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7019,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7009,
											"end": 7046,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6934,
											"end": 7052,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6934,
											"end": 7052,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6934,
											"end": 7052,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7058,
											"end": 7215,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 7058,
											"end": 7215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7163,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 7183,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 7201,
											"end": 7206,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7183,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 7183,
											"end": 7207,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7183,
											"end": 7207,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 7183,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7163,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 7163,
											"end": 7208,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7163,
											"end": 7208,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 7163,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7158,
											"end": 7161,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7151,
											"end": 7209,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7058,
											"end": 7215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7058,
											"end": 7215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7058,
											"end": 7215,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7251,
											"end": 7788,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 7251,
											"end": 7788,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7379,
											"end": 7382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7400,
											"end": 7486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 7479,
											"end": 7485,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7474,
											"end": 7477,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7400,
											"end": 7486,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 7400,
											"end": 7486,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7400,
											"end": 7486,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 7400,
											"end": 7486,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7393,
											"end": 7486,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7393,
											"end": 7486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7510,
											"end": 7576,
											"name": "PUSH",
											"source": 5,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7502,
											"end": 7508,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7499,
											"end": 7577,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7661,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 7496,
											"end": 7661,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7580,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 7580,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 7580,
											"end": 7659,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7580,
											"end": 7659,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 7580,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7496,
											"end": 7661,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 7496,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7692,
											"end": 7696,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7684,
											"end": 7690,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7680,
											"end": 7697,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 7670,
											"end": 7697,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7670,
											"end": 7697,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7707,
											"end": 7750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 7743,
											"end": 7749,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 7741,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7731,
											"end": 7736,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7707,
											"end": 7750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 7707,
											"end": 7750,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7707,
											"end": 7750,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 7707,
											"end": 7750,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7775,
											"end": 7781,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7770,
											"end": 7773,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7766,
											"end": 7782,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7759,
											"end": 7782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7759,
											"end": 7782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7251,
											"end": 7788,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7251,
											"end": 7788,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7251,
											"end": 7788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7251,
											"end": 7788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7251,
											"end": 7788,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7251,
											"end": 7788,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7824,
											"end": 8397,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 7824,
											"end": 8397,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7970,
											"end": 7973,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7991,
											"end": 8095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 8088,
											"end": 8094,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8083,
											"end": 8086,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7991,
											"end": 8095,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 7991,
											"end": 8095,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7991,
											"end": 8095,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 7991,
											"end": 8095,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8095,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8095,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8119,
											"end": 8185,
											"name": "PUSH",
											"source": 5,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8111,
											"end": 8117,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8108,
											"end": 8186,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8105,
											"end": 8270,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8105,
											"end": 8270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 8105,
											"end": 8270,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8189,
											"end": 8268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 8189,
											"end": 8268,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 8189,
											"end": 8268,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8189,
											"end": 8268,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 8189,
											"end": 8268,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8105,
											"end": 8270,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 8105,
											"end": 8270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8301,
											"end": 8305,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8293,
											"end": 8299,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8289,
											"end": 8306,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 8279,
											"end": 8306,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8279,
											"end": 8306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8316,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 8352,
											"end": 8358,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8347,
											"end": 8350,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8340,
											"end": 8345,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8316,
											"end": 8359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 8316,
											"end": 8359,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8316,
											"end": 8359,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 8316,
											"end": 8359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8384,
											"end": 8390,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8379,
											"end": 8382,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8375,
											"end": 8391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8368,
											"end": 8391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8368,
											"end": 8391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7824,
											"end": 8397,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7824,
											"end": 8397,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7824,
											"end": 8397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7824,
											"end": 8397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7824,
											"end": 8397,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7824,
											"end": 8397,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8403,
											"end": 8512,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 8403,
											"end": 8512,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8484,
											"end": 8505,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 8499,
											"end": 8504,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8484,
											"end": 8505,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 8484,
											"end": 8505,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8484,
											"end": 8505,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 8484,
											"end": 8505,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8479,
											"end": 8482,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8472,
											"end": 8506,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8403,
											"end": 8512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8403,
											"end": 8512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8403,
											"end": 8512,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8518,
											"end": 8636,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 8518,
											"end": 8636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8605,
											"end": 8629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 8623,
											"end": 8628,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8605,
											"end": 8629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 8605,
											"end": 8629,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8605,
											"end": 8629,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 8605,
											"end": 8629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8600,
											"end": 8603,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8593,
											"end": 8630,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8518,
											"end": 8636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8518,
											"end": 8636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8518,
											"end": 8636,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8642,
											"end": 8757,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 8642,
											"end": 8757,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8727,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 8744,
											"end": 8749,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8727,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 8727,
											"end": 8750,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8727,
											"end": 8750,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 8727,
											"end": 8750,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8722,
											"end": 8725,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8715,
											"end": 8751,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8642,
											"end": 8757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8642,
											"end": 8757,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8642,
											"end": 8757,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8785,
											"end": 9099,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 8785,
											"end": 9099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8899,
											"end": 8902,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8920,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 9001,
											"end": 9007,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8996,
											"end": 8999,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8920,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 8920,
											"end": 9008,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8920,
											"end": 9008,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 8920,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8913,
											"end": 9008,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8913,
											"end": 9008,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9018,
											"end": 9061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 9054,
											"end": 9060,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9049,
											"end": 9052,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9042,
											"end": 9047,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9018,
											"end": 9061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 9018,
											"end": 9061,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9018,
											"end": 9061,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 9018,
											"end": 9061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9086,
											"end": 9092,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9081,
											"end": 9084,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9077,
											"end": 9093,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9070,
											"end": 9093,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9070,
											"end": 9093,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8785,
											"end": 9099,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8785,
											"end": 9099,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8785,
											"end": 9099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8785,
											"end": 9099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8785,
											"end": 9099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8785,
											"end": 9099,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9105,
											"end": 9264,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 9105,
											"end": 9264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9206,
											"end": 9257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 9251,
											"end": 9256,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9206,
											"end": 9257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 9206,
											"end": 9257,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9206,
											"end": 9257,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 9206,
											"end": 9257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9201,
											"end": 9204,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9194,
											"end": 9258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9105,
											"end": 9264,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9105,
											"end": 9264,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9105,
											"end": 9264,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9270,
											"end": 9636,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 9270,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9412,
											"end": 9415,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9433,
											"end": 9500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 9492,
											"end": 9495,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9433,
											"end": 9500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 9433,
											"end": 9500,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9433,
											"end": 9500,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 9433,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9500,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9509,
											"end": 9602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 9598,
											"end": 9601,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9509,
											"end": 9602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 9509,
											"end": 9602,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9509,
											"end": 9602,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 9509,
											"end": 9602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9627,
											"end": 9629,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9622,
											"end": 9625,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9618,
											"end": 9630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9611,
											"end": 9630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9611,
											"end": 9630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9270,
											"end": 9636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9270,
											"end": 9636,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9270,
											"end": 9636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9270,
											"end": 9636,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9642,
											"end": 9760,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 9642,
											"end": 9760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9729,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 9747,
											"end": 9752,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9729,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 9729,
											"end": 9753,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9729,
											"end": 9753,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 9729,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9724,
											"end": 9727,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9717,
											"end": 9754,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9642,
											"end": 9760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9642,
											"end": 9760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9642,
											"end": 9760,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9766,
											"end": 9923,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 9766,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9871,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 9891,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 9909,
											"end": 9914,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 9891,
											"end": 9915,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9891,
											"end": 9915,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 9891,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9871,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 9871,
											"end": 9916,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9871,
											"end": 9916,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 9871,
											"end": 9916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9866,
											"end": 9869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9859,
											"end": 9917,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9766,
											"end": 9923,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9766,
											"end": 9923,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9766,
											"end": 9923,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9929,
											"end": 10982,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 9929,
											"end": 10982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10301,
											"end": 10304,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10316,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 10387,
											"end": 10390,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10378,
											"end": 10384,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 10316,
											"end": 10391,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 10316,
											"end": 10391,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10316,
											"end": 10391,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 10316,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10416,
											"end": 10418,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 10411,
											"end": 10414,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10407,
											"end": 10419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10400,
											"end": 10419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10400,
											"end": 10419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10429,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 10500,
											"end": 10503,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10491,
											"end": 10497,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 10429,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 10429,
											"end": 10504,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10429,
											"end": 10504,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 10429,
											"end": 10504,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10529,
											"end": 10531,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 10524,
											"end": 10527,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10520,
											"end": 10532,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10513,
											"end": 10532,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10513,
											"end": 10532,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10549,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 10680,
											"end": 10683,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10671,
											"end": 10677,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 10663,
											"end": 10669,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 10549,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 10549,
											"end": 10684,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10549,
											"end": 10684,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 10549,
											"end": 10684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10542,
											"end": 10684,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10542,
											"end": 10684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10701,
											"end": 10836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 10832,
											"end": 10835,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10823,
											"end": 10829,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10815,
											"end": 10821,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 10701,
											"end": 10836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 10701,
											"end": 10836,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10701,
											"end": 10836,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 10701,
											"end": 10836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10694,
											"end": 10836,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10694,
											"end": 10836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10853,
											"end": 10956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 10952,
											"end": 10955,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10943,
											"end": 10949,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10935,
											"end": 10941,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10853,
											"end": 10956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 10853,
											"end": 10956,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10853,
											"end": 10956,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 10853,
											"end": 10956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10846,
											"end": 10956,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10846,
											"end": 10956,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10973,
											"end": 10976,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10966,
											"end": 10976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10966,
											"end": 10976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 10982,
											"name": "SWAP10",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 10982,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 10982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 10982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 10982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 10982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 10982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 10982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 10982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 10982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 10982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 10982,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10988,
											"end": 11843,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 10988,
											"end": 11843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11240,
											"end": 11243,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11255,
											"end": 11330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 11326,
											"end": 11329,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11317,
											"end": 11323,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 11255,
											"end": 11330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 11255,
											"end": 11330,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11255,
											"end": 11330,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 11255,
											"end": 11330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11355,
											"end": 11357,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 11350,
											"end": 11353,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11346,
											"end": 11358,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11339,
											"end": 11358,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11339,
											"end": 11358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11368,
											"end": 11443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 11439,
											"end": 11442,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11430,
											"end": 11436,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 11368,
											"end": 11443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 11368,
											"end": 11443,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11368,
											"end": 11443,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 11368,
											"end": 11443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11468,
											"end": 11470,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 11463,
											"end": 11466,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11459,
											"end": 11471,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11452,
											"end": 11471,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11452,
											"end": 11471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11481,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 11552,
											"end": 11555,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11543,
											"end": 11549,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 11481,
											"end": 11556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 11481,
											"end": 11556,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11481,
											"end": 11556,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 11481,
											"end": 11556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11581,
											"end": 11583,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11576,
											"end": 11579,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11572,
											"end": 11584,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11565,
											"end": 11584,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11565,
											"end": 11584,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11594,
											"end": 11669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 11665,
											"end": 11668,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11656,
											"end": 11662,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 11594,
											"end": 11669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 11594,
											"end": 11669,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11594,
											"end": 11669,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 11594,
											"end": 11669,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11694,
											"end": 11696,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11689,
											"end": 11692,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11685,
											"end": 11697,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11678,
											"end": 11697,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11714,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 11813,
											"end": 11816,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11804,
											"end": 11810,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11796,
											"end": 11802,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 11714,
											"end": 11817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 11714,
											"end": 11817,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11714,
											"end": 11817,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 11714,
											"end": 11817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11707,
											"end": 11817,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11707,
											"end": 11817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11834,
											"end": 11837,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11827,
											"end": 11837,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11827,
											"end": 11837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10988,
											"end": 11843,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 10988,
											"end": 11843,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 10988,
											"end": 11843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10988,
											"end": 11843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10988,
											"end": 11843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10988,
											"end": 11843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10988,
											"end": 11843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10988,
											"end": 11843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10988,
											"end": 11843,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10988,
											"end": 11843,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11849,
											"end": 12071,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 11849,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11942,
											"end": 11946,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11980,
											"end": 11982,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11969,
											"end": 11978,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11965,
											"end": 11983,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11957,
											"end": 11983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11957,
											"end": 11983,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11993,
											"end": 12064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 12061,
											"end": 12062,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12050,
											"end": 12059,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12046,
											"end": 12063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12037,
											"end": 12043,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11993,
											"end": 12064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 11993,
											"end": 12064,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11993,
											"end": 12064,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 11993,
											"end": 12064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11849,
											"end": 12071,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11849,
											"end": 12071,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11849,
											"end": 12071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11849,
											"end": 12071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11849,
											"end": 12071,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12077,
											"end": 12409,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 12077,
											"end": 12409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12198,
											"end": 12202,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12236,
											"end": 12238,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 12225,
											"end": 12234,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12221,
											"end": 12239,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12213,
											"end": 12239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12213,
											"end": 12239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12249,
											"end": 12320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 12317,
											"end": 12318,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12306,
											"end": 12315,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12302,
											"end": 12319,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12293,
											"end": 12299,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 12249,
											"end": 12320,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 12249,
											"end": 12320,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12249,
											"end": 12320,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 12249,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12330,
											"end": 12402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 12398,
											"end": 12400,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12387,
											"end": 12396,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12383,
											"end": 12401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12374,
											"end": 12380,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12330,
											"end": 12402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 12330,
											"end": 12402,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12330,
											"end": 12402,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 12330,
											"end": 12402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12077,
											"end": 12409,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12077,
											"end": 12409,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12077,
											"end": 12409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12077,
											"end": 12409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12077,
											"end": 12409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12077,
											"end": 12409,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12415,
											"end": 12625,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 12415,
											"end": 12625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12502,
											"end": 12506,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12540,
											"end": 12542,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12529,
											"end": 12538,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12525,
											"end": 12543,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12517,
											"end": 12543,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12517,
											"end": 12543,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12553,
											"end": 12618,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 12615,
											"end": 12616,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12604,
											"end": 12613,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12600,
											"end": 12617,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12591,
											"end": 12597,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12553,
											"end": 12618,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 12553,
											"end": 12618,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12553,
											"end": 12618,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 12553,
											"end": 12618,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12415,
											"end": 12625,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12415,
											"end": 12625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12415,
											"end": 12625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12415,
											"end": 12625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12415,
											"end": 12625,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12631,
											"end": 12849,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 12631,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12722,
											"end": 12726,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12760,
											"end": 12762,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12749,
											"end": 12758,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12745,
											"end": 12763,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12737,
											"end": 12763,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12737,
											"end": 12763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12773,
											"end": 12842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 12839,
											"end": 12840,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12828,
											"end": 12837,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12824,
											"end": 12841,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12815,
											"end": 12821,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12773,
											"end": 12842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 12773,
											"end": 12842,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12773,
											"end": 12842,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 12773,
											"end": 12842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12631,
											"end": 12849,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12631,
											"end": 12849,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12631,
											"end": 12849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12631,
											"end": 12849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12631,
											"end": 12849,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12855,
											"end": 13607,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 12855,
											"end": 13607,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13106,
											"end": 13110,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13144,
											"end": 13147,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 13133,
											"end": 13142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13129,
											"end": 13148,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13121,
											"end": 13148,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13121,
											"end": 13148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13158,
											"end": 13243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 13240,
											"end": 13241,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13229,
											"end": 13238,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13225,
											"end": 13242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13216,
											"end": 13222,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 13158,
											"end": 13243,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 13158,
											"end": 13243,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13158,
											"end": 13243,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 13158,
											"end": 13243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13253,
											"end": 13325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 13321,
											"end": 13323,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13310,
											"end": 13319,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13306,
											"end": 13324,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13297,
											"end": 13303,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 13253,
											"end": 13325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 13253,
											"end": 13325,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13253,
											"end": 13325,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 13253,
											"end": 13325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13335,
											"end": 13407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 13403,
											"end": 13405,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13392,
											"end": 13401,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13388,
											"end": 13406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13379,
											"end": 13385,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 13335,
											"end": 13407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 13335,
											"end": 13407,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13335,
											"end": 13407,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 13335,
											"end": 13407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13454,
											"end": 13463,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13448,
											"end": 13452,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13444,
											"end": 13464,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13439,
											"end": 13441,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 13428,
											"end": 13437,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13424,
											"end": 13442,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13417,
											"end": 13465,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13482,
											"end": 13600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 13595,
											"end": 13599,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13586,
											"end": 13592,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13578,
											"end": 13584,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 13482,
											"end": 13600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 13482,
											"end": 13600,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13482,
											"end": 13600,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 13482,
											"end": 13600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13474,
											"end": 13600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13474,
											"end": 13600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12855,
											"end": 13607,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 12855,
											"end": 13607,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 12855,
											"end": 13607,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12855,
											"end": 13607,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12855,
											"end": 13607,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12855,
											"end": 13607,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12855,
											"end": 13607,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12855,
											"end": 13607,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12855,
											"end": 13607,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13613,
											"end": 14032,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 13613,
											"end": 14032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13779,
											"end": 13783,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13817,
											"end": 13819,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13806,
											"end": 13815,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13802,
											"end": 13820,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13794,
											"end": 13820,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13794,
											"end": 13820,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13866,
											"end": 13875,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13860,
											"end": 13864,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13856,
											"end": 13876,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 13852,
											"end": 13853,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13841,
											"end": 13850,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13837,
											"end": 13854,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13830,
											"end": 13877,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13894,
											"end": 14025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 14020,
											"end": 14024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13894,
											"end": 14025,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 13894,
											"end": 14025,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13894,
											"end": 14025,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 13894,
											"end": 14025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13886,
											"end": 14025,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13886,
											"end": 14025,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13613,
											"end": 14032,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13613,
											"end": 14032,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13613,
											"end": 14032,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13613,
											"end": 14032,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14038,
											"end": 14260,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 14038,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14131,
											"end": 14135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14169,
											"end": 14171,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14158,
											"end": 14167,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14154,
											"end": 14172,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14146,
											"end": 14172,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14146,
											"end": 14172,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14182,
											"end": 14253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 14250,
											"end": 14251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14239,
											"end": 14248,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14235,
											"end": 14252,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14226,
											"end": 14232,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14182,
											"end": 14253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 14182,
											"end": 14253,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 14182,
											"end": 14253,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 14182,
											"end": 14253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14038,
											"end": 14260,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14038,
											"end": 14260,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14038,
											"end": 14260,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14038,
											"end": 14260,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14038,
											"end": 14260,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14347,
											"end": 14531,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 14347,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14446,
											"end": 14457,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14480,
											"end": 14486,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14475,
											"end": 14478,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14468,
											"end": 14487,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14515,
											"end": 14518,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14511,
											"end": 14525,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14496,
											"end": 14525,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14496,
											"end": 14525,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14347,
											"end": 14531,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14347,
											"end": 14531,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14347,
											"end": 14531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14347,
											"end": 14531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14347,
											"end": 14531,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14537,
											"end": 14700,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 14537,
											"end": 14700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14654,
											"end": 14665,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14691,
											"end": 14694,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14676,
											"end": 14694,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14676,
											"end": 14694,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14700,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14700,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14537,
											"end": 14700,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14706,
											"end": 14853,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 14706,
											"end": 14853,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14807,
											"end": 14818,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14844,
											"end": 14847,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14829,
											"end": 14847,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14829,
											"end": 14847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14706,
											"end": 14853,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14706,
											"end": 14853,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14706,
											"end": 14853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14706,
											"end": 14853,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14706,
											"end": 14853,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14859,
											"end": 15028,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 14859,
											"end": 15028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14943,
											"end": 14954,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14977,
											"end": 14983,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14972,
											"end": 14975,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14965,
											"end": 14984,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15017,
											"end": 15021,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15012,
											"end": 15015,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15008,
											"end": 15022,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14993,
											"end": 15022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14993,
											"end": 15022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14859,
											"end": 15028,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14859,
											"end": 15028,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14859,
											"end": 15028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14859,
											"end": 15028,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14859,
											"end": 15028,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15034,
											"end": 15130,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 15034,
											"end": 15130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15071,
											"end": 15078,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15100,
											"end": 15124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 15118,
											"end": 15123,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15100,
											"end": 15124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 15100,
											"end": 15124,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15100,
											"end": 15124,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 15100,
											"end": 15124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15124,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15089,
											"end": 15124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15034,
											"end": 15130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15034,
											"end": 15130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15034,
											"end": 15130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15034,
											"end": 15130,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15136,
											"end": 15226,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 15136,
											"end": 15226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15170,
											"end": 15177,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15213,
											"end": 15218,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15206,
											"end": 15219,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15199,
											"end": 15220,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15220,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15188,
											"end": 15220,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15136,
											"end": 15226,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15136,
											"end": 15226,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15136,
											"end": 15226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15136,
											"end": 15226,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15232,
											"end": 15309,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 15232,
											"end": 15309,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15269,
											"end": 15276,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15298,
											"end": 15303,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15287,
											"end": 15303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15287,
											"end": 15303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15232,
											"end": 15309,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15232,
											"end": 15309,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15232,
											"end": 15309,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15232,
											"end": 15309,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15315,
											"end": 15464,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 15315,
											"end": 15464,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15351,
											"end": 15358,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15391,
											"end": 15457,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15384,
											"end": 15389,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15380,
											"end": 15458,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15369,
											"end": 15458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15369,
											"end": 15458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15315,
											"end": 15464,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15315,
											"end": 15464,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15315,
											"end": 15464,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15315,
											"end": 15464,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15470,
											"end": 15596,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 15470,
											"end": 15596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15507,
											"end": 15514,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15547,
											"end": 15589,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15540,
											"end": 15545,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15536,
											"end": 15590,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15525,
											"end": 15590,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15525,
											"end": 15590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15470,
											"end": 15596,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15470,
											"end": 15596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15470,
											"end": 15596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15470,
											"end": 15596,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15602,
											"end": 15679,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 15602,
											"end": 15679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15639,
											"end": 15646,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15668,
											"end": 15673,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15657,
											"end": 15673,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15602,
											"end": 15679,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15602,
											"end": 15679,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15602,
											"end": 15679,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15602,
											"end": 15679,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15685,
											"end": 15825,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 15685,
											"end": 15825,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15749,
											"end": 15758,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15782,
											"end": 15819,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15782,
											"end": 15819,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 15782,
											"end": 15819,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15782,
											"end": 15819,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 15782,
											"end": 15819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15769,
											"end": 15819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15769,
											"end": 15819,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15685,
											"end": 15825,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15685,
											"end": 15825,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15685,
											"end": 15825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15685,
											"end": 15825,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15831,
											"end": 15957,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 15831,
											"end": 15957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15881,
											"end": 15890,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15914,
											"end": 15951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 15945,
											"end": 15950,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15914,
											"end": 15951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 15914,
											"end": 15951,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15914,
											"end": 15951,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 15914,
											"end": 15951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15901,
											"end": 15951,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15901,
											"end": 15951,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15831,
											"end": 15957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15831,
											"end": 15957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15831,
											"end": 15957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15831,
											"end": 15957,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15963,
											"end": 16076,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 15963,
											"end": 16076,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16013,
											"end": 16022,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16046,
											"end": 16070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 16064,
											"end": 16069,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16046,
											"end": 16070,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 16046,
											"end": 16070,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16046,
											"end": 16070,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 16046,
											"end": 16070,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16033,
											"end": 16070,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16033,
											"end": 16070,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15963,
											"end": 16076,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15963,
											"end": 16076,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15963,
											"end": 16076,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15963,
											"end": 16076,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16082,
											"end": 16236,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 16082,
											"end": 16236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16166,
											"end": 16172,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16161,
											"end": 16164,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16156,
											"end": 16159,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16143,
											"end": 16173,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 16228,
											"end": 16229,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16219,
											"end": 16225,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16214,
											"end": 16217,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16210,
											"end": 16226,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16203,
											"end": 16230,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16082,
											"end": 16236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16082,
											"end": 16236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16082,
											"end": 16236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16082,
											"end": 16236,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16242,
											"end": 16475,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 16242,
											"end": 16475,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16281,
											"end": 16284,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16304,
											"end": 16328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 16322,
											"end": 16327,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16304,
											"end": 16328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 16304,
											"end": 16328,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16304,
											"end": 16328,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 16304,
											"end": 16328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16295,
											"end": 16328,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16295,
											"end": 16328,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16350,
											"end": 16416,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16343,
											"end": 16348,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16340,
											"end": 16417,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 16337,
											"end": 16440,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16337,
											"end": 16440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 16337,
											"end": 16440,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16420,
											"end": 16438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 16420,
											"end": 16438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 16420,
											"end": 16438,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16420,
											"end": 16438,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 16420,
											"end": 16438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16337,
											"end": 16440,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 16337,
											"end": 16440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16467,
											"end": 16468,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 16460,
											"end": 16465,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16456,
											"end": 16469,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16449,
											"end": 16469,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16449,
											"end": 16469,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16242,
											"end": 16475,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16242,
											"end": 16475,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16242,
											"end": 16475,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16242,
											"end": 16475,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16481,
											"end": 16581,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 16481,
											"end": 16581,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16520,
											"end": 16527,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16549,
											"end": 16575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 16569,
											"end": 16574,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16549,
											"end": 16575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 16549,
											"end": 16575,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16549,
											"end": 16575,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 16549,
											"end": 16575,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16538,
											"end": 16575,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16538,
											"end": 16575,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16481,
											"end": 16581,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16481,
											"end": 16581,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16481,
											"end": 16581,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16481,
											"end": 16581,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16587,
											"end": 16681,
											"name": "tag",
											"source": 5,
											"value": "291"
										},
										{
											"begin": 16587,
											"end": 16681,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16626,
											"end": 16633,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16655,
											"end": 16675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 16669,
											"end": 16674,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16655,
											"end": 16675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 16655,
											"end": 16675,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 16655,
											"end": 16675,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 16655,
											"end": 16675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16644,
											"end": 16675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16644,
											"end": 16675,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16587,
											"end": 16681,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16587,
											"end": 16681,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16587,
											"end": 16681,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16587,
											"end": 16681,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16687,
											"end": 16766,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 16687,
											"end": 16766,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16726,
											"end": 16733,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16755,
											"end": 16760,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16744,
											"end": 16760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16744,
											"end": 16760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16687,
											"end": 16766,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16687,
											"end": 16766,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16687,
											"end": 16766,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16687,
											"end": 16766,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 16772,
											"end": 16952,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 16772,
											"end": 16952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16820,
											"end": 16897,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16817,
											"end": 16818,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16810,
											"end": 16898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16917,
											"end": 16921,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 16914,
											"end": 16915,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16907,
											"end": 16922,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16941,
											"end": 16945,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 16938,
											"end": 16939,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16931,
											"end": 16946,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16958,
											"end": 17138,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 16958,
											"end": 17138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17006,
											"end": 17083,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17003,
											"end": 17004,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16996,
											"end": 17084,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17103,
											"end": 17107,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 17100,
											"end": 17101,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 17093,
											"end": 17108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17127,
											"end": 17131,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 17124,
											"end": 17125,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17117,
											"end": 17132,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17144,
											"end": 17261,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 17144,
											"end": 17261,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17253,
											"end": 17254,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17250,
											"end": 17251,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17243,
											"end": 17255,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17267,
											"end": 17384,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 17267,
											"end": 17384,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17376,
											"end": 17377,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17373,
											"end": 17374,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17366,
											"end": 17378,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17390,
											"end": 17507,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 17390,
											"end": 17507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17499,
											"end": 17500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17496,
											"end": 17497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17489,
											"end": 17501,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17513,
											"end": 17630,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 17513,
											"end": 17630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17622,
											"end": 17623,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17619,
											"end": 17620,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17612,
											"end": 17624,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17636,
											"end": 17753,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 17636,
											"end": 17753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17745,
											"end": 17746,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17742,
											"end": 17743,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17735,
											"end": 17747,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17759,
											"end": 17876,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 17759,
											"end": 17876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17868,
											"end": 17869,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17865,
											"end": 17866,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 17858,
											"end": 17870,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 17882,
											"end": 17976,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 17882,
											"end": 17976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 17915,
											"end": 17923,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 17963,
											"end": 17968,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 17959,
											"end": 17961,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 17955,
											"end": 17969,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 17934,
											"end": 17969,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17934,
											"end": 17969,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17882,
											"end": 17976,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 17882,
											"end": 17976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 17882,
											"end": 17976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17882,
											"end": 17976,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 17982,
											"end": 18142,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 17982,
											"end": 18142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18122,
											"end": 18134,
											"name": "PUSH",
											"source": 5,
											"value": "6F6E6C792061646D696E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 18118,
											"end": 18119,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18110,
											"end": 18116,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 18106,
											"end": 18120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 18099,
											"end": 18135,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17982,
											"end": 18142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 17982,
											"end": 18142,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18148,
											"end": 18270,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 18148,
											"end": 18270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18221,
											"end": 18245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 18239,
											"end": 18244,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18221,
											"end": 18245,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 18221,
											"end": 18245,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 18221,
											"end": 18245,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 18221,
											"end": 18245,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18214,
											"end": 18219,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18211,
											"end": 18246,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 18201,
											"end": 18264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 18201,
											"end": 18264,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 18260,
											"end": 18261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18257,
											"end": 18258,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 18250,
											"end": 18262,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 18201,
											"end": 18264,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 18201,
											"end": 18264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18148,
											"end": 18270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18148,
											"end": 18270,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18276,
											"end": 18392,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 18276,
											"end": 18392,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18346,
											"end": 18367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 18361,
											"end": 18366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18346,
											"end": 18367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 18346,
											"end": 18367,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 18346,
											"end": 18367,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 18346,
											"end": 18367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18339,
											"end": 18344,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18336,
											"end": 18368,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 18326,
											"end": 18386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 18326,
											"end": 18386,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 18382,
											"end": 18383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18379,
											"end": 18380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 18372,
											"end": 18384,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 18326,
											"end": 18386,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 18326,
											"end": 18386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18276,
											"end": 18392,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18276,
											"end": 18392,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18398,
											"end": 18520,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 18398,
											"end": 18520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18471,
											"end": 18495,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 18489,
											"end": 18494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18471,
											"end": 18495,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 18471,
											"end": 18495,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 18471,
											"end": 18495,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 18471,
											"end": 18495,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18464,
											"end": 18469,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18461,
											"end": 18496,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 18451,
											"end": 18514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 18451,
											"end": 18514,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 18510,
											"end": 18511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18507,
											"end": 18508,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 18500,
											"end": 18512,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 18451,
											"end": 18514,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 18451,
											"end": 18514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18398,
											"end": 18520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18398,
											"end": 18520,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18526,
											"end": 18646,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 18526,
											"end": 18646,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18598,
											"end": 18621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 18615,
											"end": 18620,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18598,
											"end": 18621,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 18598,
											"end": 18621,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 18598,
											"end": 18621,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 18598,
											"end": 18621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18591,
											"end": 18596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18588,
											"end": 18622,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 18578,
											"end": 18640,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 18578,
											"end": 18640,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 18636,
											"end": 18637,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18633,
											"end": 18634,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 18626,
											"end": 18638,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 18578,
											"end": 18640,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 18578,
											"end": 18640,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18526,
											"end": 18646,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18526,
											"end": 18646,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 18652,
											"end": 18774,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 18652,
											"end": 18774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18725,
											"end": 18749,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 18743,
											"end": 18748,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18725,
											"end": 18749,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 18725,
											"end": 18749,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 18725,
											"end": 18749,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 18725,
											"end": 18749,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18718,
											"end": 18723,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 18715,
											"end": 18750,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 18705,
											"end": 18768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 18705,
											"end": 18768,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 18764,
											"end": 18765,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 18761,
											"end": 18762,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 18754,
											"end": 18766,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 18705,
											"end": 18768,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 18705,
											"end": 18768,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 18652,
											"end": 18774,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 18652,
											"end": 18774,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"oracle()": "7dc0d1d0",
							"redeemTokens(bytes32,uint256[])": "614f0869",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenBalance(bytes32,uint256)": "ed0f7940",
							"transferDai(address,uint256)": "f48b39dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dai\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_conditionalTokens\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"conditionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"indexSets\",\"type\":\"uint256[]\"}],\"name\":\"redeemTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferDai\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ConditionalTokensWallet.sol\":\"ConditionalTokensWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ConditionalTokensWallet.sol\":{\"keccak256\":\"0x3c7e0dccd6f0c5caee798af2f3bdbe8a3df7e5e4de4c0be07206db0925434183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b960778a6a511649073a82960324afca6d3efd2dd8a422a6a94367dcfb8c4c7\",\"dweb:/ipfs/QmegTRZ35fiX1BgRGvwCZE2nN1JK6Ykc6Ged25KCkj4Vg9\"]},\"contracts/IConditionalTokens.sol\":{\"keccak256\":\"0xaf7e7f73dde88da561032287ca969b63b7b48e2b125c1e308187c7723862381f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc1f39bf03c5259df9b6dd81be4c23eb9299a0c724e07ece0c7be1eeeef5afe2\",\"dweb:/ipfs/QmY4yManudynzUMB79M8A32KJSJvtZit5392kVaPeb6EZF\"]},\"contracts/IERC1155.sol\":{\"keccak256\":\"0x3745e88ed4f1ceecfe9034abeb99774f0034140257312ddc8f32ee343316ae2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec75cccc1785b1524b0f49bb972de8c209e43fa6ceffd715c53cc280a46a81b3\",\"dweb:/ipfs/QmXKRs1jwjGWE91rdZktTYbBV38cAuSsPzkwrrAEAqUecj\"]},\"contracts/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 9,
								"contract": "contracts/ConditionalTokensWallet.sol:ConditionalTokensWallet",
								"label": "dai",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)571"
							},
							{
								"astId": 12,
								"contract": "contracts/ConditionalTokensWallet.sol:ConditionalTokensWallet",
								"label": "conditionalTokens",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IConditionalTokens)321"
							},
							{
								"astId": 14,
								"contract": "contracts/ConditionalTokensWallet.sol:ConditionalTokensWallet",
								"label": "oracle",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 20,
								"contract": "contracts/ConditionalTokensWallet.sol:ConditionalTokensWallet",
								"label": "tokenBalance",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 22,
								"contract": "contracts/ConditionalTokensWallet.sol:ConditionalTokensWallet",
								"label": "admin",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IConditionalTokens)321": {
								"encoding": "inplace",
								"label": "contract IConditionalTokens",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)571": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_bytes32,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IConditionalTokens.sol": {
				"IConditionalTokens": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "parentCollectionId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "conditionId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "indexSet",
									"type": "uint256"
								}
							],
							"name": "getCollectionId",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "questionId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "getOutcomeSlotCount",
									"type": "uint256"
								}
							],
							"name": "getConditionId",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "conditionId",
									"type": "bytes32"
								}
							],
							"name": "getOutcomeSlotCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "collateralToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "collectionId",
									"type": "bytes32"
								}
							],
							"name": "getPositionId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "collateralToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "parentCollectionId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "conditionId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "partition",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mergePositions",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "questionId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "outcome",
									"type": "uint256"
								}
							],
							"name": "prepareCondition",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "collateralToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "parentCollectionId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "conditionId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "indexSets",
									"type": "uint256[]"
								}
							],
							"name": "redeemPositions",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "questionId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "payouts",
									"type": "uint256[]"
								}
							],
							"name": "reportPayouts",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "collateralToken",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "parentCollectionId",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "conditionId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256[]",
									"name": "partition",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "splitPostion",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getCollectionId(bytes32,bytes32,uint256)": "856296f7",
							"getConditionId(address,bytes32,uint256)": "852c6ae2",
							"getOutcomeSlotCount(bytes32)": "d42dc0c2",
							"getPositionId(address,bytes32)": "39dd7530",
							"mergePositions(address,bytes32,bytes32,uint256[],uint256)": "9e7212ad",
							"prepareCondition(address,bytes32,uint256)": "d96ee754",
							"redeemPositions(address,bytes32,bytes32,uint256[])": "01b7037c",
							"reportPayouts(bytes32,uint256[])": "c49298ac",
							"splitPostion(address,bytes32,bytes32,uint256[],uint256)": "6fb4be62",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"parentCollectionId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"conditionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"indexSet\",\"type\":\"uint256\"}],\"name\":\"getCollectionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"questionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"getOutcomeSlotCount\",\"type\":\"uint256\"}],\"name\":\"getConditionId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"conditionId\",\"type\":\"bytes32\"}],\"name\":\"getOutcomeSlotCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"collectionId\",\"type\":\"bytes32\"}],\"name\":\"getPositionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"parentCollectionId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"conditionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"partition\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mergePositions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"questionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"outcome\",\"type\":\"uint256\"}],\"name\":\"prepareCondition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"parentCollectionId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"conditionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"indexSets\",\"type\":\"uint256[]\"}],\"name\":\"redeemPositions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"questionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"payouts\",\"type\":\"uint256[]\"}],\"name\":\"reportPayouts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"collateralToken\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"parentCollectionId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"conditionId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"partition\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"splitPostion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IConditionalTokens.sol\":\"IConditionalTokens\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IConditionalTokens.sol\":{\"keccak256\":\"0xaf7e7f73dde88da561032287ca969b63b7b48e2b125c1e308187c7723862381f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc1f39bf03c5259df9b6dd81be4c23eb9299a0c724e07ece0c7be1eeeef5afe2\",\"dweb:/ipfs/QmY4yManudynzUMB79M8A32KJSJvtZit5392kVaPeb6EZF\"]},\"contracts/IERC1155.sol\":{\"keccak256\":\"0x3745e88ed4f1ceecfe9034abeb99774f0034140257312ddc8f32ee343316ae2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec75cccc1785b1524b0f49bb972de8c209e43fa6ceffd715c53cc280a46a81b3\",\"dweb:/ipfs/QmXKRs1jwjGWE91rdZktTYbBV38cAuSsPzkwrrAEAqUecj\"]},\"contracts/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC1155.sol\":{\"keccak256\":\"0x3745e88ed4f1ceecfe9034abeb99774f0034140257312ddc8f32ee343316ae2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec75cccc1785b1524b0f49bb972de8c209e43fa6ceffd715c53cc280a46a81b3\",\"dweb:/ipfs/QmXKRs1jwjGWE91rdZktTYbBV38cAuSsPzkwrrAEAqUecj\"]},\"contracts/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC1155.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC1155.sol\":{\"keccak256\":\"0x3745e88ed4f1ceecfe9034abeb99774f0034140257312ddc8f32ee343316ae2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec75cccc1785b1524b0f49bb972de8c209e43fa6ceffd715c53cc280a46a81b3\",\"dweb:/ipfs/QmXKRs1jwjGWE91rdZktTYbBV38cAuSsPzkwrrAEAqUecj\"]},\"contracts/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"keccak256\":\"0xc1290610aec42ee2c1df247fb5ee2d82e976178fb906f701d34f6b656f1b052e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07025f5f368b572cdcb785e42d142cdbb10acaa0d0168d288d30c25201a7a289\",\"dweb:/ipfs/QmeSy22Ruxo56qH4GkUJU4SEEv6PsAnzny8MpMGnPkXksc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/ConditionalTokensWallet.sol": {
				"ast": {
					"absolutePath": "contracts/ConditionalTokensWallet.sol",
					"exportedSymbols": {
						"ConditionalTokensWallet": [
							215
						],
						"IConditionalTokens": [
							321
						],
						"IERC1155": [
							443
						],
						"IERC1155Receiver": [
							481
						],
						"IERC165": [
							493
						],
						"IERC20": [
							571
						]
					},
					"id": 216,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 216,
							"sourceUnit": 572,
							"src": "58:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 216,
							"sourceUnit": 482,
							"src": "81:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IConditionalTokens.sol",
							"file": "./IConditionalTokens.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 216,
							"sourceUnit": 322,
							"src": "106:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "IERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 481,
										"src": "178:16:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "178:16:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 215,
							"linearizedBaseContracts": [
								215,
								481,
								493
							],
							"name": "ConditionalTokensWallet",
							"nameLocation": "151:23:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "dai",
									"nameLocation": "208:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 215,
									"src": "201:10:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$571",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 8,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 7,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 571,
											"src": "201:6:0"
										},
										"referencedDeclaration": 571,
										"src": "201:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$571",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "conditionalTokens",
									"nameLocation": "236:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 215,
									"src": "217:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IConditionalTokens_$321",
										"typeString": "contract IConditionalTokens"
									},
									"typeName": {
										"id": 11,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 10,
											"name": "IConditionalTokens",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 321,
											"src": "217:18:0"
										},
										"referencedDeclaration": 321,
										"src": "217:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IConditionalTokens_$321",
											"typeString": "contract IConditionalTokens"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "7dc0d1d0",
									"id": 14,
									"mutability": "mutable",
									"name": "oracle",
									"nameLocation": "274:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 215,
									"src": "259:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 13,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "259:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ed0f7940",
									"id": 20,
									"mutability": "mutable",
									"name": "tokenBalance",
									"nameLocation": "335:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 215,
									"src": "286:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(bytes32 => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 19,
										"keyType": {
											"id": 15,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "294:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "286:41:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(bytes32 => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 18,
											"keyType": {
												"id": 16,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "313:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "305:21:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 17,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "321:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "361:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 215,
									"src": "353:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 21,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "353:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "474:157:0",
										"statements": [
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 31,
														"name": "dai",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "484:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$571",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 33,
																"name": "_dai",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "497:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 32,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "490:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$571_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "490:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$571",
															"typeString": "contract IERC20"
														}
													},
													"src": "484:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$571",
														"typeString": "contract IERC20"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "484:18:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 37,
														"name": "conditionalTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "512:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IConditionalTokens_$321",
															"typeString": "contract IConditionalTokens"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 39,
																"name": "_conditionalTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "551:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 38,
															"name": "IConditionalTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "532:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IConditionalTokens_$321_$",
																"typeString": "type(contract IConditionalTokens)"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "532:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IConditionalTokens_$321",
															"typeString": "contract IConditionalTokens"
														}
													},
													"src": "512:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IConditionalTokens_$321",
														"typeString": "contract IConditionalTokens"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "512:58:0"
											},
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "580:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "_oracle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "589:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "580:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "580:16:0"
											},
											{
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "606:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 48,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "614:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "614:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "606:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "606:18:0"
											}
										]
									},
									"id": 53,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "_dai",
												"nameLocation": "402:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "394:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "394:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "_conditionalTokens",
												"nameLocation": "424:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "416:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 25,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "416:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "_oracle",
												"nameLocation": "460:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "452:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "384:89:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "474:0:0"
									},
									"scope": 215,
									"src": "373:258:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "738:149:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 64,
															"name": "dai",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "795:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$571",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 67,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "820:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "812:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 65,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "812:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "812:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 69,
															"name": "conditionId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "836:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 70,
															"name": "indexSets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "861:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$571",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"expression": {
															"id": 61,
															"name": "conditionalTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "748:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IConditionalTokens_$321",
																"typeString": "contract IConditionalTokens"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "redeemPositions",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 281,
														"src": "748:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$571_$_t_bytes32_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes32,bytes32,uint256[] memory) external"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:132:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "748:132:0"
											}
										]
									},
									"functionSelector": "614f0869",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "redeemTokens",
									"nameLocation": "646:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "conditionId",
												"nameLocation": "676:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "668:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 54,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "indexSets",
												"nameLocation": "713:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "697:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 56,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "697:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 57,
													"nodeType": "ArrayTypeName",
													"src": "697:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:70:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "738:0:0"
									},
									"scope": 215,
									"src": "637:250:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 96,
										"nodeType": "Block",
										"src": "948:93:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 82,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "966:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "966:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 84,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "980:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "966:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c792061646d696e",
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "987:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
																"typeString": "literal_string \"only admin\""
															},
															"value": "only admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4c3bff520fca58d3c363bf7fe83287c6073e8e959454880d918888619284457d",
																"typeString": "literal_string \"only admin\""
															}
														],
														"id": 81,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "958:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "958:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "958:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 92,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "1023:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 93,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "1027:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 89,
															"name": "dai",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "1010:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$571",
																"typeString": "contract IERC20"
															}
														},
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 538,
														"src": "1010:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "1010:24:0"
											}
										]
									},
									"functionSelector": "f48b39dd",
									"id": 97,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferDai",
									"nameLocation": "902:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "922:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "914:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "931:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "926:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "926:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:25:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "948:0:0"
									},
									"scope": 215,
									"src": "893:148:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										480
									],
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1269:164:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 120,
																			"name": "operator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 99,
																			"src": "1333:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 121,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 101,
																			"src": "1355:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 122,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 104,
																			"src": "1373:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		{
																			"id": 123,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 107,
																			"src": "1390:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		{
																			"id": 124,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 109,
																			"src": "1410:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			},
																			{
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			},
																			{
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		],
																		"expression": {
																			"id": 118,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1303:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "1303:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1303:121:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 117,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1293:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1293:132:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1286:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": {
															"id": 115,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "1286:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1286:140:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 114,
												"id": 128,
												"nodeType": "Return",
												"src": "1279:147:0"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "1056:22:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 111,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1243:8:0"
									},
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1096:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1088:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1122:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1114:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "1155:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1136:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 102,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1136:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 103,
													"nodeType": "ArrayTypeName",
													"src": "1136:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "1187:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1168:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 105,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1168:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 106,
													"nodeType": "ArrayTypeName",
													"src": "1168:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1218:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1203:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 108,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1203:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:150:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "1261:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 112,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:8:0"
									},
									"scope": 215,
									"src": "1047:386:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										462
									],
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "1632:162:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 151,
																			"name": "operator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 132,
																			"src": "1696:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 152,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 134,
																			"src": "1718:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 153,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 136,
																			"src": "1736:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 154,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 138,
																			"src": "1752:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 155,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 140,
																			"src": "1771:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		],
																		"expression": {
																			"id": 149,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "1666:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodePacked",
																		"nodeType": "MemberAccess",
																		"src": "1666:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function () pure returns (bytes memory)"
																		}
																	},
																	"id": 156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1666:119:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 148,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "1656:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1656:130:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1649:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes4_$",
															"typeString": "type(bytes4)"
														},
														"typeName": {
															"id": 146,
															"name": "bytes4",
															"nodeType": "ElementaryTypeName",
															"src": "1649:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1649:138:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 145,
												"id": 159,
												"nodeType": "Return",
												"src": "1642:145:0"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1448:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 142,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1606:8:0"
									},
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1483:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1475:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1509:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1501:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1531:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1523:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1523:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1543:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1581:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1566:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 139,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1566:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1465:126:0"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1624:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 143,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1624:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1623:8:0"
									},
									"scope": 215,
									"src": "1439:355:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										492
									],
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "1885:377:0",
										"statements": [
											{
												"assignments": [
													174
												],
												"declarations": [
													{
														"constant": false,
														"id": 174,
														"mutability": "mutable",
														"name": "supportedInterfaces",
														"nameLocation": "1912:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 213,
														"src": "1895:36:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes4_$2_memory_ptr",
															"typeString": "bytes4[2]"
														},
														"typeName": {
															"baseType": {
																"id": 172,
																"name": "bytes4",
																"nodeType": "ElementaryTypeName",
																"src": "1895:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 173,
															"length": {
																"hexValue": "32",
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1902:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "ArrayTypeName",
															"src": "1895:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$2_storage_ptr",
																"typeString": "bytes4[2]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 188,
												"initialValue": {
													"components": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "6f6e4552433131353552656365697665642829",
																			"id": 178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1965:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_a38d190d714a56ff654d9f781d45dd8c6a178a7fa8ccd7800fdf6083324eee9c",
																				"typeString": "literal_string \"onERC1155Received()\""
																			},
																			"value": "onERC1155Received()"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_a38d190d714a56ff654d9f781d45dd8c6a178a7fa8ccd7800fdf6083324eee9c",
																				"typeString": "literal_string \"onERC1155Received()\""
																			}
																		],
																		"id": 177,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "1955:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1955:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1948:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes4_$",
																	"typeString": "type(bytes4)"
																},
																"typeName": {
																	"id": 175,
																	"name": "bytes4",
																	"nodeType": "ElementaryTypeName",
																	"src": "1948:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1948:40:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "6f6e45524331313535426174636852656365697665642829",
																			"id": 184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2019:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_3dae9a2b9bb26e63369b9a9e31c9ecbd73ac8f4903cbdea29db3655a87331e2b",
																				"typeString": "literal_string \"onERC1155BatchReceived()\""
																			},
																			"value": "onERC1155BatchReceived()"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_3dae9a2b9bb26e63369b9a9e31c9ecbd73ac8f4903cbdea29db3655a87331e2b",
																				"typeString": "literal_string \"onERC1155BatchReceived()\""
																			}
																		],
																		"id": 183,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "2009:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2009:37:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2002:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes4_$",
																	"typeString": "type(bytes4)"
																},
																"typeName": {
																	"id": 181,
																	"name": "bytes4",
																	"nodeType": "ElementaryTypeName",
																	"src": "2002:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2002:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"id": 187,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1934:123:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes4_$2_memory_ptr",
														"typeString": "bytes4[2] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1895:162:0"
											},
											{
												"body": {
													"id": 209,
													"nodeType": "Block",
													"src": "2122:111:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																},
																"id": 204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 200,
																	"name": "interfaceId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "2140:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"baseExpression": {
																		"id": 201,
																		"name": "supportedInterfaces",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "2155:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes4_$2_memory_ptr",
																			"typeString": "bytes4[2] memory"
																		}
																	},
																	"id": 203,
																	"indexExpression": {
																		"id": 202,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 190,
																		"src": "2175:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2155:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																"src": "2140:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 208,
															"nodeType": "IfStatement",
															"src": "2136:87:0",
															"trueBody": {
																"id": 207,
																"nodeType": "Block",
																"src": "2179:44:0",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2204:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 168,
																		"id": 206,
																		"nodeType": "Return",
																		"src": "2197:11:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 193,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "2085:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 194,
															"name": "supportedInterfaces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "2089:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes4_$2_memory_ptr",
																"typeString": "bytes4[2] memory"
															}
														},
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2089:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2085:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 210,
												"initializationExpression": {
													"assignments": [
														190
													],
													"declarations": [
														{
															"constant": false,
															"id": 190,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2078:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 210,
															"src": "2073:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 189,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "2073:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 192,
													"initialValue": {
														"hexValue": "30",
														"id": 191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2082:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2073:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2117:3:0",
														"subExpression": {
															"id": 197,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "2117:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 199,
													"nodeType": "ExpressionStatement",
													"src": "2117:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2068:165:0"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2250:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 168,
												"id": 212,
												"nodeType": "Return",
												"src": "2243:12:0"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1809:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 165,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1861:8:0"
									},
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1834:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1827:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 162,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1827:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:20:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "1879:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1879:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1878:6:0"
									},
									"scope": 215,
									"src": "1800:462:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 216,
							"src": "142:2122:0",
							"usedErrors": []
						}
					],
					"src": "33:2231:0"
				},
				"id": 0
			},
			"contracts/IConditionalTokens.sol": {
				"ast": {
					"absolutePath": "contracts/IConditionalTokens.sol",
					"exportedSymbols": {
						"IConditionalTokens": [
							321
						],
						"IERC1155": [
							443
						],
						"IERC1155Receiver": [
							481
						],
						"IERC165": [
							493
						],
						"IERC20": [
							571
						]
					},
					"id": 322,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 217,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contracts/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 218,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 322,
							"sourceUnit": 572,
							"src": "58:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IERC1155.sol",
							"file": "./IERC1155.sol",
							"id": 219,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 322,
							"sourceUnit": 482,
							"src": "81:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 220,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 493,
										"src": "147:7:1"
									},
									"id": 221,
									"nodeType": "InheritanceSpecifier",
									"src": "147:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 321,
							"linearizedBaseContracts": [
								321,
								493
							],
							"name": "IConditionalTokens",
							"nameLocation": "125:18:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d96ee754",
									"id": 230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "prepareCondition",
									"nameLocation": "170:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "195:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "187:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "187:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "questionId",
												"nameLocation": "211:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "203:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 224,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "203:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "outcome",
												"nameLocation": "228:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "223:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "223:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "186:50:1"
									},
									"returnParameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "253:0:1"
									},
									"scope": 321,
									"src": "161:93:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "c49298ac",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reportPayouts",
									"nameLocation": "269:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "questionId",
												"nameLocation": "291:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "283:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 231,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "283:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "payouts",
												"nameLocation": "319:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "303:23:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 233,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "303:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 234,
													"nodeType": "ArrayTypeName",
													"src": "303:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "282:45:1"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "344:0:1"
									},
									"scope": 321,
									"src": "260:85:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "6fb4be62",
									"id": 253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "splitPostion",
									"nameLocation": "360:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "collateralToken",
												"nameLocation": "389:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "382:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$571",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 240,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 239,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 571,
														"src": "382:6:1"
													},
													"referencedDeclaration": 571,
													"src": "382:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$571",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "parentCollectionId",
												"nameLocation": "422:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "414:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "conditionId",
												"nameLocation": "458:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "450:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 244,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "partition",
												"nameLocation": "495:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "479:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 246,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "479:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 247,
													"nodeType": "ArrayTypeName",
													"src": "479:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "519:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "514:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "514:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "372:159:1"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "548:0:1"
									},
									"scope": 321,
									"src": "351:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "9e7212ad",
									"id": 268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mergePositions",
									"nameLocation": "564:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "collateralToken",
												"nameLocation": "595:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "588:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$571",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 255,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 254,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 571,
														"src": "588:6:1"
													},
													"referencedDeclaration": 571,
													"src": "588:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$571",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "parentCollectionId",
												"nameLocation": "628:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "620:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "conditionId",
												"nameLocation": "664:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "656:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "partition",
												"nameLocation": "701:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "685:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 261,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "685:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 262,
													"nodeType": "ArrayTypeName",
													"src": "685:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "725:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "720:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "578:159:1"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:0:1"
									},
									"scope": 321,
									"src": "555:200:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "01b7037c",
									"id": 281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redeemPositions",
									"nameLocation": "770:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "collateralToken",
												"nameLocation": "802:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "795:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$571",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 270,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 269,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 571,
														"src": "795:6:1"
													},
													"referencedDeclaration": 571,
													"src": "795:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$571",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "parentCollectionId",
												"nameLocation": "835:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "827:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 272,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "conditionId",
												"nameLocation": "871:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "863:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 274,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "indexSets",
												"nameLocation": "908:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "892:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 276,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "892:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 277,
													"nodeType": "ArrayTypeName",
													"src": "892:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "785:138:1"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "940:0:1"
									},
									"scope": 321,
									"src": "761:180:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "d42dc0c2",
									"id": 288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOutcomeSlotCount",
									"nameLocation": "956:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "conditionId",
												"nameLocation": "993:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "985:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 282,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "985:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:35:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "1042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:6:1"
									},
									"scope": 321,
									"src": "947:101:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "852c6ae2",
									"id": 299,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getConditionId",
									"nameLocation": "1063:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "1095:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1087:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1087:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "questionId",
												"nameLocation": "1119:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1111:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 291,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "getOutcomeSlotCount",
												"nameLocation": "1144:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1139:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:92:1"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1201:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 296,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1201:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1200:9:1"
									},
									"scope": 321,
									"src": "1054:156:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "856296f7",
									"id": 310,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCollectionId",
									"nameLocation": "1225:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "parentCollectionId",
												"nameLocation": "1258:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "1250:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 300,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "conditionId",
												"nameLocation": "1294:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "1286:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "indexSet",
												"nameLocation": "1320:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "1315:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1315:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:94:1"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "1366:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 307,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:9:1"
									},
									"scope": 321,
									"src": "1216:159:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"functionSelector": "39dd7530",
									"id": 320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPositionId",
									"nameLocation": "1390:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "collateralToken",
												"nameLocation": "1420:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "1413:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$571",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 312,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 311,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 571,
														"src": "1413:6:1"
													},
													"referencedDeclaration": 571,
													"src": "1413:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$571",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "collectionId",
												"nameLocation": "1453:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "1445:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1403:68:1"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "1503:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1503:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:6:1"
									},
									"scope": 321,
									"src": "1381:128:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 322,
							"src": "107:1404:1",
							"usedErrors": []
						}
					],
					"src": "33:1478:1"
				},
				"id": 1
			},
			"contracts/IERC1155.sol": {
				"ast": {
					"absolutePath": "contracts/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							443
						],
						"IERC1155Receiver": [
							481
						],
						"IERC165": [
							493
						]
					},
					"id": 482,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 323,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": "contracts/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 482,
							"sourceUnit": 494,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 326,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 493,
										"src": "348:7:2"
									},
									"id": 327,
									"nodeType": "InheritanceSpecifier",
									"src": "348:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 325,
								"nodeType": "StructuredDocumentation",
								"src": "160:165:2",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 443,
							"linearizedBaseContracts": [
								443,
								493
							],
							"name": "IERC1155",
							"nameLocation": "336:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "362:121:2",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"id": 340,
									"name": "TransferSingle",
									"nameLocation": "494:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "525:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "509:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "551:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "535:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "573:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "557:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "585:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "577:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "597:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "589:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "589:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "508:95:2"
									},
									"src": "488:116:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "610:144:2",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"id": 355,
									"name": "TransferBatch",
									"nameLocation": "765:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "804:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "788:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "838:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "822:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "868:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "852:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "852:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "890:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "880:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 348,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "880:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 349,
													"nodeType": "ArrayTypeName",
													"src": "880:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "913:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "903:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 351,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "903:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 352,
													"nodeType": "ArrayTypeName",
													"src": "903:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:147:2"
									},
									"src": "759:167:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "932:147:2",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"id": 364,
									"name": "ApprovalForAll",
									"nameLocation": "1090:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1121:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1105:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1146:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1130:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1156:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1156:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1104:66:2"
									},
									"src": "1084:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "1177:343:2",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"id": 371,
									"name": "URI",
									"nameLocation": "1531:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1535:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 366,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1535:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1565:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1549:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1534:34:2"
									},
									"src": "1525:44:2"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "1575:173:2",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1762:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1780:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1772:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1772:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1797:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1789:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1789:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1771:29:2"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1824:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:9:2"
									},
									"scope": 443,
									"src": "1753:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "1839:188:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 394,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2041:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2075:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2056:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 383,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2056:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 384,
													"nodeType": "ArrayTypeName",
													"src": "2056:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2104:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2085:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 386,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2085:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 387,
													"nodeType": "ArrayTypeName",
													"src": "2085:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2055:53:2"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "2156:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 390,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2156:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 391,
													"nodeType": "ArrayTypeName",
													"src": "2156:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2155:18:2"
									},
									"scope": 443,
									"src": "2032:142:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "2180:248:2",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2442:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2468:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "2460:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2483:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "2478:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 398,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2478:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2459:33:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2501:0:2"
									},
									"scope": 443,
									"src": "2433:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "2508:135:2",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2657:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2682:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2674:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2674:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2699:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2691:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2673:35:2"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2732:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2732:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2731:6:2"
									},
									"scope": 443,
									"src": "2648:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2744:556:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3314:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3348:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3340:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3370:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3362:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3362:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3390:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3382:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3410:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3402:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3402:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3441:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3426:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 422,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3426:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3330:121:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3460:0:2"
									},
									"scope": 443,
									"src": "3305:156:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3467:390:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 442,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3871:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3910:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3902:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3902:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3932:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3924:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3924:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3963:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3944:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 432,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3944:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 433,
													"nodeType": "ArrayTypeName",
													"src": "3944:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3995:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3976:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 435,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3976:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 436,
													"nodeType": "ArrayTypeName",
													"src": "3976:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4027:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "4012:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4012:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3892:145:2"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4046:0:2"
									},
									"scope": 443,
									"src": "3862:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 482,
							"src": "326:3723:2",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 445,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 493,
										"src": "4121:7:2"
									},
									"id": 446,
									"nodeType": "InheritanceSpecifier",
									"src": "4121:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 444,
								"nodeType": "StructuredDocumentation",
								"src": "4051:39:2",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 481,
							"linearizedBaseContracts": [
								481,
								493
							],
							"name": "IERC1155Receiver",
							"nameLocation": "4101:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "4135:826:2",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 462,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "4975:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5010:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "5002:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5002:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5036:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "5028:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5028:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5058:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "5050:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5078:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "5070:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5070:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5108:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "5093:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 456,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5093:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4992:126:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "5137:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 459,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5137:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5136:8:2"
									},
									"scope": 481,
									"src": "4966:179:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "5151:994:2",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "6159:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6199:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "6191:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6191:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6225:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "6217:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "6258:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "6239:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 468,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6239:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 469,
													"nodeType": "ArrayTypeName",
													"src": "6239:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "6290:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "6271:25:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 471,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6271:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 472,
													"nodeType": "ArrayTypeName",
													"src": "6271:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6321:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "6306:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6181:150:2"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "6350:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 477,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6350:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6349:8:2"
									},
									"scope": 481,
									"src": "6150:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 482,
							"src": "4091:2269:2",
							"usedErrors": []
						}
					],
					"src": "110:6250:2"
				},
				"id": 2
			},
			"contracts/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							493
						]
					},
					"id": 494,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 483,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 484,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:3",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 493,
							"linearizedBaseContracts": [
								493
							],
							"name": "IERC165",
							"nameLocation": "415:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "801:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 486,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:3"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 489,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:3"
									},
									"scope": 493,
									"src": "774:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 494,
							"src": "405:447:3",
							"usedErrors": []
						}
					],
					"src": "100:752:3"
				},
				"id": 3
			},
			"contracts/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							571
						]
					},
					"id": 572,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 495,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 496,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 571,
							"linearizedBaseContracts": [
								571
							],
							"name": "IERC20",
							"nameLocation": "212:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 505,
									"name": "Transfer",
									"nameLocation": "394:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "403:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "425:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "445:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:4"
									},
									"src": "388:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 514,
									"name": "Approval",
									"nameLocation": "625:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "634:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "657:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "682:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:4"
									},
									"src": "619:78:4"
								},
								{
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 571,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 571,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1211:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1223:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:4"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1257:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 535,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:4"
									},
									"scope": 571,
									"src": "1193:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1557:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1572:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:4"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1612:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:4"
									},
									"scope": 571,
									"src": "1538:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 558,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2291:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2308:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:4"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2342:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 555,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:4"
									},
									"scope": 571,
									"src": "2274:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:4",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2677:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2699:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2719:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:4"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2758:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:4"
									},
									"scope": 571,
									"src": "2646:118:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 572,
							"src": "202:2564:4",
							"usedErrors": []
						}
					],
					"src": "106:2660:4"
				},
				"id": 4
			}
		}
	}
}